{"ast":null,"code":"import _toConsumableArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n/** My Client gRPC - to Golang gRPC Server */\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n  /** Info Subasta */\n\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n  /** Lista de productos en subasta */\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n  /** Producto actual en Subasta */\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoEnSubastaActual = _useState6[0],\n      setProductoEnSubastaActual = _useState6[1];\n  /** Producto subasta */\n\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      subastaProductoActual = _useState8[0],\n      setSubastaProductoActual = _useState8[1];\n  /** Set Precio de oferta */\n\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      winnerOferta = _useState10[0],\n      setWinnerOferta = _useState10[1];\n  /** Error form add oferta */\n\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error_message = _useState12[0],\n      setErrorMessage = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      rows = _useState14[0],\n      setRows = _useState14[1];\n\n  var _useState15 = useState(undefined),\n      _useState16 = _slicedToArray(_useState15, 2),\n      valSubastaOferta = _useState16[0],\n      setValSubastaOferta = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      user = _useState18[0],\n      setUser = _useState18[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token;\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      fecha = _useState20[0],\n      setFecha = _useState20[1];\n\n  var _useState21 = useState(\"00\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      second = _useState22[0],\n      setSecond = _useState22[1];\n\n  var _useState23 = useState(\"00\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      minute = _useState24[0],\n      setMinute = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      startCount = _useState26[0],\n      setStartCount = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      subastaFinalizada = _useState28[0],\n      setSubastaFinalizada = _useState28[1];\n  /** Controles de tiempo */\n\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      inicio = _useState30[0],\n      setInicio = _useState30[1];\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      duracion = _useState32[0],\n      setDuracion = _useState32[1];\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      fin = _useState34[0],\n      setFin = _useState34[1];\n\n  useEffect(function () {\n    /** The Subasta */\n    getSubasta();\n    /** Products from subasta */\n\n    getSubastaProductos();\n    /** Ofertas */\n    //getSubastaOfertas();\n\n    /** Set Data for User */\n\n    getUser();\n    getTest();\n  }, []);\n\n  var getTest = function getTest() {\n    var fecha1 = moment(\"2022-04-07 09:30:00\");\n    var fecha2 = moment(\"2022-04-07 09:30:00\");\n    /*   \n    console.log(\"fecha1: \", fecha1);\n    console.log(\"fecha2: \", fecha2);\n     console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n    \n     console.log(\"Se agrego 10 minutos a la fecha 2\");\n    fecha2.add(10, 'minute');\n    console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n     */\n  };\n  /** Hacer generica la funcion para reutilizarla en el proximo producto */\n\n\n  useEffect(function () {\n    if (duracion && inicio) {\n      /* let interval = setInterval(() => {\n          let _fecha = moment(inicio)\n          let actual = moment();\n          let tiempo_maximo = moment(inicio);\n          tiempo_maximo.add(duracion, 'minute');\n           let diferencia_tiempo_maximo = actual.diff(tiempo_maximo, 'minute');\n          let diferencia_t_m_seconds = actual.diff(tiempo_maximo, 'second');\n          \n          if(actual > tiempo_maximo){ // Llego tarde.\n              let fecha = \"Ya ha finalizado este fragmento de subasta . . . \"\n              setFecha(fecha);\n              setStartCount(false);\n              clearInterval(interval);\n              return ;\n          }\n           if(diferencia_tiempo_maximo == 0 && diferencia_t_m_seconds == 0){ // quedo no tocar\n              let fecha = \"El tiempo de subasta de este producto ha terminado . . . \"\n              setFecha(fecha);\n              setStartCount(false);\n              clearInterval(interval);\n              return ;\n          }\n           var diferencia = _fecha.diff(actual, 'minute');\n          var dif_seconds = _fecha.diff(actual, 'second');\n           if (diferencia == 0 && dif_seconds == 0){                                        \n              let fecha = \"Ha comenzado la subasta . . .\";\n              setFecha(fecha);\n              setStartCount(true);\n               return ;\n          }\n           if (diferencia <= 0 && dif_seconds <= 0){\n              console.log(diferencia, \" --------- DENTRO DEL TIEMPO DE SUBASTA --------- \", dif_seconds);\n              let min = (diferencia !== 0) ? (diferencia*-1) : diferencia;\n              let segundo = (dif_seconds !== 0) ? (dif_seconds*-1) : dif_seconds;\n               setMinute(min);\n              setSecond(segundo);\n              setStartCount(true);\n               return ;\n          }\n           if(diferencia >= 0 && dif_seconds > 0){ // quedo ! no tocar\n              let fecha = \"ComenzarÃ¡ en \"+ diferencia + \" minutos \" + (dif_seconds-(diferencia*60)) + \" segundos.\";\n              setFecha(fecha)\n          }\n      }, 1000) */\n    }\n  }, [inicio, duracion, productoEnSubastaActual]); // Se ejecuta cuando la variable fecha esta lista\n\n  var getUser = function getUser() {\n    var token_decoded = jwt_decode(token);\n    var user = {\n      users_id: token_decoded.users_id,\n      name: token_decoded.name,\n      photo: token_decoded.profile_photo_path\n    };\n    setUser(user);\n  };\n\n  var getSubastaOfertas = function getSubastaOfertas() {\n    console.log(\"Obteniendo subastas ofertas -- from server golang\");\n    var request = new proto.SubastaProductoId();\n    request.setId(productoEnSubastaActual.id);\n    var stream = subastaService.getSubastaOfertas(request, {});\n    stream.on('data', function (response) {\n      var record = {\n        user: response.getUser(),\n        oferta: response.getOfertaPrecio()\n      };\n\n      if (record.oferta > winnerOferta) {\n        setWinnerOferta(record.oferta);\n      }\n\n      setRows(function (rows) {\n        return [].concat(_toConsumableArray(rows), [record]);\n      });\n    });\n  };\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          duracion: response.getDuracion(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n        setInicio(response.getFecha());\n        setDuracion(response.getDuracion());\n      }\n    });\n  }\n\n  var getSubastaProductos = function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id); // Id from param \n\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            },\n            activo: subastaProducto.array[2],\n            oferta_final: subastaProducto.array[3],\n            subastas_ofertas_id_winner: subastaProducto.array[4],\n            status: subastaProducto.array[5],\n            orden: response.array[6],\n            inicio: response.array[7]\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n      }\n    });\n  };\n  /** Importante obtener el producto actual en subasta o si no setear el producto que debe subastarse */\n\n\n  useEffect(function () {\n    getProductoEnSubasta();\n  }, []); // sin [] se ejecuta indeterminadamente\n\n  /** Obtener el producto en subasta si ya existe --- o si no crearlo */\n\n  var getProductoEnSubasta = function getProductoEnSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id); // id from params\n\n    subastaService.getSubastaProductoEnSubasta(request, {}, function (error, response) {\n      console.log(\"Error al obtener producto en subasta: \", error.code, error.message);\n\n      if (error) {\n        subastaService.getSubastaProductoEnEspera(request, {}, function (error, response) {\n          if (!error) {\n            var _subastaProductoActual;\n\n            _subastaProductoActual = SetterSubastaProducto(response);\n            setSubastaProductoActual(_subastaProductoActual);\n            setProductoEnSubastaActual(_subastaProductoActual[0].producto);\n          }\n        });\n      }\n\n      if (!error) {\n        var subastaProducto = SetterSubastaProducto(response);\n        setSubastaProductoActual(subastaProducto);\n        setProductoEnSubastaActual(subastaProducto[0].producto);\n      }\n\n      console.log(\"\");\n    });\n  };\n\n  var handlerCreateSubastaOferta = function handlerCreateSubastaOferta(e) {\n    e.preventDefault();\n\n    if (!(valSubastaOferta !== \"\" && valSubastaOferta > productoEnSubastaActual.precio_inicial)) {\n      setErrorMessage('El valor de oferta de ser superior o igual al precio inicial.');\n      return;\n    }\n\n    var ofertaGanadora = 0;\n\n    if (winnerOferta === 0) {\n      ofertaGanadora = productoEnSubastaActual.precio_inicial;\n    } else {\n      ofertaGanadora = winnerOferta;\n    }\n\n    ;\n    console.log(winnerOferta, productoEnSubastaActual.precio_inicial, ofertaGanadora + productoEnSubastaActual.precio_aumento);\n\n    if (!(valSubastaOferta >= ofertaGanadora + productoEnSubastaActual.precio_aumento)) {\n      setErrorMessage('El valor de oferta de ser superior o igual al precio ganador + el precio de aumento del producto.');\n      return;\n    }\n\n    var subastaOfertaCreate = new proto.SubastaOfertaCreate();\n    subastaOfertaCreate.setUsersId(user.users_id);\n    subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n    subastaOfertaCreate.setSubastasProductosId(1);\n    subastaService.addSubastaOferta(subastaOfertaCreate, {}, function (error, _) {\n      if (error !== null) console.log(error.code, error.message);\n    });\n    setValSubastaOferta(undefined);\n    document.getElementById('valSubastaOferta').value = '';\n  };\n\n  var SetterSubastaProducto = function SetterSubastaProducto(response) {\n    var subastaProducto = [{\n      id: response.array[0],\n      producto: {\n        productos_id: response.array[1][0],\n        producto: response.array[1][1],\n        descripcion: response.array[1][2],\n        stock: response.array[1][3],\n        precio_inicial: response.array[1][4],\n        precio_aumento: response.array[1][5],\n        precio_subasta: response.array[1][6],\n        cliente: {\n          cliente_id: response.array[1][7][0],\n          cliente: response.array[1][7][1],\n          cuit: response.array[1][7][2],\n          direccion: response.array[1][7][3],\n          ciudad: response.array[1][7][4],\n          iva: response.array[1][7][5]\n        }\n      },\n      activo: response.array[2],\n      oferta_final: response.array[3],\n      subastas_ofertas_id_winner: response.array[4],\n      status: response.array[5],\n      orden: response.array[6],\n      inicio: response.array[7]\n    }];\n    return subastaProducto;\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, subasta.subasta), productoEnSubastaActual !== undefined && subastaProductoActual !== undefined && /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 114\n    }\n  }, \"Subastando - \", productoEnSubastaActual.producto, \" / \", subastaProductoActual.status, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 118\n    }\n  }), \"Unidades - \", productoEnSubastaActual.stock, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 80\n    }\n  }), \"Inicio - \", productoEnSubastaActual.inicio, \"Orden - \", productoEnSubastaActual.orden)), startCount && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 44\n    }\n  }, winnerOferta > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"outlined\",\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 37\n    }\n  }, \"Oferta ganadora: \", winnerOferta)), error_message !== '' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 37\n    }\n  }, error_message)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputProps: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*'\n    },\n    style: {\n      height: '38px'\n    },\n    id: \"valSubastaOferta\",\n    onChange: function onChange(e) {\n      return setValSubastaOferta(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Ofertar\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlerCreateSubastaOferta,\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"large\"\n    /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n    ,\n    style: {\n      padding: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 37\n    }\n  }, \"Ofertar\"))), startCount && /*#__PURE__*/React.createElement(DataGridSubastaOfertas, {\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '40px',\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 33\n    }\n  }, fecha), startCount && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    sx: {\n      borderRadius: 1,\n      backgroundColor: '#e6e6e6',\n      margin: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 37\n    }\n  }, minute, \" : \", second))), subastaProductoActual && /*#__PURE__*/React.createElement(StepperVertical, {\n    steps: subastaProductos,\n    actual: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 55\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useParams","Alert","Box","Button","Container","Grid","TextField","Typography","proto","DataGridSubastaOfertas","Layout","useToken","jwt_decode","StepperVertical","moment","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoEnSubastaActual","setProductoEnSubastaActual","subastaProductoActual","setSubastaProductoActual","winnerOferta","setWinnerOferta","error_message","setErrorMessage","rows","setRows","undefined","valSubastaOferta","setValSubastaOferta","user","setUser","token","fecha","setFecha","second","setSecond","minute","setMinute","startCount","setStartCount","subastaFinalizada","setSubastaFinalizada","inicio","setInicio","duracion","setDuracion","fin","setFin","getSubasta","getSubastaProductos","getUser","getTest","fecha1","fecha2","token_decoded","users_id","name","photo","profile_photo_path","getSubastaOfertas","console","log","request","SubastaProductoId","setId","stream","on","response","record","oferta","getOfertaPrecio","SubastaId","metadata","err","code","message","getId","getFecha","activo","getActivo","getDuracion","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","oferta_final","subastas_ofertas_id_winner","status","orden","getProductoEnSubasta","getSubastaProductoEnSubasta","error","getSubastaProductoEnEspera","SetterSubastaProducto","handlerCreateSubastaOferta","e","preventDefault","ofertaGanadora","subastaOfertaCreate","SubastaOfertaCreate","setUsersId","setOfertaPrecio","setSubastasProductosId","addSubastaOferta","_","document","getElementById","value","paddingTop","paddingBottom","inputMode","pattern","height","target","padding","display","justifyContent","width","borderRadius","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n\n\n/** My Client gRPC - to Golang gRPC Server */\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n\n    /** Info Subasta */\n    const [subasta, setSubasta] = useState({});\n\n    /** Lista de productos en subasta */\n    const [subastaProductos, setSubastaProductos] = useState([]);\n\n    /** Producto actual en Subasta */\n    const [productoEnSubastaActual, setProductoEnSubastaActual] = useState([]);\n\n    /** Producto subasta */\n    const [subastaProductoActual, setSubastaProductoActual] = useState([]);\n    \n    /** Set Precio de oferta */\n    const [winnerOferta, setWinnerOferta] = useState([]);\n\n    /** Error form add oferta */\n    const [error_message, setErrorMessage] = useState('')\n    const [rows, setRows] = useState([]);\n    const [valSubastaOferta, setValSubastaOferta] = useState(undefined);\n    const [user, setUser] = useState({});\n    const { token } = useToken();\n    const [fecha, setFecha] = useState(\"\");\n    const [second, setSecond] = useState(\"00\");\n    const [minute, setMinute] = useState(\"00\");\n    const [startCount, setStartCount] = useState(false);\n    const [subastaFinalizada, setSubastaFinalizada] = useState(false);\n    \n    /** Controles de tiempo */\n    const [inicio, setInicio] = useState();\n    const [duracion, setDuracion] = useState();\n    const [fin, setFin] = useState();\n\n    useEffect(() => {\n        /** The Subasta */\n        getSubasta();\n\n        /** Products from subasta */\n        getSubastaProductos();\n\n        /** Ofertas */\n        //getSubastaOfertas();\n\n        /** Set Data for User */\n        getUser();\n\n\n        getTest();\n    }, [])\n\n    const getTest = () => {\n        var fecha1 = moment(\"2022-04-07 09:30:00\");\n        var fecha2 = moment(\"2022-04-07 09:30:00\");\n\n        /*   \n        console.log(\"fecha1: \", fecha1);\n        console.log(\"fecha2: \", fecha2);\n\n        console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n        \n\n        console.log(\"Se agrego 10 minutos a la fecha 2\");\n        fecha2.add(10, 'minute');\n        console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n\n        */\n    }\n\n    /** Hacer generica la funcion para reutilizarla en el proximo producto */\n    useEffect(() => {\n        if(duracion && inicio){\n            /* let interval = setInterval(() => {\n                let _fecha = moment(inicio)\n                let actual = moment();\n                let tiempo_maximo = moment(inicio);\n                tiempo_maximo.add(duracion, 'minute');\n\n                let diferencia_tiempo_maximo = actual.diff(tiempo_maximo, 'minute');\n                let diferencia_t_m_seconds = actual.diff(tiempo_maximo, 'second');\n                \n                if(actual > tiempo_maximo){ // Llego tarde.\n                    let fecha = \"Ya ha finalizado este fragmento de subasta . . . \"\n                    setFecha(fecha);\n                    setStartCount(false);\n                    clearInterval(interval);\n                    return ;\n                }\n\n                if(diferencia_tiempo_maximo == 0 && diferencia_t_m_seconds == 0){ // quedo no tocar\n                    let fecha = \"El tiempo de subasta de este producto ha terminado . . . \"\n                    setFecha(fecha);\n                    setStartCount(false);\n                    clearInterval(interval);\n                    return ;\n                }\n\n                var diferencia = _fecha.diff(actual, 'minute');\n                var dif_seconds = _fecha.diff(actual, 'second');\n\n                if (diferencia == 0 && dif_seconds == 0){                                        \n                    let fecha = \"Ha comenzado la subasta . . .\";\n                    setFecha(fecha);\n                    setStartCount(true);\n\n                    return ;\n                }\n\n                if (diferencia <= 0 && dif_seconds <= 0){\n                    console.log(diferencia, \" --------- DENTRO DEL TIEMPO DE SUBASTA --------- \", dif_seconds);\n                    let min = (diferencia !== 0) ? (diferencia*-1) : diferencia;\n                    let segundo = (dif_seconds !== 0) ? (dif_seconds*-1) : dif_seconds;\n\n                    setMinute(min);\n                    setSecond(segundo);\n                    setStartCount(true);\n\n                    return ;\n                }\n\n                if(diferencia >= 0 && dif_seconds > 0){ // quedo ! no tocar\n                    let fecha = \"ComenzarÃ¡ en \"+ diferencia + \" minutos \" + (dif_seconds-(diferencia*60)) + \" segundos.\";\n                    setFecha(fecha)\n                }\n            }, 1000) */\n        }\n    }, [inicio, duracion, productoEnSubastaActual]) // Se ejecuta cuando la variable fecha esta lista\n\n    const getUser = () => {\n        var token_decoded = jwt_decode(token);\n        let user = {\n            users_id: token_decoded.users_id,\n            name: token_decoded.name,\n            photo: token_decoded.profile_photo_path,\n        }\n        setUser(user);\n    }\n\n    const getSubastaOfertas = () => {\n        console.log(\"Obteniendo subastas ofertas -- from server golang\")\n    \n        let request = new proto.SubastaProductoId();\n        request.setId(productoEnSubastaActual.id)\n        var stream = subastaService.getSubastaOfertas(request, {});\n\n        stream.on('data', function(response){\n            let record = {\n                user: response.getUser(),\n                oferta: response.getOfertaPrecio()\n            };   \n\n            if(record.oferta > winnerOferta){\n                setWinnerOferta(record.oferta)\n            }\n\n            setRows((rows) => [...rows, record])\n        })\n\n    };\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n            if (err) {\n                console.log(err.code, err.message);\n            } else {\n                let subasta = {\n                    id: response.getId(),\n                    subasta: response.getSubasta(),\n                    fecha: response.getFecha(),\n                    activo: response.getActivo(),\n                    duracion: response.getDuracion(),\n                    created_at: response.getCreatedAt(),\n                    updated_at: response.getUpdatedAt()\n                }\n\n                setSubasta(subasta);\n                setInicio(response.getFecha());\n                setDuracion(response.getDuracion());\n            }\n        });\n    }\n\n    const getSubastaProductos = () => {\n        var request = new proto.SubastaId()\n        request.setId(id) // Id from param \n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                },\n                            },\n                            activo: subastaProducto.array[2],\n                            oferta_final: subastaProducto.array[3],\n                            subastas_ofertas_id_winner: subastaProducto.array[4],\n                            status: subastaProducto.array[5],\n                            orden: response.array[6],\n                            inicio: response.array[7],\n                        }\n                    })\n                setSubastaProductos(subastaProductosList);\n            }\n        });\n    }\n\n    /** Importante obtener el producto actual en subasta o si no setear el producto que debe subastarse */\n    useEffect(() => {\n        getProductoEnSubasta();\n    }, []) // sin [] se ejecuta indeterminadamente\n\n    /** Obtener el producto en subasta si ya existe --- o si no crearlo */\n    const getProductoEnSubasta = () => {\n        let request = new proto.SubastaId()\n        request.setId(id) // id from params\n\n        subastaService.getSubastaProductoEnSubasta(request, {}, (error, response) => {\n            console.log(\"Error al obtener producto en subasta: \", error.code, error.message);\n            if(error){\n                subastaService.getSubastaProductoEnEspera(request, {}, (error, response) => {\n                    if(!error) {\n                        let subastaProductoActual\n                        subastaProductoActual = SetterSubastaProducto(response);\n                    \n                        setSubastaProductoActual(subastaProductoActual);\n                        setProductoEnSubastaActual(subastaProductoActual[0].producto);\n                    }\n                })\n            }\n\n            if(!error){\n                let subastaProducto = SetterSubastaProducto(response)            \n                setSubastaProductoActual(subastaProducto)\n                setProductoEnSubastaActual(subastaProducto[0].producto);\n            }\n\n\n            console.log(\"\")\n        })\n    }\n\n\n    const handlerCreateSubastaOferta = (e) => {\n        e.preventDefault();\n\n        if(!(valSubastaOferta !== \"\" && valSubastaOferta > productoEnSubastaActual.precio_inicial)) {\n            setErrorMessage('El valor de oferta de ser superior o igual al precio inicial.');\n            return ;\n        }\n\n        var ofertaGanadora = 0;\n        if(winnerOferta === 0) {\n            ofertaGanadora = productoEnSubastaActual.precio_inicial} \n        else {\n            ofertaGanadora = winnerOferta;\n        };\n        console.log(winnerOferta, productoEnSubastaActual.precio_inicial, ofertaGanadora+productoEnSubastaActual.precio_aumento)\n        if(!(valSubastaOferta >= (ofertaGanadora+productoEnSubastaActual.precio_aumento))){\n            setErrorMessage('El valor de oferta de ser superior o igual al precio ganador + el precio de aumento del producto.');\n            return ;\n        } \n\n        let subastaOfertaCreate = new proto.SubastaOfertaCreate();\n        subastaOfertaCreate.setUsersId(user.users_id);\n        subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n        subastaOfertaCreate.setSubastasProductosId(1);\n\n        subastaService.addSubastaOferta(subastaOfertaCreate, {}, (error, _) => {\n            if(error !== null) console.log(error.code, error.message);\n        });\n\n        setValSubastaOferta(undefined)\n        document.getElementById('valSubastaOferta').value = '';\n    }\n\n\n    const SetterSubastaProducto = (response) => {\n        let subastaProducto = [{\n            id: response.array[0],\n            producto: {\n                productos_id: response.array[1][0],\n                producto: response.array[1][1],\n                descripcion: response.array[1][2],\n                stock: response.array[1][3],\n                precio_inicial: response.array[1][4],\n                precio_aumento: response.array[1][5],\n                precio_subasta: response.array[1][6],\n                cliente: {\n                    cliente_id: response.array[1][7][0],\n                    cliente: response.array[1][7][1],\n                    cuit: response.array[1][7][2],\n                    direccion: response.array[1][7][3],\n                    ciudad: response.array[1][7][4],\n                    iva: response.array[1][7][5],\n                },\n            },\n            activo: response.array[2],\n            oferta_final: response.array[3],\n            subastas_ofertas_id_winner: response.array[4],\n            status: response.array[5],\n            orden: response.array[6],\n            inicio: response.array[7],\n        }];\n\n        return subastaProducto;\n    }\n\n    return (\n        <Layout>\n            <Box sx={{ paddingTop: 8 }}>\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item xs={5} align=\"left\">      \n                            <Box style={{ paddingBottom: '20px' }}>\n                                <Typography variant=\"h1\" fontSize={40}>\n                                    {subasta.subasta}\n                                </Typography> \n\n                                {productoEnSubastaActual !== undefined && subastaProductoActual !== undefined && <Typography>\n                                    Subastando - {productoEnSubastaActual.producto} / {subastaProductoActual.status} <br></br>  \n                                    Unidades - {productoEnSubastaActual.stock} <br></br>\n                                    Inicio - {productoEnSubastaActual.inicio}\n                                    Orden - {productoEnSubastaActual.orden}\n                                </Typography>}    \n                            </Box>\n\n\n                            {startCount && <Grid container>   \n                                {winnerOferta > 0 &&\n                                <Grid item xs={12} paddingY={4}>\n                                    <Alert  variant=\"outlined\" severity=\"success\">\n                                        Oferta ganadora: { winnerOferta }\n                                    </Alert>\n                                </Grid>}\n\n\n                                {error_message !== '' &&\n                                <Grid item xs={12} paddingBottom={4}> \n                                    <Alert severity=\"error\">{ error_message }</Alert>  \n                                </Grid>}\n\n                                <Grid item xs={8}>\n                                    <TextField \n                                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*'  }}\n                                        style={{ height:'38px' }}\n                                        id=\"valSubastaOferta\" \n                                        onChange={(e) => setValSubastaOferta(e.target.value)} \n                                        fullWidth \n                                        label=\"Ofertar\" \n                                        variant=\"outlined\" \n                                    />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={handlerCreateSubastaOferta} fullWidth variant=\"outlined\" size=\"large\" \n                                        /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n                                        style={{ padding:'14px' }}\n                                    >\n                                        Ofertar\n                                    </Button>\n                                </Grid>\n                            </Grid>}\n\n\n                            {startCount && <DataGridSubastaOfertas rows={rows} />}\n                            \n                        </Grid>\n\n                        <Grid item xs={7}>  \n                                \n                            <Box style={{ paddingBottom: '40px', paddingTop: '20px' }}>\n                                <Typography align='center'>\n                                    {fecha} \n                                </Typography>\n                                \n                                {startCount && \n                                <div style={{ display:'flex', justifyContent:'center', width:'100%' }}>\n                                    <Box padding={2} sx={{ borderRadius: 1, backgroundColor: '#e6e6e6', margin: 1 }}>\n                                        {minute} : {second} \n                                    </Box>\n                                </div>}\n\n                            </Box>\n                            {subastaProductoActual && <StepperVertical steps={subastaProductos} actual={0} />}\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </Layout>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}