{"ast":null,"code":"import _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Card, CardContent, Container, Grid, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n\n  useEffect(function () {\n    getSubasta();\n    getSubastaProductos();\n    console.log(subastaProductos);\n  }, []);\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n      }\n    });\n  }\n\n  function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            }\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, subasta.subasta), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Productos en subasta (\", subastaProductos.length, \")\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      marginY: 5,\n      borderColor: 'divider'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StepperListSubastaProductos, {\n    subastaProductos: subastaProductos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\nfunction StepperListSubastaProductos(_ref) {\n  var _this = this;\n\n  var subastaProductos = _ref.subastaProductos;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, subastaProductos && subastaProductos.map(function (subastaproducto, i) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      key: \"{subastaproducto.id}\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(SubastaProductosCard, Object.assign({}, subastaproducto, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    })));\n  }))));\n}\n\nfunction SubastaProductosCard(_ref2) {\n  var producto = _ref2.producto;\n  return /*#__PURE__*/React.createElement(Card, {\n    key: \"producto.id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      fontSize: 14\n    },\n    color: \"text.secondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, producto.producto), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, producto.producto.stock)));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useParams","Box","Card","CardContent","Container","Grid","Typography","proto","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","getSubasta","getSubastaProductos","console","log","request","SubastaId","setId","metadata","err","response","code","message","getId","fecha","getFecha","activo","getActivo","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","paddingTop","length","width","marginY","borderColor","StepperListSubastaProductos","subastaproducto","i","SubastaProductosCard","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Box, Card, CardContent, Container, Grid, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n    const [subasta, setSubasta] = useState({});\n    const [subastaProductos, setSubastaProductos] = useState([]);\n\n    useEffect(()=>{\n        getSubasta();\n        getSubastaProductos();\n        console.log(subastaProductos);\n    }, [])\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n          if (err) {\n            console.log(err.code, err.message);\n          } else {\n            let subasta = {\n                id: response.getId(),\n                subasta: response.getSubasta(),\n                fecha: response.getFecha(),\n                activo: response.getActivo(),\n                created_at: response.getCreatedAt(),\n                updated_at: response.getUpdatedAt()\n            }\n            setSubasta(subasta);\n          }\n        });\n    }\n\n    function getSubastaProductos(){\n        var request = new proto.SubastaId()\n        request.setId(id)\n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                }\n                            }\n                        }\n                    })\n\n                setSubastaProductos(subastaProductosList);\n            }\n        });\n    }\n\n   \n\n   \n\n    return (\n        <>\n            <Box sx={{ paddingTop: 4 }}>\n                <Container>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>      \n                            <Typography variant=\"h1\" fontSize={40} align=\"left\">\n                                {subasta.subasta}\n                            </Typography>        \n                            <Typography variant=\"h5\" align=\"left\">\n                                Productos en subasta ({ subastaProductos.length})    \n                            </Typography>    \n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Box sx={{ width: '100%' }}>\n                                <Box sx={{ marginY: 5, borderColor: 'divider' }}>\n                                    <StepperListSubastaProductos subastaProductos={subastaProductos}/>\n                                </Box>\n                            </Box>   \n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </>\n    )\n}\n\n\nfunction StepperListSubastaProductos ({subastaProductos}){\n    return (\n        <>\n            <Container>\n                <Grid container spacing={2}>\n                {subastaProductos && subastaProductos.map((subastaproducto, i) => {\n                        return <Grid item xs={4} key=\"{subastaproducto.id}\">\n                            <SubastaProductosCard {...subastaproducto} />\n                        </Grid> \n                    }\n                )}\n                </Grid>\n            </Container>\n        </>\n    )\n\n}\n\n\nfunction SubastaProductosCard({producto}){\n    return (\n        <Card key=\"producto.id\">\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    { producto.producto }\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    { producto.producto.stock }\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}