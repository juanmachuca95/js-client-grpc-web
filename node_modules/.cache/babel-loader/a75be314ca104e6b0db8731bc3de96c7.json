{"ast":null,"code":"import _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Login.js\";\n// eslint-disable-next-line \nimport React, { useState } from \"react\";\nimport { Button, Box, Grid, TextField, Alert } from \"@mui/material\";\nimport proto from './pb/proto_grpc_web_pb';\nvar loginService = new proto.LoginServiceClient('http://0.0.0.0:8000');\nexport default function Login(_ref) {\n  var setToken = _ref.setToken;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error_message = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (email !== \"\" && password !== \"\") {\n      var request = new proto.LoginRequest();\n      request.setEmail(email);\n      request.setPassword(password);\n      loginService.login(request, {}, function (error, response) {\n        if (error) {\n          setErrorMessage(error.message);\n          return;\n        }\n\n        if (response.getError()) {\n          setErrorMessage(response.getError());\n          return;\n        }\n\n        setToken(response.getToken());\n        setEmail('');\n        setPassword('');\n        return;\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    style: {\n      minHeight: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, error_message !== undefined && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, error_message)), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    id: \"email\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    type: \"text\",\n    sx: {\n      mt: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    id: \"password\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    sx: {\n      mt: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    sx: {\n      mt: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Log in\"))));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Login.js"],"names":["React","useState","Button","Box","Grid","TextField","Alert","proto","loginService","LoginServiceClient","Login","setToken","email","setEmail","password","setPassword","error_message","setErrorMessage","handleSubmit","e","preventDefault","request","LoginRequest","login","error","response","message","getError","getToken","minHeight","undefined","target","value","mt"],"mappings":"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","sourcesContent":["// eslint-disable-next-line \nimport React, { useState } from \"react\";\nimport { Button, Box, Grid, TextField, Alert } from \"@mui/material\";\nimport proto from './pb/proto_grpc_web_pb'\n\nvar loginService = new proto.LoginServiceClient('http://0.0.0.0:8000');\n\nexport default function Login ({setToken}){\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [error_message, setErrorMessage] = useState();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (email !== \"\" && password !== \"\"){\n            let request = new proto.LoginRequest();\n            request.setEmail(email);\n            request.setPassword(password);\n            loginService.login(request, {}, (error, response) => { \n                if(error){\n                    setErrorMessage(error.message)\n                    return ;\n                }\n\n                if(response.getError()){\n                    setErrorMessage(response.getError())\n                    return ;\n                }\n\n                setToken(response.getToken())\n                setEmail('');\n                setPassword('');\n                return ;\n            })\n        }\n    }\n\n    return (\n        <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            style={{ minHeight: '100vh' }}\n            >\n\n            <Grid item xs={3}>\n                <Box \n                    component=\"form\"\n                    onSubmit={handleSubmit}\n\n                >\n                    {error_message !== undefined &&\n                    <Grid item xs={12}> \n                        <Alert severity=\"error\">{ error_message }</Alert>  \n                    </Grid>}\n\n                    <TextField\n                        label=\"Email\"\n                        id=\"email\"\n                        fullWidth\n                        onChange={e => setEmail(e.target.value)}\n                        type=\"text\"\n\n                        sx={{ mt: 3 }}\n                    />\n                    <TextField\n                        label=\"Password\"\n                        id=\"password\"\n                        fullWidth\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n\n                        sx={{ mt: 3 }}\n\n                    />\n\n                    <Button \n                        type=\"submit\"\n                        fullWidth\n                        sx={{ mt: 3 }}\n                        >\n                        Log in\n                    </Button>\n                </Box>\n            </Grid>       \n        </Grid> \n    );\n}\n"]},"metadata":{},"sourceType":"module"}