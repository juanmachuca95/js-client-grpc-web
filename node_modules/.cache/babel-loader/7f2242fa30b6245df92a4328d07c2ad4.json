{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar grpc = {};\ngrpc.web = require('grpc-web');\n\nvar proto = require('./proto_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.SubastaServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.SubastaServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.Subastas>}\n */\n\n\nvar methodDescriptor_SubastaService_GetSubastas = new grpc.web.MethodDescriptor('/SubastaService/GetSubastas', grpc.web.MethodType.UNARY, proto.Empty, proto.Subastas,\n/**\n * @param {!proto.Empty} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.Subastas.deserializeBinary);\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Subastas)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Subastas>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.getSubastas = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/GetSubastas', request, metadata || {}, methodDescriptor_SubastaService_GetSubastas, callback);\n};\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Subastas>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.getSubastas = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/GetSubastas', request, metadata || {}, methodDescriptor_SubastaService_GetSubastas);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.SubastaProducto>}\n */\n\n\nvar methodDescriptor_SubastaService_GetSubastaProductoEnSubasta = new grpc.web.MethodDescriptor('/SubastaService/GetSubastaProductoEnSubasta', grpc.web.MethodType.UNARY, proto.SubastaId, proto.SubastaProducto,\n/**\n * @param {!proto.SubastaId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.SubastaProducto.deserializeBinary);\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.SubastaProducto)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaProducto>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.getSubastaProductoEnSubasta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/GetSubastaProductoEnSubasta', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaProductoEnSubasta, callback);\n};\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.SubastaProducto>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.getSubastaProductoEnSubasta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/GetSubastaProductoEnSubasta', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaProductoEnSubasta);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.SubastaProducto>}\n */\n\n\nvar methodDescriptor_SubastaService_GetSubastaProductoEnEspera = new grpc.web.MethodDescriptor('/SubastaService/GetSubastaProductoEnEspera', grpc.web.MethodType.UNARY, proto.SubastaId, proto.SubastaProducto,\n/**\n * @param {!proto.SubastaId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.SubastaProducto.deserializeBinary);\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.SubastaProducto)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaProducto>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.getSubastaProductoEnEspera = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/GetSubastaProductoEnEspera', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaProductoEnEspera, callback);\n};\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.SubastaProducto>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.getSubastaProductoEnEspera = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/GetSubastaProductoEnEspera', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaProductoEnEspera);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.Subasta>}\n */\n\n\nvar methodDescriptor_SubastaService_GetSubasta = new grpc.web.MethodDescriptor('/SubastaService/GetSubasta', grpc.web.MethodType.UNARY, proto.SubastaId, proto.Subasta,\n/**\n * @param {!proto.SubastaId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.Subasta.deserializeBinary);\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Subasta)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Subasta>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.getSubasta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/GetSubasta', request, metadata || {}, methodDescriptor_SubastaService_GetSubasta, callback);\n};\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Subasta>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.getSubasta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/GetSubasta', request, metadata || {}, methodDescriptor_SubastaService_GetSubasta);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.SubastaProductos>}\n */\n\n\nvar methodDescriptor_SubastaService_GetSubastaProductos = new grpc.web.MethodDescriptor('/SubastaService/GetSubastaProductos', grpc.web.MethodType.UNARY, proto.SubastaId, proto.SubastaProductos,\n/**\n * @param {!proto.SubastaId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.SubastaProductos.deserializeBinary);\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.SubastaProductos)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaProductos>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.getSubastaProductos = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/GetSubastaProductos', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaProductos, callback);\n};\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.SubastaProductos>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.getSubastaProductos = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/GetSubastaProductos', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaProductos);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaProductoId,\n *   !proto.SubastaOferta>}\n */\n\n\nvar methodDescriptor_SubastaService_GetSubastaOfertas = new grpc.web.MethodDescriptor('/SubastaService/GetSubastaOfertas', grpc.web.MethodType.SERVER_STREAMING, proto.SubastaProductoId, proto.SubastaOferta,\n/**\n * @param {!proto.SubastaProductoId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.SubastaOferta.deserializeBinary);\n/**\n * @param {!proto.SubastaProductoId} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaOferta>}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.getSubastaOfertas = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/SubastaService/GetSubastaOfertas', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaOfertas);\n};\n/**\n * @param {!proto.SubastaProductoId} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaOferta>}\n *     The XHR Node Readable Stream\n */\n\n\nproto.SubastaServicePromiseClient.prototype.getSubastaOfertas = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/SubastaService/GetSubastaOfertas', request, metadata || {}, methodDescriptor_SubastaService_GetSubastaOfertas);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaOfertaCreate,\n *   !proto.Empty>}\n */\n\n\nvar methodDescriptor_SubastaService_AddSubastaOferta = new grpc.web.MethodDescriptor('/SubastaService/AddSubastaOferta', grpc.web.MethodType.UNARY, proto.SubastaOfertaCreate, proto.Empty,\n/**\n * @param {!proto.SubastaOfertaCreate} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.Empty.deserializeBinary);\n/**\n * @param {!proto.SubastaOfertaCreate} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.addSubastaOferta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/AddSubastaOferta', request, metadata || {}, methodDescriptor_SubastaService_AddSubastaOferta, callback);\n};\n/**\n * @param {!proto.SubastaOfertaCreate} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.addSubastaOferta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/AddSubastaOferta', request, metadata || {}, methodDescriptor_SubastaService_AddSubastaOferta);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaProductoId,\n *   !proto.Empty>}\n */\n\n\nvar methodDescriptor_SubastaService_SetProductoEnSubasta = new grpc.web.MethodDescriptor('/SubastaService/SetProductoEnSubasta', grpc.web.MethodType.UNARY, proto.SubastaProductoId, proto.Empty,\n/**\n * @param {!proto.SubastaProductoId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.Empty.deserializeBinary);\n/**\n * @param {!proto.SubastaProductoId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.SubastaServiceClient.prototype.setProductoEnSubasta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/SubastaService/SetProductoEnSubasta', request, metadata || {}, methodDescriptor_SubastaService_SetProductoEnSubasta, callback);\n};\n/**\n * @param {!proto.SubastaProductoId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\n\n\nproto.SubastaServicePromiseClient.prototype.setProductoEnSubasta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/SubastaService/SetProductoEnSubasta', request, metadata || {}, methodDescriptor_SubastaService_SetProductoEnSubasta);\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.ClienteServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.ClienteServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.ClienteId,\n *   !proto.Cliente>}\n */\n\n\nvar methodDescriptor_ClienteService_GetCliente = new grpc.web.MethodDescriptor('/ClienteService/GetCliente', grpc.web.MethodType.UNARY, proto.ClienteId, proto.Cliente,\n/**\n * @param {!proto.ClienteId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.Cliente.deserializeBinary);\n/**\n * @param {!proto.ClienteId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Cliente)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Cliente>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.ClienteServiceClient.prototype.getCliente = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/ClienteService/GetCliente', request, metadata || {}, methodDescriptor_ClienteService_GetCliente, callback);\n};\n/**\n * @param {!proto.ClienteId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Cliente>}\n *     Promise that resolves to the response\n */\n\n\nproto.ClienteServicePromiseClient.prototype.getCliente = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/ClienteService/GetCliente', request, metadata || {}, methodDescriptor_ClienteService_GetCliente);\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.ProductoServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.ProductoServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.ProductoId,\n *   !proto.Producto>}\n */\n\n\nvar methodDescriptor_ProductoService_GetProducto = new grpc.web.MethodDescriptor('/ProductoService/GetProducto', grpc.web.MethodType.UNARY, proto.ProductoId, proto.Producto,\n/**\n * @param {!proto.ProductoId} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.Producto.deserializeBinary);\n/**\n * @param {!proto.ProductoId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Producto)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Producto>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.ProductoServiceClient.prototype.getProducto = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/ProductoService/GetProducto', request, metadata || {}, methodDescriptor_ProductoService_GetProducto, callback);\n};\n/**\n * @param {!proto.ProductoId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Producto>}\n *     Promise that resolves to the response\n */\n\n\nproto.ProductoServicePromiseClient.prototype.getProducto = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/ProductoService/GetProducto', request, metadata || {}, methodDescriptor_ProductoService_GetProducto);\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.LoginServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.LoginServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.LoginRequest,\n *   !proto.LoginResponse>}\n */\n\n\nvar methodDescriptor_LoginService_Login = new grpc.web.MethodDescriptor('/LoginService/Login', grpc.web.MethodType.UNARY, proto.LoginRequest, proto.LoginResponse,\n/**\n * @param {!proto.LoginRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.LoginResponse.deserializeBinary);\n/**\n * @param {!proto.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.LoginResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.LoginResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.LoginServiceClient.prototype.login = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/LoginService/Login', request, metadata || {}, methodDescriptor_LoginService_Login, callback);\n};\n/**\n * @param {!proto.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.LoginResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.LoginServicePromiseClient.prototype.login = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/LoginService/Login', request, metadata || {}, methodDescriptor_LoginService_Login);\n};\n\nmodule.exports = proto;","map":{"version":3,"sources":["/home/juan/node_projects/js-client/src/pb/proto_grpc_web_pb.js"],"names":["grpc","web","require","proto","SubastaServiceClient","hostname","credentials","options","format","client_","GrpcWebClientBase","hostname_","SubastaServicePromiseClient","methodDescriptor_SubastaService_GetSubastas","MethodDescriptor","MethodType","UNARY","Empty","Subastas","request","serializeBinary","deserializeBinary","prototype","getSubastas","metadata","callback","rpcCall","unaryCall","methodDescriptor_SubastaService_GetSubastaProductoEnSubasta","SubastaId","SubastaProducto","getSubastaProductoEnSubasta","methodDescriptor_SubastaService_GetSubastaProductoEnEspera","getSubastaProductoEnEspera","methodDescriptor_SubastaService_GetSubasta","Subasta","getSubasta","methodDescriptor_SubastaService_GetSubastaProductos","SubastaProductos","getSubastaProductos","methodDescriptor_SubastaService_GetSubastaOfertas","SERVER_STREAMING","SubastaProductoId","SubastaOferta","getSubastaOfertas","serverStreaming","methodDescriptor_SubastaService_AddSubastaOferta","SubastaOfertaCreate","addSubastaOferta","methodDescriptor_SubastaService_SetProductoEnSubasta","setProductoEnSubasta","ClienteServiceClient","ClienteServicePromiseClient","methodDescriptor_ClienteService_GetCliente","ClienteId","Cliente","getCliente","ProductoServiceClient","ProductoServicePromiseClient","methodDescriptor_ProductoService_GetProducto","ProductoId","Producto","getProducto","LoginServiceClient","LoginServicePromiseClient","methodDescriptor_LoginService_Login","LoginRequest","LoginResponse","login","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = require('./proto_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.SubastaServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.SubastaServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.Subastas>}\n */\nconst methodDescriptor_SubastaService_GetSubastas = new grpc.web.MethodDescriptor(\n  '/SubastaService/GetSubastas',\n  grpc.web.MethodType.UNARY,\n  proto.Empty,\n  proto.Subastas,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Subastas.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Subastas)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Subastas>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.getSubastas =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/GetSubastas',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastas,\n      callback);\n};\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Subastas>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.getSubastas =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/GetSubastas',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastas);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.SubastaProducto>}\n */\nconst methodDescriptor_SubastaService_GetSubastaProductoEnSubasta = new grpc.web.MethodDescriptor(\n  '/SubastaService/GetSubastaProductoEnSubasta',\n  grpc.web.MethodType.UNARY,\n  proto.SubastaId,\n  proto.SubastaProducto,\n  /**\n   * @param {!proto.SubastaId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.SubastaProducto.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.SubastaProducto)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaProducto>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.getSubastaProductoEnSubasta =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/GetSubastaProductoEnSubasta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaProductoEnSubasta,\n      callback);\n};\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.SubastaProducto>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.getSubastaProductoEnSubasta =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/GetSubastaProductoEnSubasta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaProductoEnSubasta);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.SubastaProducto>}\n */\nconst methodDescriptor_SubastaService_GetSubastaProductoEnEspera = new grpc.web.MethodDescriptor(\n  '/SubastaService/GetSubastaProductoEnEspera',\n  grpc.web.MethodType.UNARY,\n  proto.SubastaId,\n  proto.SubastaProducto,\n  /**\n   * @param {!proto.SubastaId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.SubastaProducto.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.SubastaProducto)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaProducto>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.getSubastaProductoEnEspera =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/GetSubastaProductoEnEspera',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaProductoEnEspera,\n      callback);\n};\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.SubastaProducto>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.getSubastaProductoEnEspera =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/GetSubastaProductoEnEspera',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaProductoEnEspera);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.Subasta>}\n */\nconst methodDescriptor_SubastaService_GetSubasta = new grpc.web.MethodDescriptor(\n  '/SubastaService/GetSubasta',\n  grpc.web.MethodType.UNARY,\n  proto.SubastaId,\n  proto.Subasta,\n  /**\n   * @param {!proto.SubastaId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Subasta.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Subasta)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Subasta>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.getSubasta =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/GetSubasta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubasta,\n      callback);\n};\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Subasta>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.getSubasta =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/GetSubasta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubasta);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaId,\n *   !proto.SubastaProductos>}\n */\nconst methodDescriptor_SubastaService_GetSubastaProductos = new grpc.web.MethodDescriptor(\n  '/SubastaService/GetSubastaProductos',\n  grpc.web.MethodType.UNARY,\n  proto.SubastaId,\n  proto.SubastaProductos,\n  /**\n   * @param {!proto.SubastaId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.SubastaProductos.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.SubastaProductos)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaProductos>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.getSubastaProductos =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/GetSubastaProductos',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaProductos,\n      callback);\n};\n\n\n/**\n * @param {!proto.SubastaId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.SubastaProductos>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.getSubastaProductos =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/GetSubastaProductos',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaProductos);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaProductoId,\n *   !proto.SubastaOferta>}\n */\nconst methodDescriptor_SubastaService_GetSubastaOfertas = new grpc.web.MethodDescriptor(\n  '/SubastaService/GetSubastaOfertas',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.SubastaProductoId,\n  proto.SubastaOferta,\n  /**\n   * @param {!proto.SubastaProductoId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.SubastaOferta.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaProductoId} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaOferta>}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.getSubastaOfertas =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/SubastaService/GetSubastaOfertas',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaOfertas);\n};\n\n\n/**\n * @param {!proto.SubastaProductoId} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.SubastaOferta>}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServicePromiseClient.prototype.getSubastaOfertas =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/SubastaService/GetSubastaOfertas',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_GetSubastaOfertas);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaOfertaCreate,\n *   !proto.Empty>}\n */\nconst methodDescriptor_SubastaService_AddSubastaOferta = new grpc.web.MethodDescriptor(\n  '/SubastaService/AddSubastaOferta',\n  grpc.web.MethodType.UNARY,\n  proto.SubastaOfertaCreate,\n  proto.Empty,\n  /**\n   * @param {!proto.SubastaOfertaCreate} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaOfertaCreate} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.addSubastaOferta =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/AddSubastaOferta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_AddSubastaOferta,\n      callback);\n};\n\n\n/**\n * @param {!proto.SubastaOfertaCreate} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.addSubastaOferta =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/AddSubastaOferta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_AddSubastaOferta);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SubastaProductoId,\n *   !proto.Empty>}\n */\nconst methodDescriptor_SubastaService_SetProductoEnSubasta = new grpc.web.MethodDescriptor(\n  '/SubastaService/SetProductoEnSubasta',\n  grpc.web.MethodType.UNARY,\n  proto.SubastaProductoId,\n  proto.Empty,\n  /**\n   * @param {!proto.SubastaProductoId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SubastaProductoId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.SubastaServiceClient.prototype.setProductoEnSubasta =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/SubastaService/SetProductoEnSubasta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_SetProductoEnSubasta,\n      callback);\n};\n\n\n/**\n * @param {!proto.SubastaProductoId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.SubastaServicePromiseClient.prototype.setProductoEnSubasta =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/SubastaService/SetProductoEnSubasta',\n      request,\n      metadata || {},\n      methodDescriptor_SubastaService_SetProductoEnSubasta);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.ClienteServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.ClienteServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.ClienteId,\n *   !proto.Cliente>}\n */\nconst methodDescriptor_ClienteService_GetCliente = new grpc.web.MethodDescriptor(\n  '/ClienteService/GetCliente',\n  grpc.web.MethodType.UNARY,\n  proto.ClienteId,\n  proto.Cliente,\n  /**\n   * @param {!proto.ClienteId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Cliente.deserializeBinary\n);\n\n\n/**\n * @param {!proto.ClienteId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Cliente)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Cliente>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.ClienteServiceClient.prototype.getCliente =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/ClienteService/GetCliente',\n      request,\n      metadata || {},\n      methodDescriptor_ClienteService_GetCliente,\n      callback);\n};\n\n\n/**\n * @param {!proto.ClienteId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Cliente>}\n *     Promise that resolves to the response\n */\nproto.ClienteServicePromiseClient.prototype.getCliente =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/ClienteService/GetCliente',\n      request,\n      metadata || {},\n      methodDescriptor_ClienteService_GetCliente);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.ProductoServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.ProductoServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.ProductoId,\n *   !proto.Producto>}\n */\nconst methodDescriptor_ProductoService_GetProducto = new grpc.web.MethodDescriptor(\n  '/ProductoService/GetProducto',\n  grpc.web.MethodType.UNARY,\n  proto.ProductoId,\n  proto.Producto,\n  /**\n   * @param {!proto.ProductoId} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Producto.deserializeBinary\n);\n\n\n/**\n * @param {!proto.ProductoId} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.Producto)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Producto>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.ProductoServiceClient.prototype.getProducto =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/ProductoService/GetProducto',\n      request,\n      metadata || {},\n      methodDescriptor_ProductoService_GetProducto,\n      callback);\n};\n\n\n/**\n * @param {!proto.ProductoId} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Producto>}\n *     Promise that resolves to the response\n */\nproto.ProductoServicePromiseClient.prototype.getProducto =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/ProductoService/GetProducto',\n      request,\n      metadata || {},\n      methodDescriptor_ProductoService_GetProducto);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.LoginServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.LoginServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.LoginRequest,\n *   !proto.LoginResponse>}\n */\nconst methodDescriptor_LoginService_Login = new grpc.web.MethodDescriptor(\n  '/LoginService/Login',\n  grpc.web.MethodType.UNARY,\n  proto.LoginRequest,\n  proto.LoginResponse,\n  /**\n   * @param {!proto.LoginRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.LoginResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.LoginResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.LoginResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.LoginServiceClient.prototype.login =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/LoginService/Login',\n      request,\n      metadata || {},\n      methodDescriptor_LoginService_Login,\n      callback);\n};\n\n\n/**\n * @param {!proto.LoginRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.LoginResponse>}\n *     Promise that resolves to the response\n */\nproto.LoginServicePromiseClient.prototype.login =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/LoginService/Login',\n      request,\n      metadata || {},\n      methodDescriptor_LoginService_Login);\n};\n\n\nmodule.exports = proto;\n\n"]},"metadata":{},"sourceType":"module"}