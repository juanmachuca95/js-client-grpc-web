{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n\n/* eslint-disable */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.CreateProductoReq', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.User', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Cliente = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Cliente, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Cliente.prototype.toObject = function (opt_includeInstance) {\n    return proto.Cliente.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Cliente} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Cliente.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente();\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCliente(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCuit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDireccion(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Cliente.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Cliente.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCliente();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCuit();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getDireccion();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string cliente = 2;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCliente = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setCliente = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string cuit = 3;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCuit = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setCuit = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string direccion = 4;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getDireccion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setDireccion = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ClienteId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ClienteId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ClienteId.prototype.toObject = function (opt_includeInstance) {\n    return proto.ClienteId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ClienteId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ClienteId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId();\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ClienteId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ClienteId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ClienteId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.ClienteId.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Producto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Producto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Producto.displayName = 'proto.Producto';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Producto.prototype.toObject = function (opt_includeInstance) {\n    return proto.Producto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Producto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Producto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n      precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n      precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n      precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n      cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto();\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescripcion(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStock(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioInicial(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioAumento(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioSubasta(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 11:\n        var value = new proto.Cliente();\n        reader.readMessage(value, proto.Cliente.deserializeBinaryFromReader);\n        msg.setCliente(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Producto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Producto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescripcion();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStock();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n\n  f = message.getPrecioInicial();\n\n  if (f !== 0.0) {\n    writer.writeFloat(6, f);\n  }\n\n  f = message.getPrecioAumento();\n\n  if (f !== 0.0) {\n    writer.writeFloat(7, f);\n  }\n\n  f = message.getPrecioSubasta();\n\n  if (f !== 0.0) {\n    writer.writeFloat(8, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n\n  f = message.getCliente();\n\n  if (f != null) {\n    writer.writeMessage(11, f, proto.Cliente.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string producto = 2;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getProducto = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setProducto = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getDescripcion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setDescripcion = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getStock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setStock = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.Producto.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 5, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.Producto.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioInicial = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 6, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setPrecioInicial = function (value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioAumento = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 7, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setPrecioAumento = function (value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioSubasta = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 8, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setPrecioSubasta = function (value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n/**\n * optional string created_at = 9;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n/**\n * optional Cliente cliente = 11;\n * @return {?proto.Cliente}\n */\n\n\nproto.Producto.prototype.getCliente = function () {\n  return (\n    /** @type{?proto.Cliente} */\n    jspb.Message.getWrapperField(this, proto.Cliente, 11)\n  );\n};\n/** @param {?proto.Cliente|undefined} value */\n\n\nproto.Producto.prototype.setCliente = function (value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\nproto.Producto.prototype.clearCliente = function () {\n  this.setCliente(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Producto.prototype.hasCliente = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CreateProductoReq = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CreateProductoReq, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.CreateProductoReq.displayName = 'proto.CreateProductoReq';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CreateProductoReq.prototype.toObject = function (opt_includeInstance) {\n    return proto.CreateProductoReq.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CreateProductoReq} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CreateProductoReq.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n      precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n      precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n      precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n      clientesId: jspb.Message.getFieldWithDefault(msg, 11, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CreateProductoReq}\n */\n\n\nproto.CreateProductoReq.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CreateProductoReq();\n  return proto.CreateProductoReq.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CreateProductoReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CreateProductoReq}\n */\n\n\nproto.CreateProductoReq.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescripcion(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStock(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioInicial(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioAumento(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioSubasta(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 11:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setClientesId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CreateProductoReq.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CreateProductoReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CreateProductoReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CreateProductoReq.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescripcion();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStock();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n\n  f = message.getPrecioInicial();\n\n  if (f !== 0.0) {\n    writer.writeFloat(6, f);\n  }\n\n  f = message.getPrecioAumento();\n\n  if (f !== 0.0) {\n    writer.writeFloat(7, f);\n  }\n\n  f = message.getPrecioSubasta();\n\n  if (f !== 0.0) {\n    writer.writeFloat(8, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n\n  f = message.getClientesId();\n\n  if (f.length > 0) {\n    writer.writeString(11, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string producto = 2;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getProducto = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setProducto = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getDescripcion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setDescripcion = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getStock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setStock = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.CreateProductoReq.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 5, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.CreateProductoReq.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getPrecioInicial = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 6, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setPrecioInicial = function (value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getPrecioAumento = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 7, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setPrecioAumento = function (value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getPrecioSubasta = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 8, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setPrecioSubasta = function (value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n/**\n * optional string created_at = 9;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n/**\n * optional string clientes_id = 11;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getClientesId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 11, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setClientesId = function (value) {\n  jspb.Message.setProto3StringField(this, 11, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Subasta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Subasta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subasta.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subasta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subasta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subasta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      fecha: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      activo: jspb.Message.getFieldWithDefault(msg, 3, false),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta();\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFecha(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subasta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subasta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getFecha();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string fecha = 2;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getFecha = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setFecha = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bool activo = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.Subasta.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 3, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.Subasta.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional string created_at = 4;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string updated_at = 5;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProducto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProducto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProducto.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProducto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProducto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProducto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      subasta: (f = msg.getSubasta()) && proto.Subasta.toObject(includeInstance, f),\n      producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n      activo: jspb.Message.getFieldWithDefault(msg, 4, false),\n      ofertaFinal: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto();\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = new proto.Subasta();\n        reader.readMessage(value, proto.Subasta.deserializeBinaryFromReader);\n        msg.setSubasta(value);\n        break;\n\n      case 3:\n        var value = new proto.Producto();\n        reader.readMessage(value, proto.Producto.deserializeBinaryFromReader);\n        msg.setProducto(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaFinal(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubastasOfertasIdWinner(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProducto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProducto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getSubasta();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Subasta.serializeBinaryToWriter);\n  }\n\n  f = message.getProducto();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.Producto.serializeBinaryToWriter);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getOfertaFinal();\n\n  if (f !== 0.0) {\n    writer.writeFloat(5, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getSubastasOfertasIdWinner();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional Subasta subasta = 2;\n * @return {?proto.Subasta}\n */\n\n\nproto.SubastaProducto.prototype.getSubasta = function () {\n  return (\n    /** @type{?proto.Subasta} */\n    jspb.Message.getWrapperField(this, proto.Subasta, 2)\n  );\n};\n/** @param {?proto.Subasta|undefined} value */\n\n\nproto.SubastaProducto.prototype.setSubasta = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.SubastaProducto.prototype.clearSubasta = function () {\n  this.setSubasta(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaProducto.prototype.hasSubasta = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional Producto producto = 3;\n * @return {?proto.Producto}\n */\n\n\nproto.SubastaProducto.prototype.getProducto = function () {\n  return (\n    /** @type{?proto.Producto} */\n    jspb.Message.getWrapperField(this, proto.Producto, 3)\n  );\n};\n/** @param {?proto.Producto|undefined} value */\n\n\nproto.SubastaProducto.prototype.setProducto = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\nproto.SubastaProducto.prototype.clearProducto = function () {\n  this.setProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaProducto.prototype.hasProducto = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bool activo = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.SubastaProducto.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 4, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.SubastaProducto.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional float oferta_final = 5;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getOfertaFinal = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 5, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.SubastaProducto.prototype.setOfertaFinal = function (value) {\n  jspb.Message.setProto3FloatField(this, 5, value);\n};\n/**\n * optional string created_at = 6;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string updated_at = 7;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional string subastas_ofertas_id_winner = 8;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function (value) {\n  jspb.Message.setProto3StringField(this, 8, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaOferta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaOferta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaOferta.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaOferta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaOferta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaOferta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastaProducto: (f = msg.getSubastaProducto()) && proto.SubastaProducto.toObject(includeInstance, f),\n      ofertaPrecio: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      user: (f = msg.getUser()) && proto.User.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta();\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.SubastaProducto();\n        reader.readMessage(value, proto.SubastaProducto.deserializeBinaryFromReader);\n        msg.setSubastaProducto(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaPrecio(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 5:\n        var value = new proto.User();\n        reader.readMessage(value, proto.User.deserializeBinaryFromReader);\n        msg.setUser(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaOferta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaOferta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastaProducto();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.SubastaProducto.serializeBinaryToWriter);\n  }\n\n  f = message.getOfertaPrecio();\n\n  if (f !== 0.0) {\n    writer.writeFloat(2, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getUser();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.User.serializeBinaryToWriter);\n  }\n};\n/**\n * optional SubastaProducto subasta_producto = 1;\n * @return {?proto.SubastaProducto}\n */\n\n\nproto.SubastaOferta.prototype.getSubastaProducto = function () {\n  return (\n    /** @type{?proto.SubastaProducto} */\n    jspb.Message.getWrapperField(this, proto.SubastaProducto, 1)\n  );\n};\n/** @param {?proto.SubastaProducto|undefined} value */\n\n\nproto.SubastaOferta.prototype.setSubastaProducto = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\nproto.SubastaOferta.prototype.clearSubastaProducto = function () {\n  this.setSubastaProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaOferta.prototype.hasSubastaProducto = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\n\n\nproto.SubastaOferta.prototype.getOfertaPrecio = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 2, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.SubastaOferta.prototype.setOfertaPrecio = function (value) {\n  jspb.Message.setProto3FloatField(this, 2, value);\n};\n/**\n * optional string created_at = 3;\n * @return {string}\n */\n\n\nproto.SubastaOferta.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaOferta.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string updated_at = 4;\n * @return {string}\n */\n\n\nproto.SubastaOferta.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaOferta.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional User user = 5;\n * @return {?proto.User}\n */\n\n\nproto.SubastaOferta.prototype.getUser = function () {\n  return (\n    /** @type{?proto.User} */\n    jspb.Message.getWrapperField(this, proto.User, 5)\n  );\n};\n/** @param {?proto.User|undefined} value */\n\n\nproto.SubastaOferta.prototype.setUser = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\nproto.SubastaOferta.prototype.clearUser = function () {\n  this.setUser(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaOferta.prototype.hasUser = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaId.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId();\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaId.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.User, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.User.displayName = 'proto.User';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.User.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.User.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User();\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.User.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.User.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setName = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string email = 3;\n * @return {string}\n */\n\n\nproto.User.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setEmail = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string password = 4;\n * @return {string}\n */\n\n\nproto.User.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setPassword = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.User.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.User.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/juan/node_projects/js-client/src/subastas_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Cliente","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","cliente","cuit","direccion","createdAt","updatedAt","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setId","setCliente","setCuit","setDireccion","setCreatedAt","setUpdatedAt","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","length","writeString","getCliente","getCuit","getDireccion","getCreatedAt","getUpdatedAt","setProto3StringField","ClienteId","Producto","producto","descripcion","stock","activo","precioInicial","precioAumento","precioSubasta","setProducto","setDescripcion","readInt32","setStock","readBool","setActivo","readFloat","setPrecioInicial","setPrecioAumento","setPrecioSubasta","readMessage","getProducto","getDescripcion","getStock","writeInt32","getActivo","writeBool","getPrecioInicial","writeFloat","getPrecioAumento","getPrecioSubasta","writeMessage","setProto3IntField","setProto3BooleanField","setProto3FloatField","getWrapperField","setWrapperField","clearCliente","hasCliente","getField","CreateProductoReq","clientesId","setClientesId","getClientesId","Subasta","fecha","setFecha","getFecha","SubastaProducto","subasta","getSubasta","ofertaFinal","subastasOfertasIdWinner","setSubasta","setOfertaFinal","setSubastasOfertasIdWinner","getOfertaFinal","getSubastasOfertasIdWinner","clearSubasta","hasSubasta","clearProducto","hasProducto","SubastaOferta","subastaProducto","getSubastaProducto","ofertaPrecio","user","getUser","User","setSubastaProducto","setOfertaPrecio","setUser","getOfertaPrecio","clearSubastaProducto","hasSubastaProducto","clearUser","hasUser","SubastaId","name","email","password","setName","setEmail","setPassword","getName","getEmail","getPassword","object","extend","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n\n/* eslint-disable */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.CreateProductoReq', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.User', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Cliente = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Cliente, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Cliente.prototype.toObject = function(opt_includeInstance) {\n  return proto.Cliente.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Cliente} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente;\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCliente(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCuit(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDireccion(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Cliente.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCuit();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDireccion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.Cliente.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string cliente = 2;\n * @return {string}\n */\nproto.Cliente.prototype.getCliente = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setCliente = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string cuit = 3;\n * @return {string}\n */\nproto.Cliente.prototype.getCuit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setCuit = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string direccion = 4;\n * @return {string}\n */\nproto.Cliente.prototype.getDireccion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setDireccion = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.Cliente.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.Cliente.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ClienteId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ClienteId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ClienteId.prototype.toObject = function(opt_includeInstance) {\n  return proto.ClienteId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ClienteId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId;\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ClienteId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ClienteId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.ClienteId.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Producto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Producto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Producto.displayName = 'proto.Producto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Producto.prototype.toObject = function(opt_includeInstance) {\n  return proto.Producto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Producto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n    precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n    precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto;\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescripcion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStock(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioInicial(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioAumento(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioSubasta(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 11:\n      var value = new proto.Cliente;\n      reader.readMessage(value,proto.Cliente.deserializeBinaryFromReader);\n      msg.setCliente(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Producto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescripcion();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStock();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getPrecioInicial();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      6,\n      f\n    );\n  }\n  f = message.getPrecioAumento();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getPrecioSubasta();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      8,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.Cliente.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.Producto.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string producto = 2;\n * @return {string}\n */\nproto.Producto.prototype.getProducto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setProducto = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\nproto.Producto.prototype.getDescripcion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setDescripcion = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\nproto.Producto.prototype.getStock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setStock = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.Producto.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.Producto.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioInicial = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setPrecioInicial = function(value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n\n\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioAumento = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setPrecioAumento = function(value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioSubasta = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setPrecioSubasta = function(value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n\n\n/**\n * optional string created_at = 9;\n * @return {string}\n */\nproto.Producto.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\nproto.Producto.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n\n\n/**\n * optional Cliente cliente = 11;\n * @return {?proto.Cliente}\n */\nproto.Producto.prototype.getCliente = function() {\n  return /** @type{?proto.Cliente} */ (\n    jspb.Message.getWrapperField(this, proto.Cliente, 11));\n};\n\n\n/** @param {?proto.Cliente|undefined} value */\nproto.Producto.prototype.setCliente = function(value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\n\nproto.Producto.prototype.clearCliente = function() {\n  this.setCliente(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Producto.prototype.hasCliente = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CreateProductoReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CreateProductoReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.CreateProductoReq.displayName = 'proto.CreateProductoReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CreateProductoReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.CreateProductoReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CreateProductoReq} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CreateProductoReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n    precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n    precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    clientesId: jspb.Message.getFieldWithDefault(msg, 11, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CreateProductoReq}\n */\nproto.CreateProductoReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CreateProductoReq;\n  return proto.CreateProductoReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CreateProductoReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CreateProductoReq}\n */\nproto.CreateProductoReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescripcion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStock(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioInicial(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioAumento(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioSubasta(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientesId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CreateProductoReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CreateProductoReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CreateProductoReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CreateProductoReq.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescripcion();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStock();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getPrecioInicial();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      6,\n      f\n    );\n  }\n  f = message.getPrecioAumento();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getPrecioSubasta();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      8,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getClientesId();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string producto = 2;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getProducto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setProducto = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getDescripcion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setDescripcion = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getStock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setStock = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.CreateProductoReq.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.CreateProductoReq.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getPrecioInicial = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setPrecioInicial = function(value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n\n\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getPrecioAumento = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setPrecioAumento = function(value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getPrecioSubasta = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setPrecioSubasta = function(value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n\n\n/**\n * optional string created_at = 9;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n\n\n/**\n * optional string clientes_id = 11;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getClientesId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setClientesId = function(value) {\n  jspb.Message.setProto3StringField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subasta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Subasta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subasta.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subasta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subasta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    fecha: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    activo: jspb.Message.getFieldWithDefault(msg, 3, false),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta;\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFecha(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subasta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFecha();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.Subasta.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string fecha = 2;\n * @return {string}\n */\nproto.Subasta.prototype.getFecha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setFecha = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool activo = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.Subasta.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.Subasta.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional string created_at = 4;\n * @return {string}\n */\nproto.Subasta.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string updated_at = 5;\n * @return {string}\n */\nproto.Subasta.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProducto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProducto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProducto.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProducto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProducto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    subasta: (f = msg.getSubasta()) && proto.Subasta.toObject(includeInstance, f),\n    producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n    activo: jspb.Message.getFieldWithDefault(msg, 4, false),\n    ofertaFinal: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto;\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.Subasta;\n      reader.readMessage(value,proto.Subasta.deserializeBinaryFromReader);\n      msg.setSubasta(value);\n      break;\n    case 3:\n      var value = new proto.Producto;\n      reader.readMessage(value,proto.Producto.deserializeBinaryFromReader);\n      msg.setProducto(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaFinal(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubastasOfertasIdWinner(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProducto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSubasta();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Subasta.serializeBinaryToWriter\n    );\n  }\n  f = message.getProducto();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.Producto.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getOfertaFinal();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      5,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getSubastasOfertasIdWinner();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Subasta subasta = 2;\n * @return {?proto.Subasta}\n */\nproto.SubastaProducto.prototype.getSubasta = function() {\n  return /** @type{?proto.Subasta} */ (\n    jspb.Message.getWrapperField(this, proto.Subasta, 2));\n};\n\n\n/** @param {?proto.Subasta|undefined} value */\nproto.SubastaProducto.prototype.setSubasta = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.SubastaProducto.prototype.clearSubasta = function() {\n  this.setSubasta(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaProducto.prototype.hasSubasta = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Producto producto = 3;\n * @return {?proto.Producto}\n */\nproto.SubastaProducto.prototype.getProducto = function() {\n  return /** @type{?proto.Producto} */ (\n    jspb.Message.getWrapperField(this, proto.Producto, 3));\n};\n\n\n/** @param {?proto.Producto|undefined} value */\nproto.SubastaProducto.prototype.setProducto = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.SubastaProducto.prototype.clearProducto = function() {\n  this.setProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaProducto.prototype.hasProducto = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool activo = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.SubastaProducto.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.SubastaProducto.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional float oferta_final = 5;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getOfertaFinal = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));\n};\n\n\n/** @param {number} value */\nproto.SubastaProducto.prototype.setOfertaFinal = function(value) {\n  jspb.Message.setProto3FloatField(this, 5, value);\n};\n\n\n/**\n * optional string created_at = 6;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string updated_at = 7;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string subastas_ofertas_id_winner = 8;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function(value) {\n  jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaOferta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaOferta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaOferta.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaOferta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaOferta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastaProducto: (f = msg.getSubastaProducto()) && proto.SubastaProducto.toObject(includeInstance, f),\n    ofertaPrecio: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    user: (f = msg.getUser()) && proto.User.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta;\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.SubastaProducto;\n      reader.readMessage(value,proto.SubastaProducto.deserializeBinaryFromReader);\n      msg.setSubastaProducto(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaPrecio(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 5:\n      var value = new proto.User;\n      reader.readMessage(value,proto.User.deserializeBinaryFromReader);\n      msg.setUser(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaOferta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastaProducto();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.SubastaProducto.serializeBinaryToWriter\n    );\n  }\n  f = message.getOfertaPrecio();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getUser();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.User.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SubastaProducto subasta_producto = 1;\n * @return {?proto.SubastaProducto}\n */\nproto.SubastaOferta.prototype.getSubastaProducto = function() {\n  return /** @type{?proto.SubastaProducto} */ (\n    jspb.Message.getWrapperField(this, proto.SubastaProducto, 1));\n};\n\n\n/** @param {?proto.SubastaProducto|undefined} value */\nproto.SubastaOferta.prototype.setSubastaProducto = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.SubastaOferta.prototype.clearSubastaProducto = function() {\n  this.setSubastaProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaOferta.prototype.hasSubastaProducto = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\nproto.SubastaOferta.prototype.getOfertaPrecio = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.SubastaOferta.prototype.setOfertaPrecio = function(value) {\n  jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n/**\n * optional string created_at = 3;\n * @return {string}\n */\nproto.SubastaOferta.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaOferta.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string updated_at = 4;\n * @return {string}\n */\nproto.SubastaOferta.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaOferta.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional User user = 5;\n * @return {?proto.User}\n */\nproto.SubastaOferta.prototype.getUser = function() {\n  return /** @type{?proto.User} */ (\n    jspb.Message.getWrapperField(this, proto.User, 5));\n};\n\n\n/** @param {?proto.User|undefined} value */\nproto.SubastaOferta.prototype.setUser = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.SubastaOferta.prototype.clearUser = function() {\n  this.setUser(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaOferta.prototype.hasUser = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaId.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId;\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaId.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.User.displayName = 'proto.User';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\nproto.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User;\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\nproto.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.User.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.User.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string email = 3;\n * @return {string}\n */\nproto.User.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setEmail = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.User.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setPassword = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.User.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.User.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}