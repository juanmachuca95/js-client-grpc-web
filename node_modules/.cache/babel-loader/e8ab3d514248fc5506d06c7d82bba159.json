{"ast":null,"code":"// source: proto.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.Empty', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.ProductoId', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.SubastaProductoId', null, global);\ngoog.exportSymbol('proto.SubastaProductos', null, global);\ngoog.exportSymbol('proto.Subastas', null, global);\ngoog.exportSymbol('proto.User', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Subasta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Subasta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProducto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProducto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProductos = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.SubastaProductos.repeatedFields_, null);\n};\n\ngoog.inherits(proto.SubastaProductos, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductos.displayName = 'proto.SubastaProductos';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Subastas = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Subastas.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Subastas, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subastas.displayName = 'proto.Subastas';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProductoId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProductoId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductoId.displayName = 'proto.SubastaProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaOferta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaOferta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Empty = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Empty, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Empty.displayName = 'proto.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Cliente = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Cliente, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ClienteId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ClienteId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Producto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Producto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Producto.displayName = 'proto.Producto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ProductoId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ProductoId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ProductoId.displayName = 'proto.ProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.User, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.User.displayName = 'proto.User';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subasta.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subasta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subasta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subasta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      subasta: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      fecha: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      activo: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta();\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubasta(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFecha(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subasta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subasta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getSubasta();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getFecha();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Subasta.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string subasta = 2;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getSubasta = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setSubasta = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string fecha = 3;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getFecha = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setFecha = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional bool activo = 4;\n * @return {boolean}\n */\n\n\nproto.Subasta.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setActivo = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setCreatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setUpdatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProducto.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProducto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProducto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProducto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n      activo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      ofertaFinal: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n      subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto();\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = new proto.Producto();\n        reader.readMessage(value, proto.Producto.deserializeBinaryFromReader);\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaFinal(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setSubastasOfertasIdWinner(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProducto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProducto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Producto.serializeBinaryToWriter);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getOfertaFinal();\n\n  if (f !== 0.0) {\n    writer.writeFloat(4, f);\n  }\n\n  f = message.getSubastasOfertasIdWinner();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional Producto producto = 2;\n * @return {?proto.Producto}\n */\n\n\nproto.SubastaProducto.prototype.getProducto = function () {\n  return (\n    /** @type{?proto.Producto} */\n    jspb.Message.getWrapperField(this, proto.Producto, 2)\n  );\n};\n/**\n * @param {?proto.Producto|undefined} value\n * @return {!proto.SubastaProducto} returns this\n*/\n\n\nproto.SubastaProducto.prototype.setProducto = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.clearProducto = function () {\n  return this.setProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SubastaProducto.prototype.hasProducto = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool activo = 3;\n * @return {boolean}\n */\n\n\nproto.SubastaProducto.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setActivo = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional float oferta_final = 4;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getOfertaFinal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setOfertaFinal = function (value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n/**\n * optional int32 subastas_ofertas_id_winner = 5;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.SubastaProductos.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProductos.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProductos.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProductos} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProductos.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastasProductosList: jspb.Message.toObjectList(msg.getSubastasProductosList(), proto.SubastaProducto.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductos}\n */\n\n\nproto.SubastaProductos.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductos();\n  return proto.SubastaProductos.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductos} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductos}\n */\n\n\nproto.SubastaProductos.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.SubastaProducto();\n        reader.readMessage(value, proto.SubastaProducto.deserializeBinaryFromReader);\n        msg.addSubastasProductos(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProductos.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductos.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductos} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProductos.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastasProductosList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.SubastaProducto.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated SubastaProducto subastas_productos = 1;\n * @return {!Array<!proto.SubastaProducto>}\n */\n\n\nproto.SubastaProductos.prototype.getSubastasProductosList = function () {\n  return (\n    /** @type{!Array<!proto.SubastaProducto>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.SubastaProducto, 1)\n  );\n};\n/**\n * @param {!Array<!proto.SubastaProducto>} value\n * @return {!proto.SubastaProductos} returns this\n*/\n\n\nproto.SubastaProductos.prototype.setSubastasProductosList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.SubastaProducto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProductos.prototype.addSubastasProductos = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SubastaProducto, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.SubastaProductos} returns this\n */\n\n\nproto.SubastaProductos.prototype.clearSubastasProductosList = function () {\n  return this.setSubastasProductosList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaId.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId();\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaId} returns this\n */\n\n\nproto.SubastaId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Subastas.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subastas.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subastas.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subastas} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subastas.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastasList: jspb.Message.toObjectList(msg.getSubastasList(), proto.Subasta.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subastas}\n */\n\n\nproto.Subastas.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subastas();\n  return proto.Subastas.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subastas} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subastas}\n */\n\n\nproto.Subastas.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Subasta();\n        reader.readMessage(value, proto.Subasta.deserializeBinaryFromReader);\n        msg.addSubastas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subastas.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subastas.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subastas} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subastas.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastasList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Subasta.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Subasta subastas = 1;\n * @return {!Array<!proto.Subasta>}\n */\n\n\nproto.Subastas.prototype.getSubastasList = function () {\n  return (\n    /** @type{!Array<!proto.Subasta>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Subasta, 1)\n  );\n};\n/**\n * @param {!Array<!proto.Subasta>} value\n * @return {!proto.Subastas} returns this\n*/\n\n\nproto.Subastas.prototype.setSubastasList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Subasta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Subasta}\n */\n\n\nproto.Subastas.prototype.addSubastas = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Subasta, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Subastas} returns this\n */\n\n\nproto.Subastas.prototype.clearSubastasList = function () {\n  return this.setSubastasList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProductoId.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProductoId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProductoId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProductoId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductoId}\n */\n\n\nproto.SubastaProductoId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductoId();\n  return proto.SubastaProductoId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductoId}\n */\n\n\nproto.SubastaProductoId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProductoId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProductoId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaProductoId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoId} returns this\n */\n\n\nproto.SubastaProductoId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaOferta.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaOferta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaOferta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaOferta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      user: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      ofertaPrecio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta();\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUser(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaPrecio(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaOferta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaOferta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUser();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getOfertaPrecio();\n\n  if (f !== 0.0) {\n    writer.writeFloat(2, f);\n  }\n};\n/**\n * optional string user = 1;\n * @return {string}\n */\n\n\nproto.SubastaOferta.prototype.getUser = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaOferta} returns this\n */\n\n\nproto.SubastaOferta.prototype.setUser = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\n\n\nproto.SubastaOferta.prototype.getOfertaPrecio = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaOferta} returns this\n */\n\n\nproto.SubastaOferta.prototype.setOfertaPrecio = function (value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Empty.prototype.toObject = function (opt_includeInstance) {\n    return proto.Empty.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Empty} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Empty.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\n\n\nproto.Empty.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty();\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\n\n\nproto.Empty.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Empty.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Empty.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Cliente.prototype.toObject = function (opt_includeInstance) {\n    return proto.Cliente.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Cliente} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Cliente.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      ciudad: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      iva: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente();\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCliente(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCuit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDireccion(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCiudad(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setIva(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Cliente.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Cliente.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getCliente();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCuit();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getDireccion();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCiudad();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getIva();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Cliente.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string cliente = 2;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCliente = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setCliente = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string cuit = 3;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCuit = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setCuit = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string direccion = 4;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getDireccion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setDireccion = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string ciudad = 5;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCiudad = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setCiudad = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string iva = 6;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getIva = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setIva = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ClienteId.prototype.toObject = function (opt_includeInstance) {\n    return proto.ClienteId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ClienteId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ClienteId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId();\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ClienteId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ClienteId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ClienteId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ClienteId} returns this\n */\n\n\nproto.ClienteId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Producto.prototype.toObject = function (opt_includeInstance) {\n    return proto.Producto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Producto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Producto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      precioInicial: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n      precioAumento: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),\n      precioSubasta: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n      cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto();\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescripcion(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStock(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioInicial(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioAumento(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioSubasta(value);\n        break;\n\n      case 8:\n        var value = new proto.Cliente();\n        reader.readMessage(value, proto.Cliente.deserializeBinaryFromReader);\n        msg.setCliente(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Producto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Producto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescripcion();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStock();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n\n  f = message.getPrecioInicial();\n\n  if (f !== 0.0) {\n    writer.writeFloat(5, f);\n  }\n\n  f = message.getPrecioAumento();\n\n  if (f !== 0.0) {\n    writer.writeFloat(6, f);\n  }\n\n  f = message.getPrecioSubasta();\n\n  if (f !== 0.0) {\n    writer.writeFloat(7, f);\n  }\n\n  f = message.getCliente();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.Cliente.serializeBinaryToWriter);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string producto = 2;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getProducto = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setProducto = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getDescripcion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setDescripcion = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getStock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setStock = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional float precio_inicial = 5;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioInicial = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setPrecioInicial = function (value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n/**\n * optional float precio_aumento = 6;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioAumento = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setPrecioAumento = function (value) {\n  return jspb.Message.setProto3FloatField(this, 6, value);\n};\n/**\n * optional float precio_subasta = 7;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioSubasta = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setPrecioSubasta = function (value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n/**\n * optional Cliente cliente = 8;\n * @return {?proto.Cliente}\n */\n\n\nproto.Producto.prototype.getCliente = function () {\n  return (\n    /** @type{?proto.Cliente} */\n    jspb.Message.getWrapperField(this, proto.Cliente, 8)\n  );\n};\n/**\n * @param {?proto.Cliente|undefined} value\n * @return {!proto.Producto} returns this\n*/\n\n\nproto.Producto.prototype.setCliente = function (value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.clearCliente = function () {\n  return this.setCliente(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Producto.prototype.hasCliente = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ProductoId.prototype.toObject = function (opt_includeInstance) {\n    return proto.ProductoId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ProductoId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ProductoId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ProductoId}\n */\n\n\nproto.ProductoId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ProductoId();\n  return proto.ProductoId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ProductoId}\n */\n\n\nproto.ProductoId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ProductoId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ProductoId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ProductoId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ProductoId} returns this\n */\n\n\nproto.ProductoId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.User.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.User.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User();\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.User.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.User.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string email = 3;\n * @return {string}\n */\n\n\nproto.User.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string password = 4;\n * @return {string}\n */\n\n\nproto.User.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setPassword = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.User.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setCreatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.User.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setUpdatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/juan/node_projects/js-client/src/pb/proto_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Subasta","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","SubastaProducto","SubastaProductos","repeatedFields_","SubastaId","Subastas","SubastaProductoId","SubastaOferta","Empty","Cliente","ClienteId","Producto","ProductoId","User","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","subasta","fecha","activo","getBooleanFieldWithDefault","createdAt","updatedAt","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setId","readString","setSubasta","setFecha","readBool","setActivo","setCreatedAt","setUpdatedAt","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","writeInt32","getSubasta","length","writeString","getFecha","getActivo","writeBool","getCreatedAt","getUpdatedAt","setProto3IntField","setProto3StringField","setProto3BooleanField","producto","getProducto","ofertaFinal","getFloatingPointFieldWithDefault","subastasOfertasIdWinner","readMessage","setProducto","readFloat","setOfertaFinal","setSubastasOfertasIdWinner","writeMessage","getOfertaFinal","writeFloat","getSubastasOfertasIdWinner","getWrapperField","setWrapperField","clearProducto","hasProducto","getField","setProto3FloatField","subastasProductosList","toObjectList","getSubastasProductosList","addSubastasProductos","writeRepeatedMessage","getRepeatedWrapperField","setSubastasProductosList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSubastasProductosList","subastasList","getSubastasList","addSubastas","setSubastasList","clearSubastasList","user","ofertaPrecio","setUser","setOfertaPrecio","getUser","getOfertaPrecio","cliente","cuit","direccion","ciudad","iva","setCliente","setCuit","setDireccion","setCiudad","setIva","getCliente","getCuit","getDireccion","getCiudad","getIva","descripcion","stock","precioInicial","precioAumento","precioSubasta","setDescripcion","setStock","setPrecioInicial","setPrecioAumento","setPrecioSubasta","getDescripcion","getStock","getPrecioInicial","getPrecioAumento","getPrecioSubasta","clearCliente","hasCliente","name","email","password","setName","setEmail","setPassword","getName","getEmail","getPassword","object","extend","exports"],"mappings":"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","sourcesContent":["// source: proto.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.Empty', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.ProductoId', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.SubastaProductoId', null, global);\ngoog.exportSymbol('proto.SubastaProductos', null, global);\ngoog.exportSymbol('proto.Subastas', null, global);\ngoog.exportSymbol('proto.User', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subasta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Subasta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProducto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProducto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProductos = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.SubastaProductos.repeatedFields_, null);\n};\ngoog.inherits(proto.SubastaProductos, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductos.displayName = 'proto.SubastaProductos';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subastas = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Subastas.repeatedFields_, null);\n};\ngoog.inherits(proto.Subastas, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subastas.displayName = 'proto.Subastas';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProductoId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProductoId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductoId.displayName = 'proto.SubastaProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaOferta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaOferta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Empty.displayName = 'proto.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Cliente = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Cliente, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ClienteId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ClienteId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Producto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Producto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Producto.displayName = 'proto.Producto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ProductoId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ProductoId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ProductoId.displayName = 'proto.ProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.User.displayName = 'proto.User';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subasta.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subasta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subasta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    subasta: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    fecha: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    activo: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta;\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubasta(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFecha(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subasta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSubasta();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getFecha();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Subasta.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string subasta = 2;\n * @return {string}\n */\nproto.Subasta.prototype.getSubasta = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setSubasta = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string fecha = 3;\n * @return {string}\n */\nproto.Subasta.prototype.getFecha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setFecha = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool activo = 4;\n * @return {boolean}\n */\nproto.Subasta.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setActivo = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.Subasta.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setCreatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.Subasta.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setUpdatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProducto.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProducto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProducto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n    activo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    ofertaFinal: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n    subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto;\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.Producto;\n      reader.readMessage(value,proto.Producto.deserializeBinaryFromReader);\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaFinal(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSubastasOfertasIdWinner(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProducto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Producto.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getOfertaFinal();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      4,\n      f\n    );\n  }\n  f = message.getSubastasOfertasIdWinner();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional Producto producto = 2;\n * @return {?proto.Producto}\n */\nproto.SubastaProducto.prototype.getProducto = function() {\n  return /** @type{?proto.Producto} */ (\n    jspb.Message.getWrapperField(this, proto.Producto, 2));\n};\n\n\n/**\n * @param {?proto.Producto|undefined} value\n * @return {!proto.SubastaProducto} returns this\n*/\nproto.SubastaProducto.prototype.setProducto = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.clearProducto = function() {\n  return this.setProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SubastaProducto.prototype.hasProducto = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool activo = 3;\n * @return {boolean}\n */\nproto.SubastaProducto.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setActivo = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional float oferta_final = 4;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getOfertaFinal = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setOfertaFinal = function(value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n\n\n/**\n * optional int32 subastas_ofertas_id_winner = 5;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.SubastaProductos.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProductos.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProductos.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProductos} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductos.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastasProductosList: jspb.Message.toObjectList(msg.getSubastasProductosList(),\n    proto.SubastaProducto.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductos}\n */\nproto.SubastaProductos.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductos;\n  return proto.SubastaProductos.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductos} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductos}\n */\nproto.SubastaProductos.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.SubastaProducto;\n      reader.readMessage(value,proto.SubastaProducto.deserializeBinaryFromReader);\n      msg.addSubastasProductos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProductos.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductos.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductos} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductos.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastasProductosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.SubastaProducto.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SubastaProducto subastas_productos = 1;\n * @return {!Array<!proto.SubastaProducto>}\n */\nproto.SubastaProductos.prototype.getSubastasProductosList = function() {\n  return /** @type{!Array<!proto.SubastaProducto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.SubastaProducto, 1));\n};\n\n\n/**\n * @param {!Array<!proto.SubastaProducto>} value\n * @return {!proto.SubastaProductos} returns this\n*/\nproto.SubastaProductos.prototype.setSubastasProductosList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.SubastaProducto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProductos.prototype.addSubastasProductos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SubastaProducto, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.SubastaProductos} returns this\n */\nproto.SubastaProductos.prototype.clearSubastasProductosList = function() {\n  return this.setSubastasProductosList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaId.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId;\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaId} returns this\n */\nproto.SubastaId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Subastas.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subastas.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subastas.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subastas} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subastas.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastasList: jspb.Message.toObjectList(msg.getSubastasList(),\n    proto.Subasta.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subastas}\n */\nproto.Subastas.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subastas;\n  return proto.Subastas.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subastas} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subastas}\n */\nproto.Subastas.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Subasta;\n      reader.readMessage(value,proto.Subasta.deserializeBinaryFromReader);\n      msg.addSubastas(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subastas.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subastas.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subastas} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subastas.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastasList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Subasta.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Subasta subastas = 1;\n * @return {!Array<!proto.Subasta>}\n */\nproto.Subastas.prototype.getSubastasList = function() {\n  return /** @type{!Array<!proto.Subasta>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Subasta, 1));\n};\n\n\n/**\n * @param {!Array<!proto.Subasta>} value\n * @return {!proto.Subastas} returns this\n*/\nproto.Subastas.prototype.setSubastasList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Subasta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Subasta}\n */\nproto.Subastas.prototype.addSubastas = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Subasta, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Subastas} returns this\n */\nproto.Subastas.prototype.clearSubastasList = function() {\n  return this.setSubastasList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProductoId.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProductoId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProductoId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductoId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductoId}\n */\nproto.SubastaProductoId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductoId;\n  return proto.SubastaProductoId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductoId}\n */\nproto.SubastaProductoId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProductoId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductoId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaProductoId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoId} returns this\n */\nproto.SubastaProductoId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaOferta.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaOferta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaOferta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    user: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    ofertaPrecio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta;\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUser(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaPrecio(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaOferta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUser();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOfertaPrecio();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string user = 1;\n * @return {string}\n */\nproto.SubastaOferta.prototype.getUser = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaOferta} returns this\n */\nproto.SubastaOferta.prototype.setUser = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\nproto.SubastaOferta.prototype.getOfertaPrecio = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaOferta} returns this\n */\nproto.SubastaOferta.prototype.setOfertaPrecio = function(value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty;\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Cliente.prototype.toObject = function(opt_includeInstance) {\n  return proto.Cliente.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Cliente} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    ciudad: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    iva: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente;\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCliente(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCuit(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDireccion(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCiudad(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIva(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Cliente.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCuit();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDireccion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCiudad();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getIva();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Cliente.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string cliente = 2;\n * @return {string}\n */\nproto.Cliente.prototype.getCliente = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setCliente = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string cuit = 3;\n * @return {string}\n */\nproto.Cliente.prototype.getCuit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setCuit = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string direccion = 4;\n * @return {string}\n */\nproto.Cliente.prototype.getDireccion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setDireccion = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string ciudad = 5;\n * @return {string}\n */\nproto.Cliente.prototype.getCiudad = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setCiudad = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string iva = 6;\n * @return {string}\n */\nproto.Cliente.prototype.getIva = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setIva = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ClienteId.prototype.toObject = function(opt_includeInstance) {\n  return proto.ClienteId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ClienteId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId;\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ClienteId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ClienteId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ClienteId} returns this\n */\nproto.ClienteId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Producto.prototype.toObject = function(opt_includeInstance) {\n  return proto.Producto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Producto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    precioInicial: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n    precioAumento: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),\n    precioSubasta: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n    cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto;\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescripcion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStock(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioInicial(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioAumento(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioSubasta(value);\n      break;\n    case 8:\n      var value = new proto.Cliente;\n      reader.readMessage(value,proto.Cliente.deserializeBinaryFromReader);\n      msg.setCliente(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Producto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescripcion();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStock();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getPrecioInicial();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      5,\n      f\n    );\n  }\n  f = message.getPrecioAumento();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      6,\n      f\n    );\n  }\n  f = message.getPrecioSubasta();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.Cliente.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Producto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string producto = 2;\n * @return {string}\n */\nproto.Producto.prototype.getProducto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setProducto = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\nproto.Producto.prototype.getDescripcion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setDescripcion = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\nproto.Producto.prototype.getStock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setStock = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional float precio_inicial = 5;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioInicial = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setPrecioInicial = function(value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n\n\n/**\n * optional float precio_aumento = 6;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioAumento = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setPrecioAumento = function(value) {\n  return jspb.Message.setProto3FloatField(this, 6, value);\n};\n\n\n/**\n * optional float precio_subasta = 7;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioSubasta = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setPrecioSubasta = function(value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional Cliente cliente = 8;\n * @return {?proto.Cliente}\n */\nproto.Producto.prototype.getCliente = function() {\n  return /** @type{?proto.Cliente} */ (\n    jspb.Message.getWrapperField(this, proto.Cliente, 8));\n};\n\n\n/**\n * @param {?proto.Cliente|undefined} value\n * @return {!proto.Producto} returns this\n*/\nproto.Producto.prototype.setCliente = function(value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.clearCliente = function() {\n  return this.setCliente(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Producto.prototype.hasCliente = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ProductoId.prototype.toObject = function(opt_includeInstance) {\n  return proto.ProductoId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ProductoId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ProductoId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ProductoId}\n */\nproto.ProductoId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ProductoId;\n  return proto.ProductoId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ProductoId}\n */\nproto.ProductoId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ProductoId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ProductoId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ProductoId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ProductoId} returns this\n */\nproto.ProductoId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\nproto.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User;\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\nproto.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.User.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.User.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string email = 3;\n * @return {string}\n */\nproto.User.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.User.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.User.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setCreatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.User.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setUpdatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}