{"ast":null,"code":"import _toConsumableArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n/** My Client gRPC - to Golang gRPC Server */\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n  /** Info Subasta */\n\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n  /** Lista de productos en subasta */\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n  /** Producto actual en Subasta */\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoEnSubastaActual = _useState6[0],\n      setProductoEnSubastaActual = _useState6[1];\n  /** Producto subasta */\n\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      subastaProductoActual = _useState8[0],\n      setSubastaProductoActual = _useState8[1];\n  /** Set Precio de oferta */\n\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      winnerOferta = _useState10[0],\n      setWinnerOferta = _useState10[1];\n  /** Error form add oferta */\n\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error_message = _useState12[0],\n      setErrorMessage = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      rows = _useState14[0],\n      setRows = _useState14[1];\n\n  var _useState15 = useState(undefined),\n      _useState16 = _slicedToArray(_useState15, 2),\n      valSubastaOferta = _useState16[0],\n      setValSubastaOferta = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      user = _useState18[0],\n      setUser = _useState18[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token;\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      fecha = _useState20[0],\n      setFecha = _useState20[1];\n\n  var _useState21 = useState(\"00\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      second = _useState22[0],\n      setSecond = _useState22[1];\n\n  var _useState23 = useState(\"00\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      minute = _useState24[0],\n      setMinute = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      startCount = _useState26[0],\n      setStartCount = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      subastaFinalizada = _useState28[0],\n      setSubastaFinalizada = _useState28[1];\n  /** Controles de tiempo */\n\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      inicio = _useState30[0],\n      setInicio = _useState30[1];\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      fin = _useState32[0],\n      setFin = _useState32[1];\n\n  useEffect(function () {\n    /** The Subasta */\n    getSubasta();\n    /** Products from subasta */\n\n    getSubastaProductos();\n    /** Ofertas */\n    //getSubastaOfertas();\n\n    /** Set Data for User */\n\n    getUser();\n    getTest();\n  }, []);\n\n  var getTest = function getTest() {\n    var fecha1 = moment(\"2022-04-07 09:30:00\");\n    var fecha2 = moment(\"2022-04-07 09:30:00\");\n    /*   \n    console.log(\"fecha1: \", fecha1);\n    console.log(\"fecha2: \", fecha2);\n     console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n    \n     console.log(\"Se agrego 10 minutos a la fecha 2\");\n    fecha2.add(10, 'minute');\n    console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n     */\n  };\n  /** Hacer generica la funcion para reutilizarla en el proximo producto */\n\n\n  useEffect(function () {\n    if (subasta.fecha && subasta.duracion) {\n      var interval = setInterval(function () {\n        var _fecha = moment(subasta.fecha);\n\n        var actual = moment();\n        var tiempo_maximo = moment(subasta.fecha);\n        tiempo_maximo.add(subasta.duracion, 'minute');\n        var diferencia_tiempo_maximo = actual.diff(tiempo_maximo, 'minute');\n        var diferencia_t_m_seconds = actual.diff(tiempo_maximo, 'second');\n\n        if (actual > tiempo_maximo) {\n          // Llego tarde.\n          var _fecha2 = \"Ya ha finalizado este fragmento de subasta . . . \";\n          setFecha(_fecha2);\n          setStartCount(false);\n          clearInterval(interval);\n          return;\n        }\n\n        if (diferencia_tiempo_maximo == 0 && diferencia_t_m_seconds == 0) {\n          // quedo no tocar\n          var _fecha3 = \"El tiempo de subasta de este producto ha terminado . . . \";\n          setFecha(_fecha3);\n          setStartCount(false);\n          clearInterval(interval);\n          return;\n        }\n\n        var diferencia = _fecha.diff(actual, 'minute');\n\n        var dif_seconds = _fecha.diff(actual, 'second');\n\n        console.log(\"loop diferencia minutos: \", diferencia, \" segundos: \", dif_seconds);\n        console.log(\"estatus \", subastaProductoActual);\n\n        if (diferencia == 0 && dif_seconds == 0) {\n          console.log(\"hola\", diferencia);\n          var request = new proto.SubastaProductoId();\n          request.setId(productoEnSubastaActual.productos_id);\n          subastaService.setProductoEnSubasta(request, {}, function (error, _) {\n            if (error) {\n              setErrorMessage(error.code + \" \" + error.message);\n              setStartCount(false);\n              return;\n            } else {}\n            /* subastaProductoActual.status = \"en subasta\";\n            setSubastaProductoActual(subastaProductoActual); */\n\n\n            setStartCount(true);\n          });\n          var _fecha4 = \"Ha comenzado la subasta . . .\";\n          setFecha(_fecha4);\n          return;\n        }\n\n        console.log(\"mostrar restante: minutos \", diferencia_tiempo_maximo, \" segundos \", diferencia_t_m_seconds);\n\n        if (diferencia_tiempo_maximo < 0 && diferencia_t_m_seconds < 0) {\n          var segundos = 0;\n\n          if (diferencia_tiempo_maximo * -1 !== 0) {\n            segundos = diferencia_t_m_seconds * -1 - diferencia_tiempo_maximo * -1 * 60;\n          } else {\n            segundos = diferencia_t_m_seconds * -1;\n          }\n\n          var min = diferencia_tiempo_maximo * -1;\n          setMinute(min);\n          setSecond(segundos);\n\n          var _fecha5 = \"Restan \" + min + \" minutos \" + segundos + \" segundos.\";\n\n          setFecha(_fecha5);\n        }\n\n        if (diferencia >= 0 && dif_seconds > 0) {\n          // quedo ! no tocar\n          var _fecha6 = \"ComenzarÃ¡ en \" + diferencia + \" minutos \" + (dif_seconds - diferencia * 60) + \" segundos.\";\n\n          setFecha(_fecha6);\n        }\n      }, 1000);\n    }\n  }, [subasta.fecha, subasta.duracion]); // Se ejecuta cuando la variable fecha esta lista\n\n  useEffect(function () {\n    if (startCount) {\n      var pSubastaInicio = moment(subasta.fecha);\n      var pSubastaFin = moment(subasta.fecha);\n      pSubastaFin.add(subasta.duracion, 'minute');\n      var interval = setInterval(function () {\n        console.log(\"_____ itera ??? \");\n        var diferencia = pSubastaFin.diff(pSubastaInicio, 'minutes');\n\n        if (diferencia === 0) {\n          setStartCount(false);\n          setFecha(\"Subasta producto \" + productoEnSubastaActual.producto + \" ha finalizado\");\n          clearInterval(interval);\n        }\n      }, 1000);\n    }\n  }, [startCount]);\n\n  var getUser = function getUser() {\n    var token_decoded = jwt_decode(token);\n    var user = {\n      users_id: token_decoded.users_id,\n      name: token_decoded.name,\n      photo: token_decoded.profile_photo_path\n    };\n    setUser(user);\n  };\n\n  var getSubastaOfertas = function getSubastaOfertas() {\n    console.log(\"Obteniendo subastas ofertas -- from server golang\");\n    var request = new proto.SubastaProductoId();\n    request.setId(productoEnSubastaActual.id);\n    var stream = subastaService.getSubastaOfertas(request, {});\n    stream.on('data', function (response) {\n      var record = {\n        user: response.getUser(),\n        oferta: response.getOfertaPrecio()\n      };\n\n      if (record.oferta > winnerOferta) {\n        setWinnerOferta(record.oferta);\n      }\n\n      setRows(function (rows) {\n        return [].concat(_toConsumableArray(rows), [record]);\n      });\n    });\n  };\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          duracion: response.getDuracion(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n      }\n    });\n  }\n\n  var getSubastaProductos = function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id); // Id from param \n\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            },\n            activo: subastaProducto.array[2],\n            oferta_final: subastaProducto.array[3],\n            subastas_ofertas_id_winner: subastaProducto.array[4],\n            status: subastaProducto.array[5]\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (subastaProductos) {\n      getProductoEnSubasta();\n      /* let findNextProducto = false;\n      subastaProductos.forEach(element => {\n          if(element.status === \"en espera\" && !findNextProducto){\n              setSubastaProductoActual(element)\n              setProductoEnSubastaActual(element.producto)\n              findNextProducto = true;\n          }\n      }); */\n    }\n  }, [subastaProductos]);\n\n  var getProductoEnSubasta = function getProductoEnSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id); // id from params\n\n    subastaService.getSubastaProducto(request, {}, function (error, response) {\n      if (error) {\n        setErrorMessage(error.message);\n        return;\n      }\n\n      var subastaProducto = {\n        id: response.array[0],\n        producto: {\n          productos_id: response.array[1][0],\n          producto: response.array[1][1],\n          descripcion: response.array[1][2],\n          stock: response.array[1][3],\n          precio_inicial: response.array[1][4],\n          precio_aumento: response.array[1][5],\n          precio_subasta: response.array[1][6],\n          cliente: {\n            cliente_id: response.array[1][7][0],\n            cliente: response.array[1][7][1],\n            cuit: response.array[1][7][2],\n            direccion: response.array[1][7][3],\n            ciudad: response.array[1][7][4],\n            iva: response.array[1][7][5]\n          }\n        },\n        activo: response.array[2],\n        oferta_final: response.array[3],\n        subastas_ofertas_id_winner: response.array[4],\n        status: response.array[5]\n      };\n      setSubastaProductoActual(subastaProducto);\n      setProductoEnSubastaActual(subastaProducto.producto);\n    });\n  };\n\n  var handlerCreateSubastaOferta = function handlerCreateSubastaOferta(e) {\n    e.preventDefault();\n\n    if (!(valSubastaOferta !== \"\" && valSubastaOferta > productoEnSubastaActual.precio_inicial)) {\n      setErrorMessage('El valor de oferta de ser superior o igual al precio inicial.');\n      return;\n    }\n\n    var ofertaGanadora = 0;\n\n    if (winnerOferta === 0) {\n      ofertaGanadora = productoEnSubastaActual.precio_inicial;\n    } else {\n      ofertaGanadora = winnerOferta;\n    }\n\n    ;\n    console.log(winnerOferta, productoEnSubastaActual.precio_inicial, ofertaGanadora + productoEnSubastaActual.precio_aumento);\n\n    if (!(valSubastaOferta >= ofertaGanadora + productoEnSubastaActual.precio_aumento)) {\n      setErrorMessage('El valor de oferta de ser superior o igual al precio ganador + el precio de aumento del producto.');\n      return;\n    }\n\n    var subastaOfertaCreate = new proto.SubastaOfertaCreate();\n    subastaOfertaCreate.setUsersId(user.users_id);\n    subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n    subastaOfertaCreate.setSubastasProductosId(1);\n    subastaService.addSubastaOferta(subastaOfertaCreate, {}, function (error, _) {\n      if (error !== null) console.log(error.code, error.message);\n    });\n    setValSubastaOferta(undefined);\n    document.getElementById('valSubastaOferta').value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, subasta.subasta), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 33\n    }\n  }, \"Subastando - \", productoEnSubastaActual.producto, \" / \", subastaProductoActual.status, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 118\n    }\n  }), \"Unidades - \", productoEnSubastaActual.stock, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 80\n    }\n  }))), startCount && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 44\n    }\n  }, winnerOferta > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"outlined\",\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 37\n    }\n  }, \"Oferta ganadora: \", winnerOferta)), error_message !== '' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 37\n    }\n  }, error_message)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputProps: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*'\n    },\n    style: {\n      height: '38px'\n    },\n    id: \"valSubastaOferta\",\n    onChange: function onChange(e) {\n      return setValSubastaOferta(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Ofertar\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlerCreateSubastaOferta,\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"large\"\n    /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n    ,\n    style: {\n      padding: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 37\n    }\n  }, \"Ofertar\"))), startCount && /*#__PURE__*/React.createElement(DataGridSubastaOfertas, {\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '40px',\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 33\n    }\n  }, fecha), startCount && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    sx: {\n      borderRadius: 1,\n      backgroundColor: '#e6e6e6',\n      margin: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  }, minute), /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    sx: {\n      borderRadius: 1,\n      backgroundColor: '#e6e6e6',\n      margin: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 37\n    }\n  }, second))), /*#__PURE__*/React.createElement(StepperVertical, {\n    steps: subastaProductos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useParams","Alert","Box","Button","Container","Grid","TextField","Typography","proto","DataGridSubastaOfertas","Layout","useToken","jwt_decode","StepperVertical","moment","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoEnSubastaActual","setProductoEnSubastaActual","subastaProductoActual","setSubastaProductoActual","winnerOferta","setWinnerOferta","error_message","setErrorMessage","rows","setRows","undefined","valSubastaOferta","setValSubastaOferta","user","setUser","token","fecha","setFecha","second","setSecond","minute","setMinute","startCount","setStartCount","subastaFinalizada","setSubastaFinalizada","inicio","setInicio","fin","setFin","getSubasta","getSubastaProductos","getUser","getTest","fecha1","fecha2","duracion","interval","setInterval","_fecha","actual","tiempo_maximo","add","diferencia_tiempo_maximo","diff","diferencia_t_m_seconds","clearInterval","diferencia","dif_seconds","console","log","request","SubastaProductoId","setId","productos_id","setProductoEnSubasta","error","_","code","message","segundos","min","pSubastaInicio","pSubastaFin","producto","token_decoded","users_id","name","photo","profile_photo_path","getSubastaOfertas","stream","on","response","record","oferta","getOfertaPrecio","SubastaId","metadata","err","getId","getFecha","activo","getActivo","getDuracion","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","oferta_final","subastas_ofertas_id_winner","status","getProductoEnSubasta","getSubastaProducto","handlerCreateSubastaOferta","e","preventDefault","ofertaGanadora","subastaOfertaCreate","SubastaOfertaCreate","setUsersId","setOfertaPrecio","setSubastasProductosId","addSubastaOferta","document","getElementById","value","paddingTop","paddingBottom","inputMode","pattern","height","target","padding","display","justifyContent","width","borderRadius","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n\n\n/** My Client gRPC - to Golang gRPC Server */\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n\n    /** Info Subasta */\n    const [subasta, setSubasta] = useState({});\n\n    /** Lista de productos en subasta */\n    const [subastaProductos, setSubastaProductos] = useState([]);\n\n    /** Producto actual en Subasta */\n    const [productoEnSubastaActual, setProductoEnSubastaActual] = useState(0);\n\n    /** Producto subasta */\n    const [subastaProductoActual, setSubastaProductoActual] = useState(0);\n    \n    /** Set Precio de oferta */\n    const [winnerOferta, setWinnerOferta] = useState([]);\n\n    /** Error form add oferta */\n    const [error_message, setErrorMessage] = useState('')\n    const [rows, setRows] = useState([]);\n    const [valSubastaOferta, setValSubastaOferta] = useState(undefined);\n    const [user, setUser] = useState({});\n    const { token } = useToken();\n    const [fecha, setFecha] = useState(\"\");\n    const [second, setSecond] = useState(\"00\");\n    const [minute, setMinute] = useState(\"00\");\n    const [startCount, setStartCount] = useState(false);\n    const [subastaFinalizada, setSubastaFinalizada] = useState(false);\n\n    /** Controles de tiempo */\n    const [inicio, setInicio] = useState();\n    const [fin, setFin] = useState();\n\n    useEffect(() => {\n        /** The Subasta */\n        getSubasta();\n\n        /** Products from subasta */\n        getSubastaProductos();\n\n        /** Ofertas */\n        //getSubastaOfertas();\n\n        /** Set Data for User */\n        getUser();\n\n\n        getTest();\n    }, [])\n\n    const getTest = () => {\n        var fecha1 = moment(\"2022-04-07 09:30:00\");\n        var fecha2 = moment(\"2022-04-07 09:30:00\");\n\n        /*   \n        console.log(\"fecha1: \", fecha1);\n        console.log(\"fecha2: \", fecha2);\n\n        console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n        \n\n        console.log(\"Se agrego 10 minutos a la fecha 2\");\n        fecha2.add(10, 'minute');\n        console.log(fecha2.diff(fecha1, 'minutes'), \"diferencia en minutos\");\n\n        */\n    }\n\n    /** Hacer generica la funcion para reutilizarla en el proximo producto */\n    useEffect(() => {\n\n        if(subasta.fecha && subasta.duracion){\n            let interval = setInterval(() => {\n                let _fecha = moment(subasta.fecha)\n                let actual = moment();\n                let tiempo_maximo = moment(subasta.fecha);\n                tiempo_maximo.add(subasta.duracion, 'minute');\n\n                let diferencia_tiempo_maximo = actual.diff(tiempo_maximo, 'minute');\n                let diferencia_t_m_seconds = actual.diff(tiempo_maximo, 'second');\n                \n                if(actual > tiempo_maximo){ // Llego tarde.\n                    let fecha = \"Ya ha finalizado este fragmento de subasta . . . \"\n                    setFecha(fecha);\n                    setStartCount(false);\n                    clearInterval(interval);\n                    return ;\n                }\n\n                if(diferencia_tiempo_maximo == 0 && diferencia_t_m_seconds == 0){ // quedo no tocar\n                    let fecha = \"El tiempo de subasta de este producto ha terminado . . . \"\n                    setFecha(fecha);\n                    setStartCount(false);\n                    clearInterval(interval);\n                    return ;\n                }\n\n                var diferencia = _fecha.diff(actual, 'minute');\n                var dif_seconds = _fecha.diff(actual, 'second');\n                console.log(\"loop diferencia minutos: \", diferencia, \" segundos: \", dif_seconds);\n                console.log(\"estatus \", subastaProductoActual);\n                if (diferencia == 0 && dif_seconds == 0){\n                    console.log(\"hola\", diferencia)\n                    let request = new proto.SubastaProductoId();\n\n                    request.setId(productoEnSubastaActual.productos_id);\n                    subastaService.setProductoEnSubasta(request, {}, (error, _) => {\n                        if(error){\n                            setErrorMessage(error.code+\" \"+error.message);\n                            setStartCount(false);\n\n                            return ;\n                        }else {\n\n                        }\n\n                        \n                        /* subastaProductoActual.status = \"en subasta\";\n                        setSubastaProductoActual(subastaProductoActual); */\n                        setStartCount(true);\n                    })\n\n                    let fecha = \"Ha comenzado la subasta . . .\";\n                    setFecha(fecha);\n                    return ;\n                }\n\n                console.log(\"mostrar restante: minutos \", diferencia_tiempo_maximo, \" segundos \", diferencia_t_m_seconds);\n                if(diferencia_tiempo_maximo < 0 && diferencia_t_m_seconds < 0){\n                    let segundos = 0;\n                    if((diferencia_tiempo_maximo*-1) !== 0){\n                        segundos = ((diferencia_t_m_seconds*-1) - ((diferencia_tiempo_maximo*-1))*60);\n                    }else{\n                        segundos = (diferencia_t_m_seconds*-1);\n                    }\n                    let min = diferencia_tiempo_maximo*-1;\n                    setMinute(min);\n                    setSecond(segundos);\n                    let fecha = \"Restan \"+ min + \" minutos \"+ segundos + \" segundos.\";\n                    setFecha(fecha)\n                }\n\n                if(diferencia >= 0 && dif_seconds > 0){ // quedo ! no tocar\n                    let fecha = \"ComenzarÃ¡ en \"+ diferencia + \" minutos \" + (dif_seconds-(diferencia*60)) + \" segundos.\";\n                    setFecha(fecha)\n                }\n            }, 1000)\n        }\n    }, [subasta.fecha, subasta.duracion]) // Se ejecuta cuando la variable fecha esta lista\n\n\n    useEffect(() => {\n         if(startCount){\n            let pSubastaInicio = moment(subasta.fecha);\n            let pSubastaFin = moment(subasta.fecha)\n            pSubastaFin.add(subasta.duracion, 'minute');\n\n            let interval = setInterval(() => {\n                console.log(\"_____ itera ??? \")\n                let diferencia = pSubastaFin.diff(pSubastaInicio, 'minutes');\n                if(diferencia === 0){\n                    setStartCount(false);\n                    setFecha(\"Subasta producto \"+productoEnSubastaActual.producto+ \" ha finalizado\");\n    \n                    clearInterval(interval)\n                }\n            }, 1000)\n        }\n\n    }, [startCount])\n\n    const getUser = () => {\n        var token_decoded = jwt_decode(token);\n        let user = {\n            users_id: token_decoded.users_id,\n            name: token_decoded.name,\n            photo: token_decoded.profile_photo_path,\n        }\n        setUser(user);\n    }\n\n    const getSubastaOfertas = () => {\n        console.log(\"Obteniendo subastas ofertas -- from server golang\")\n    \n        let request = new proto.SubastaProductoId();\n        request.setId(productoEnSubastaActual.id)\n        var stream = subastaService.getSubastaOfertas(request, {});\n\n        stream.on('data', function(response){\n            let record = {\n                user: response.getUser(),\n                oferta: response.getOfertaPrecio()\n            };   \n\n            if(record.oferta > winnerOferta){\n                setWinnerOferta(record.oferta)\n            }\n\n            setRows((rows) => [...rows, record])\n        })\n\n    };\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n            if (err) {\n                console.log(err.code, err.message);\n            } else {\n                let subasta = {\n                    id: response.getId(),\n                    subasta: response.getSubasta(),\n                    fecha: response.getFecha(),\n                    activo: response.getActivo(),\n                    duracion: response.getDuracion(),\n                    created_at: response.getCreatedAt(),\n                    updated_at: response.getUpdatedAt()\n                }\n                setSubasta(subasta);\n            }\n        });\n    }\n\n    const getSubastaProductos = () => {\n        var request = new proto.SubastaId()\n        request.setId(id) // Id from param \n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                },\n                            },\n                            activo: subastaProducto.array[2],\n                            oferta_final: subastaProducto.array[3],\n                            subastas_ofertas_id_winner: subastaProducto.array[4],\n                            status: subastaProducto.array[5]\n                        }\n                    })\n                setSubastaProductos(subastaProductosList);\n            }\n        });\n    }\n\n\n    useEffect(() => {\n        if(subastaProductos){\n\n            getProductoEnSubasta();\n            /* let findNextProducto = false;\n            subastaProductos.forEach(element => {\n                if(element.status === \"en espera\" && !findNextProducto){\n                    setSubastaProductoActual(element)\n                    setProductoEnSubastaActual(element.producto)\n                    findNextProducto = true;\n                }\n            }); */\n        }\n    }, [subastaProductos])\n\n    const getProductoEnSubasta = () => {\n        let request = new proto.SubastaId()\n        request.setId(id) // id from params\n\n        subastaService.getSubastaProducto(request, {}, (error, response) => {\n            if(error){\n                setErrorMessage(error.message);\n                return ;\n            }\n\n            let subastaProducto = {\n                id: response.array[0],\n                producto: {\n                    productos_id: response.array[1][0],\n                    producto: response.array[1][1],\n                    descripcion: response.array[1][2],\n                    stock: response.array[1][3],\n                    precio_inicial: response.array[1][4],\n                    precio_aumento: response.array[1][5],\n                    precio_subasta: response.array[1][6],\n                    cliente: {\n                        cliente_id: response.array[1][7][0],\n                        cliente: response.array[1][7][1],\n                        cuit: response.array[1][7][2],\n                        direccion: response.array[1][7][3],\n                        ciudad: response.array[1][7][4],\n                        iva: response.array[1][7][5],\n                    },\n                },\n                activo: response.array[2],\n                oferta_final: response.array[3],\n                subastas_ofertas_id_winner: response.array[4],\n                status: response.array[5]\n            }\n\n            setSubastaProductoActual(subastaProducto)\n            setProductoEnSubastaActual(subastaProducto.producto);\n        })\n    }\n\n\n    const handlerCreateSubastaOferta = (e) => {\n        e.preventDefault();\n\n        if(!(valSubastaOferta !== \"\" && valSubastaOferta > productoEnSubastaActual.precio_inicial)) {\n            setErrorMessage('El valor de oferta de ser superior o igual al precio inicial.');\n            return ;\n        }\n\n        var ofertaGanadora = 0;\n        if(winnerOferta === 0) {\n            ofertaGanadora = productoEnSubastaActual.precio_inicial} \n        else {\n            ofertaGanadora = winnerOferta;\n        };\n        console.log(winnerOferta, productoEnSubastaActual.precio_inicial, ofertaGanadora+productoEnSubastaActual.precio_aumento)\n        if(!(valSubastaOferta >= (ofertaGanadora+productoEnSubastaActual.precio_aumento))){\n            setErrorMessage('El valor de oferta de ser superior o igual al precio ganador + el precio de aumento del producto.');\n            return ;\n        } \n\n        let subastaOfertaCreate = new proto.SubastaOfertaCreate();\n        subastaOfertaCreate.setUsersId(user.users_id);\n        subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n        subastaOfertaCreate.setSubastasProductosId(1);\n\n        subastaService.addSubastaOferta(subastaOfertaCreate, {}, (error, _) => {\n            if(error !== null) console.log(error.code, error.message);\n        });\n\n        setValSubastaOferta(undefined)\n        document.getElementById('valSubastaOferta').value = '';\n    }\n\n    return (\n        <Layout>\n            <Box sx={{ paddingTop: 8 }}>\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item xs={5} align=\"left\">      \n                            <Box style={{ paddingBottom: '20px' }}>\n                                <Typography variant=\"h1\" fontSize={40}>\n                                    {subasta.subasta}\n                                </Typography>        \n                                <Typography>\n                                    Subastando - {productoEnSubastaActual.producto} / {subastaProductoActual.status} <br></br>  \n                                    Unidades - {productoEnSubastaActual.stock} <br></br>\n                                </Typography>    \n                            </Box>\n\n\n                            {startCount && <Grid container>   \n                                {winnerOferta > 0 &&\n                                <Grid item xs={12} paddingY={4}>\n                                    <Alert  variant=\"outlined\" severity=\"success\">\n                                        Oferta ganadora: { winnerOferta }\n                                    </Alert>\n                                </Grid>}\n\n\n                                {error_message !== '' &&\n                                <Grid item xs={12} paddingBottom={4}> \n                                    <Alert severity=\"error\">{ error_message }</Alert>  \n                                </Grid>}\n\n                                <Grid item xs={8}>\n                                    <TextField \n                                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*'  }}\n                                        style={{ height:'38px' }}\n                                        id=\"valSubastaOferta\" \n                                        onChange={(e) => setValSubastaOferta(e.target.value)} \n                                        fullWidth \n                                        label=\"Ofertar\" \n                                        variant=\"outlined\" \n                                    />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={handlerCreateSubastaOferta} fullWidth variant=\"outlined\" size=\"large\" \n                                        /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n                                        style={{ padding:'14px' }}\n                                    >\n                                        Ofertar\n                                    </Button>\n                                </Grid>\n                            </Grid>}\n\n\n                            {startCount && <DataGridSubastaOfertas rows={rows} />}\n                            \n                        </Grid>\n\n                        <Grid item xs={7}>  \n                                \n                            <Box style={{ paddingBottom: '40px', paddingTop: '20px' }}>\n                                <Typography align='center'>\n                                    {fecha} \n                                </Typography>\n                                \n                                {startCount && \n                                <div style={{ display:'flex', justifyContent:'center', width:'100%' }}>\n                                    <Box padding={2} sx={{ borderRadius: 1, backgroundColor: '#e6e6e6', margin: 1 }}>\n                                        {minute}\n                                    </Box>\n                                \n                                    <Box padding={2} sx={{ borderRadius: 1, backgroundColor: '#e6e6e6', margin: 1 }}>\n                                        {second}\n                                    </Box>\n                                </div>}\n\n                            </Box>\n\n                            <StepperVertical steps={subastaProductos}/>\n                            {/*  <StepperListSubastaProductos subastaProductos={subastaProductos}/> */}\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </Layout>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}