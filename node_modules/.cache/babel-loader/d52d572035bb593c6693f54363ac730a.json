{"ast":null,"code":"import _toConsumableArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n/** My Client gRPC - to Golang gRPC Server */\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n  /** Info Subasta */\n\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n  /** Lista de productos en subasta */\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n  /** Producto actual en Subasta */\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoEnSubastaActual = _useState6[0],\n      setProductoEnSubastaActual = _useState6[1];\n  /** Producto subasta */\n\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      productoActual = _useState8[0],\n      setProductoActual = _useState8[1];\n  /** Set Precio de oferta */\n\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      winnerUser = _useState10[0],\n      setWinnerUser = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      winnerOferta = _useState12[0],\n      setWinnerOferta = _useState12[1];\n  /** Error form add oferta */\n\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      error_message = _useState14[0],\n      setErrorMessage = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      rows = _useState16[0],\n      setRows = _useState16[1];\n\n  var _useState17 = useState(undefined),\n      _useState18 = _slicedToArray(_useState17, 2),\n      valSubastaOferta = _useState18[0],\n      setValSubastaOferta = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      user = _useState20[0],\n      setUser = _useState20[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token;\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      fecha = _useState22[0],\n      setFecha = _useState22[1];\n\n  var _useState23 = useState(\"00\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      second = _useState24[0],\n      setSecond = _useState24[1];\n\n  var _useState25 = useState(\"00\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      minute = _useState26[0],\n      setMinute = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      startCount = _useState28[0],\n      setStartCount = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      subastaFinalizada = _useState30[0],\n      setSubastaFinalizada = _useState30[1];\n  /** Step producto */\n\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      productoStep = _useState32[0],\n      setProductoStep = _useState32[1];\n  /** Controles de tiempo */\n\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      inicio = _useState34[0],\n      setInicio = _useState34[1];\n\n  var _useState35 = useState(),\n      _useState36 = _slicedToArray(_useState35, 2),\n      duracion = _useState36[0],\n      setDuracion = _useState36[1];\n\n  var _useState37 = useState(),\n      _useState38 = _slicedToArray(_useState37, 2),\n      fin = _useState38[0],\n      setFin = _useState38[1];\n\n  useEffect(function () {\n    /** The Subasta */\n    getSubasta();\n    /** Products from subasta */\n\n    getSubastaProductos();\n    /** Set Data for User */\n\n    getUser();\n  }, []);\n  /** Hacer generica la funcion para reutilizarla en el proximo producto */\n\n  useEffect(function () {\n    if (duracion !== undefined && inicio !== undefined) {\n      var interval = setInterval(function () {\n        var _fecha = moment(inicio);\n\n        var actual = moment();\n        var tiempo_maximo = moment(inicio);\n        tiempo_maximo.add(duracion, 'minute');\n        var diferencia_tiempo_maximo = actual.diff(tiempo_maximo, 'minute');\n        var diferencia_t_m_seconds = actual.diff(tiempo_maximo, 'second'); //console.log(\"diferencia tiempo maximo \", diferencia_tiempo_maximo, \" \", diferencia_t_m_seconds);\n\n        if (diferencia_tiempo_maximo > 0 && diferencia_t_m_seconds > 0) {\n          // Llego tarde.\n          var _fecha2 = \"Ya ha finalizado este fragmento de subasta . . . \";\n          setFecha(_fecha2);\n          setStartCount(false);\n          clearInterval(interval);\n          return;\n        }\n\n        if (diferencia_tiempo_maximo == 0 && diferencia_t_m_seconds == 0) {\n          // quedo no tocar\n          var _fecha3 = \"El tiempo de subasta de este producto ha terminado . . . \";\n          setFecha(_fecha3);\n          setStartCount(false);\n          clearInterval(interval);\n          return;\n        }\n\n        var diferencia = _fecha.diff(actual, 'minute');\n\n        var dif_seconds = _fecha.diff(actual, 'second');\n        /** Dentro de la subasta */\n\n\n        if (diferencia <= 0 && dif_seconds <= 0) {\n          var _fecha4 = \"Ha comenzado la subasta\";\n          setFecha(_fecha4);\n          console.log(\" --------- DENTRO DEL TIEMPO DE SUBASTA --------- \");\n          var min = diferencia_tiempo_maximo !== 0 ? diferencia_tiempo_maximo * -1 : diferencia_tiempo_maximo;\n          var segundo = diferencia_t_m_seconds !== 0 ? diferencia_t_m_seconds * -1 - min * 60 : diferencia_t_m_seconds;\n          setMinute(min);\n          setSecond(segundo);\n          setStartCount(true);\n          return;\n        }\n\n        if (diferencia >= 0 && dif_seconds > 0) {\n          // quedo ! no tocar\n          var _fecha5 = \"Comenzar√° en \" + diferencia + \" minutos \" + (dif_seconds - diferencia * 60) + \" segundos.\";\n\n          setFecha(_fecha5);\n        }\n      }, 1000);\n    }\n  }, [inicio, duracion]); // Se ejecuta cuando la variable fecha esta lista\n\n  /** Subasta Oferta Winn y Ofertas */\n\n  useEffect(function () {\n    setInterval(function () {\n      getSubastaOfertaWinner();\n    }, 500);\n    getStreamSubastaOfertas();\n  }, [startCount, productoEnSubastaActual]);\n\n  var getSubastaOfertaWinner = function getSubastaOfertaWinner() {\n    var request = new proto.SubastaProductoId();\n    request.setId(productoEnSubastaActual.id);\n    subastaService.getSubastaOfertaWinner(request, {}, function (error, response) {\n      if (error) {\n        setErrorMessage(error.message);\n      } else {\n        var oferta_precio = response.getOfertaPrecio();\n\n        var _user = response.getUser();\n\n        if (winnerOferta < oferta_precio) {\n          setWinnerOferta(oferta_precio);\n          setWinnerUser(_user);\n        }\n      }\n    });\n  };\n  /** Get User info */\n\n\n  var getUser = function getUser() {\n    var token_decoded = jwt_decode(token);\n    var user = {\n      users_id: token_decoded.users_id,\n      name: token_decoded.name,\n      photo: token_decoded.profile_photo_path\n    };\n    setUser(user);\n  };\n\n  var getStreamSubastaOfertas = function getStreamSubastaOfertas() {\n    var request = new proto.SubastaProductoId();\n    request.setId(productoEnSubastaActual.id);\n    /** Ofertas de la subasta de un producto */\n\n    var stream = subastaService.getStreamSubastaOfertas(request, {});\n    stream.on('data', function (response) {\n      var record = {\n        user: response.getUser(),\n        oferta: response.getOfertaPrecio()\n      };\n      setRows(function (rows) {\n        return [].concat(_toConsumableArray(rows), [record]);\n      });\n    });\n    stream.on(\"status\", function (status) {\n      console.log(status.code, status.details, status.metadata);\n    });\n    stream.on(\"end\", function () {\n      console.log(\"Stream ended.\");\n    });\n    /* var stream_oferta_winner = subastaService.getStreamSubastaOfertaWinner(request, {});\n    stream_oferta_winner.on('data', function(response){\n        console.log(\"RESPUESTA GANADORA\", response.getOfertaPrecio())\n        setWinnerUser(response.getUser())\n        setWinnerOferta(response.getOfertaPrecio())\n    });\n     stream_oferta_winner.on(\"status\", function (status) {\n        console.log(status.code, status.details, status.metadata);\n      });\n           stream_oferta_winner.on(\"end\", () => {\n        console.log(\"Stream ended.\");\n    }); */\n  };\n\n  var getSubasta = function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          duracion: response.getDuracion(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n        setInicio(response.getFecha());\n        setDuracion(response.getDuracion());\n      }\n    });\n  };\n\n  var getSubastaProductos = function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id); // Id from param \n\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            },\n            activo: subastaProducto.array[2],\n            oferta_final: subastaProducto.array[3],\n            subastas_ofertas_id_winner: subastaProducto.array[4],\n            status: subastaProducto.array[5],\n            orden: response.array[6],\n            inicio: response.array[7]\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n      }\n    });\n  };\n  /** Actualizar el producto en subasta una vez terminado */\n\n\n  var setUpdateProductoEnSubasta = function setUpdateProductoEnSubasta() {\n    var now = moment();\n    /** Set oferta final y winner */\n\n    /*  let request = new proto.SubastaProductoId();\n     request.setId(productoEnSubastaActual.id)\n     subastaService.getWinner(request, {}, (error, response) => {\n         if(error){\n             let message = error.code + \" \" + error.message;\n             setErrorMessage(message)\n             return ;\n         }\n          console.log(response.getUser(), response.getOfertaFinal());\n     });\n      console.log(\"FINALIZO LA SUBASTA DEL PRODUCTO A LAS \", now) */\n  };\n  /** Importante obtener el producto actual en subasta o si no setear el producto que debe subastarse */\n\n\n  useEffect(function () {\n    getProductoEnSubasta();\n  }, []); // sin [] se ejecuta varias veces \n\n  /** Set producto actual en Stepper */\n\n  useEffect(function () {\n    if (productoEnSubastaActual.orden) {\n      var orden = productoEnSubastaActual.orden;\n      setProductoStep(orden);\n    }\n  }, [productoEnSubastaActual.orden]);\n  /** Obtener el producto en subasta si ya existe --- o si no crearlo */\n\n  var getProductoEnSubasta = function getProductoEnSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id); // id from params\n\n    subastaService.getSubastaProductoEnSubasta(request, {}, function (error, response) {\n      console.log(\"Error al obtener producto en subasta: \", error.code, error.message);\n\n      if (error) {\n        subastaService.getSubastaProductoEnEspera(request, {}, function (error, response) {\n          if (!error) {\n            var subastaProductoActual = SetterSubastaProducto(response);\n            setProductoEnSubastaActual(subastaProductoActual);\n            var producto = subastaProductoActual.producto;\n            setProductoActual(producto);\n\n            var _inicio = subastaProductoActual.inicio === undefined ? subasta.inicio : subastaProductoActual.inicio;\n\n            setInicio(_inicio); // Inicio de subasta para este producto. \n          }\n        });\n      }\n\n      if (!error) {\n        var subastaProducto = SetterSubastaProducto(response);\n        setProductoEnSubastaActual(subastaProducto);\n        setProductoActual(subastaProducto.producto);\n      }\n    });\n  };\n  /** Crear una Oferta para un producto en subasta */\n\n\n  var handlerCreateSubastaOferta = function handlerCreateSubastaOferta(e) {\n    e.preventDefault();\n    console.log(valSubastaOferta, productoActual.precio_inicial, productoEnSubastaActual.oferta_final);\n\n    if (isNaN(valSubastaOferta)) {\n      setErrorMessage('Ingresa un n√∫mero valido.');\n      return;\n    }\n\n    var ofertaGanadora = winnerOferta.oferta_precio;\n    console.log(\"Cual es la oferta ganadora actual: \", ofertaGanadora);\n\n    if (valSubastaOferta < ofertaGanadora + productoActual.precio_aumento) {\n      setErrorMessage('El valor de oferta debe ser superior a ' + (ofertaGanadora + productoActual.precio_aumento));\n      return;\n    }\n\n    var subastaOfertaCreate = new proto.SubastaOfertaCreate();\n    subastaOfertaCreate.setUsersId(user.users_id);\n    subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n    subastaOfertaCreate.setSubastasProductosId(1);\n    subastaService.addSubastaOferta(subastaOfertaCreate, {}, function (error, _) {\n      if (error !== null) console.log(error.code, error.message);\n      setErrorMessage(\"\");\n    });\n    setValSubastaOferta(undefined);\n    document.getElementById('valSubastaOferta').value = '';\n  };\n\n  var SetterSubastaProducto = function SetterSubastaProducto(response) {\n    var subastaProducto = {\n      id: response.array[0],\n      producto: {\n        productos_id: response.array[1][0],\n        producto: response.array[1][1],\n        descripcion: response.array[1][2],\n        stock: response.array[1][3],\n        precio_inicial: response.array[1][4],\n        precio_aumento: response.array[1][5],\n        precio_subasta: response.array[1][6],\n        cliente: {\n          cliente_id: response.array[1][7][0],\n          cliente: response.array[1][7][1],\n          cuit: response.array[1][7][2],\n          direccion: response.array[1][7][3],\n          ciudad: response.array[1][7][4],\n          iva: response.array[1][7][5]\n        }\n      },\n      activo: response.array[2],\n      oferta_final: response.array[3],\n      subastas_ofertas_id_winner: response.array[4],\n      status: response.array[5],\n      orden: response.array[6],\n      inicio: response.array[7]\n    };\n    return subastaProducto;\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 33\n    }\n  }, subasta.subasta), productoEnSubastaActual !== undefined && productoActual !== undefined && /*#__PURE__*/React.createElement(Typography, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 107\n    }\n  }, \"Inicio - \", productoEnSubastaActual.inicio ? productoEnSubastaActual.inicio : subasta.fecha, \" / N\\xB0 producto: \", productoEnSubastaActual.orden, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 177\n    }\n  }), \"Subastando - \", productoActual.producto, \" / \", productoEnSubastaActual.status, \" / Unidades - \", productoActual.stock, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 147\n    }\n  }))), startCount && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 44\n    }\n  }, winnerOferta !== undefined && winnerUser !== undefined && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 92\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"outlined\",\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 37\n    }\n  }, \"MEJOR OFERTA POR: \", winnerUser, \" - $ \", winnerOferta)), error_message !== '' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 37\n    }\n  }, error_message)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputProps: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*'\n    },\n    style: {\n      height: '38px'\n    },\n    id: \"valSubastaOferta\",\n    onChange: function onChange(e) {\n      return setValSubastaOferta(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Ofertar\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlerCreateSubastaOferta,\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"large\"\n    /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n    ,\n    style: {\n      padding: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 37\n    }\n  }, \"Ofertar\"))), startCount && /*#__PURE__*/React.createElement(DataGridSubastaOfertas, {\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '40px',\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 33\n    }\n  }, fecha), startCount && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    sx: {\n      borderRadius: 1,\n      backgroundColor: '#e6e6e6',\n      margin: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 37\n    }\n  }, minute, \" : \", second))), productoStep && subastaProductos && startCount && /*#__PURE__*/React.createElement(StepperVertical, {\n    steps: subastaProductos,\n    actual: productoStep - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 80\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useParams","Alert","Box","Button","Container","Grid","TextField","Typography","proto","DataGridSubastaOfertas","Layout","useToken","jwt_decode","StepperVertical","moment","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoEnSubastaActual","setProductoEnSubastaActual","productoActual","setProductoActual","winnerUser","setWinnerUser","winnerOferta","setWinnerOferta","error_message","setErrorMessage","rows","setRows","undefined","valSubastaOferta","setValSubastaOferta","user","setUser","token","fecha","setFecha","second","setSecond","minute","setMinute","startCount","setStartCount","subastaFinalizada","setSubastaFinalizada","productoStep","setProductoStep","inicio","setInicio","duracion","setDuracion","fin","setFin","getSubasta","getSubastaProductos","getUser","interval","setInterval","_fecha","actual","tiempo_maximo","add","diferencia_tiempo_maximo","diff","diferencia_t_m_seconds","clearInterval","diferencia","dif_seconds","console","log","min","segundo","getSubastaOfertaWinner","getStreamSubastaOfertas","request","SubastaProductoId","setId","error","response","message","oferta_precio","getOfertaPrecio","token_decoded","users_id","name","photo","profile_photo_path","stream","on","record","oferta","status","code","details","metadata","SubastaId","err","getId","getFecha","activo","getActivo","getDuracion","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","oferta_final","subastas_ofertas_id_winner","orden","setUpdateProductoEnSubasta","now","getProductoEnSubasta","getSubastaProductoEnSubasta","getSubastaProductoEnEspera","subastaProductoActual","SetterSubastaProducto","handlerCreateSubastaOferta","e","preventDefault","isNaN","ofertaGanadora","subastaOfertaCreate","SubastaOfertaCreate","setUsersId","setOfertaPrecio","setSubastasProductosId","addSubastaOferta","_","document","getElementById","value","paddingTop","paddingBottom","inputMode","pattern","height","target","padding","display","justifyContent","width","borderRadius","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n\n\n/** My Client gRPC - to Golang gRPC Server */\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n\n    /** Info Subasta */\n    const [subasta, setSubasta] = useState({});\n\n    /** Lista de productos en subasta */\n    const [subastaProductos, setSubastaProductos] = useState([]);\n\n    /** Producto actual en Subasta */\n    const [productoEnSubastaActual, setProductoEnSubastaActual] = useState([]);\n\n    /** Producto subasta */\n    const [productoActual, setProductoActual] = useState([]);\n    \n    /** Set Precio de oferta */\n    const [winnerUser, setWinnerUser] = useState();\n    const [winnerOferta, setWinnerOferta] = useState(0);\n\n    /** Error form add oferta */\n    const [error_message, setErrorMessage] = useState('')\n    const [rows, setRows] = useState([]);\n    const [valSubastaOferta, setValSubastaOferta] = useState(undefined);\n    const [user, setUser] = useState({});\n    const { token } = useToken();\n    const [fecha, setFecha] = useState(\"\");\n    const [second, setSecond] = useState(\"00\");\n    const [minute, setMinute] = useState(\"00\");\n    const [startCount, setStartCount] = useState(false);\n    const [subastaFinalizada, setSubastaFinalizada] = useState(false);\n    \n    /** Step producto */\n    const [productoStep, setProductoStep] = useState();\n\n    /** Controles de tiempo */\n    const [inicio, setInicio] = useState();\n    const [duracion, setDuracion] = useState();\n    const [fin, setFin] = useState();\n\n    useEffect(() => {\n        /** The Subasta */\n        getSubasta();\n\n        /** Products from subasta */        \n        getSubastaProductos();\n\n        /** Set Data for User */\n        getUser();\n    }, [])\n\n    /** Hacer generica la funcion para reutilizarla en el proximo producto */\n    useEffect(() => {\n        if(duracion !== undefined && inicio !== undefined){\n            let interval = setInterval(() => {\n                let _fecha = moment(inicio)\n                let actual = moment();\n                let tiempo_maximo = moment(inicio);\n                tiempo_maximo.add(duracion, 'minute');\n\n                let diferencia_tiempo_maximo = actual.diff(tiempo_maximo, 'minute');\n                let diferencia_t_m_seconds = actual.diff(tiempo_maximo, 'second');\n                \n                \n                //console.log(\"diferencia tiempo maximo \", diferencia_tiempo_maximo, \" \", diferencia_t_m_seconds);\n                if(diferencia_tiempo_maximo > 0 && diferencia_t_m_seconds > 0){ // Llego tarde.\n                    let fecha = \"Ya ha finalizado este fragmento de subasta . . . \"\n                    setFecha(fecha);\n                    \n                    setStartCount(false);\n                    clearInterval(interval)\n                    return ;\n                }\n\n                if(diferencia_tiempo_maximo == 0 && diferencia_t_m_seconds == 0){ // quedo no tocar\n                    let fecha = \"El tiempo de subasta de este producto ha terminado . . . \"\n                    setFecha(fecha);\n\n                    setStartCount(false);\n\n                    clearInterval(interval);\n                    return ;\n                }\n\n                var diferencia = _fecha.diff(actual, 'minute');\n                var dif_seconds = _fecha.diff(actual, 'second');\n\n                /** Dentro de la subasta */\n                if (diferencia <= 0 && dif_seconds <= 0){\n                    let fecha = \"Ha comenzado la subasta\";\n                    setFecha(fecha);\n                    console.log(\" --------- DENTRO DEL TIEMPO DE SUBASTA --------- \");\n                    let min = (diferencia_tiempo_maximo !== 0) ? (diferencia_tiempo_maximo*-1) : diferencia_tiempo_maximo;\n                    let segundo = (diferencia_t_m_seconds !== 0) ? ((diferencia_t_m_seconds*-1)-(min*60)) : diferencia_t_m_seconds;\n\n                    setMinute(min);\n                    setSecond(segundo);\n                    setStartCount(true);\n\n                    return ;\n                }\n\n                if(diferencia >= 0 && dif_seconds > 0){ // quedo ! no tocar\n                    let fecha = \"Comenzar√° en \"+ diferencia + \" minutos \" + (dif_seconds-(diferencia*60)) + \" segundos.\";\n                    setFecha(fecha)\n                }\n            }, 1000)\n        }\n    }, [inicio, duracion]) // Se ejecuta cuando la variable fecha esta lista\n\n    /** Subasta Oferta Winn y Ofertas */\n    useEffect(() => {\n        setInterval(()=>{\n            getSubastaOfertaWinner();\n        }, 500)\n        getStreamSubastaOfertas();\n    }, [startCount, productoEnSubastaActual])\n\n    const getSubastaOfertaWinner = () => {\n        let request = new proto.SubastaProductoId();\n        request.setId(productoEnSubastaActual.id);\n        subastaService.getSubastaOfertaWinner(request, {}, (error, response) => {\n            if(error){\n                setErrorMessage(error.message);\n            }else{\n                let oferta_precio = response.getOfertaPrecio();\n                let user = response.getUser();\n\n                if(winnerOferta < oferta_precio){\n                    setWinnerOferta(oferta_precio);\n                    setWinnerUser(user);\n                }\n            }\n\n        })\n    } \n\n    /** Get User info */\n    const getUser = () => {\n        var token_decoded = jwt_decode(token);\n        let user = {\n            users_id: token_decoded.users_id,\n            name: token_decoded.name,\n            photo: token_decoded.profile_photo_path,\n        }\n        setUser(user);\n    }\n\n    const getStreamSubastaOfertas = () => {\n        let request = new proto.SubastaProductoId();\n        request.setId(productoEnSubastaActual.id)\n\n        /** Ofertas de la subasta de un producto */\n        var stream = subastaService.getStreamSubastaOfertas(request, {});\n        stream.on('data', function(response){\n            let record = {\n                user: response.getUser(),\n                oferta: response.getOfertaPrecio()\n            };   \n\n            setRows((rows) => [...rows, record])\n        })\n        stream.on(\"status\", function (status) {\n            console.log(status.code, status.details, status.metadata);\n          });\n      \n        stream.on(\"end\", () => {\n            console.log(\"Stream ended.\");\n        });\n\n        \n        /* var stream_oferta_winner = subastaService.getStreamSubastaOfertaWinner(request, {});\n        stream_oferta_winner.on('data', function(response){\n            console.log(\"RESPUESTA GANADORA\", response.getOfertaPrecio())\n            setWinnerUser(response.getUser())\n            setWinnerOferta(response.getOfertaPrecio())\n        });\n\n        stream_oferta_winner.on(\"status\", function (status) {\n            console.log(status.code, status.details, status.metadata);\n          });\n      \n        stream_oferta_winner.on(\"end\", () => {\n            console.log(\"Stream ended.\");\n        }); */\n\n    };\n\n    const getSubasta = () => {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n            if (err) {\n                console.log(err.code, err.message);\n            } else {\n                let subasta = {\n                    id: response.getId(),\n                    subasta: response.getSubasta(),\n                    fecha: response.getFecha(),\n                    activo: response.getActivo(),\n                    duracion: response.getDuracion(),\n                    created_at: response.getCreatedAt(),\n                    updated_at: response.getUpdatedAt()\n                }\n\n                setSubasta(subasta);\n                setInicio(response.getFecha());\n                setDuracion(response.getDuracion());\n            }\n        });\n    }\n\n    const getSubastaProductos = () => {\n        var request = new proto.SubastaId()\n        request.setId(id) // Id from param \n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                },\n                            },\n                            activo: subastaProducto.array[2],\n                            oferta_final: subastaProducto.array[3],\n                            subastas_ofertas_id_winner: subastaProducto.array[4],\n                            status: subastaProducto.array[5],\n                            orden: response.array[6],\n                            inicio: response.array[7],\n                        }\n                    })\n                setSubastaProductos(subastaProductosList);\n            }\n        });\n    }\n\n    /** Actualizar el producto en subasta una vez terminado */\n    const setUpdateProductoEnSubasta = () => {\n        let now = moment();\n        \n        /** Set oferta final y winner */\n       /*  let request = new proto.SubastaProductoId();\n        request.setId(productoEnSubastaActual.id)\n        subastaService.getWinner(request, {}, (error, response) => {\n            if(error){\n                let message = error.code + \" \" + error.message;\n                setErrorMessage(message)\n                return ;\n            }\n\n            console.log(response.getUser(), response.getOfertaFinal());\n        });\n\n        console.log(\"FINALIZO LA SUBASTA DEL PRODUCTO A LAS \", now) */\n    }\n\n    /** Importante obtener el producto actual en subasta o si no setear el producto que debe subastarse */\n    useEffect(() => {\n\n        getProductoEnSubasta();\n    }, []) // sin [] se ejecuta varias veces \n\n    /** Set producto actual en Stepper */\n    useEffect(() => {\n        if(productoEnSubastaActual.orden){\n            let orden = productoEnSubastaActual.orden;\n            setProductoStep(orden);\n        }\n    }, [productoEnSubastaActual.orden]);\n\n    /** Obtener el producto en subasta si ya existe --- o si no crearlo */\n    const getProductoEnSubasta = () => {\n        let request = new proto.SubastaId()\n        request.setId(id) // id from params\n\n        subastaService.getSubastaProductoEnSubasta(request, {}, (error, response) => {\n            console.log(\"Error al obtener producto en subasta: \", error.code, error.message);\n            if(error){\n                subastaService.getSubastaProductoEnEspera(request, {}, (error, response) => {\n                    if(!error) {\n                        let subastaProductoActual = SetterSubastaProducto(response);\n                        setProductoEnSubastaActual(subastaProductoActual);                       \n                        let producto = subastaProductoActual.producto;\n                        setProductoActual(producto);\n\n                        let inicio = (subastaProductoActual.inicio === undefined) ? subasta.inicio : subastaProductoActual.inicio;\n                        setInicio(inicio); // Inicio de subasta para este producto. \n                        \n                    }\n                })\n            }\n\n            if(!error){\n                let subastaProducto = SetterSubastaProducto(response)            \n                setProductoEnSubastaActual(subastaProducto);\n                setProductoActual(subastaProducto.producto)\n            }\n        })\n    }\n\n\n    /** Crear una Oferta para un producto en subasta */\n    const handlerCreateSubastaOferta = (e) => {\n        e.preventDefault();\n        console.log(valSubastaOferta, productoActual.precio_inicial, productoEnSubastaActual.oferta_final);\n\n        if(isNaN(valSubastaOferta)){\n            setErrorMessage('Ingresa un n√∫mero valido.');\n            return ;\n        }\n\n        let ofertaGanadora = winnerOferta.oferta_precio;\n        console.log(\"Cual es la oferta ganadora actual: \", ofertaGanadora)\n        if(valSubastaOferta < (ofertaGanadora+productoActual.precio_aumento)){\n            setErrorMessage('El valor de oferta debe ser superior a '+ (ofertaGanadora+productoActual.precio_aumento));\n            return ;\n        } \n\n        let subastaOfertaCreate = new proto.SubastaOfertaCreate();\n        subastaOfertaCreate.setUsersId(user.users_id);\n        subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n        subastaOfertaCreate.setSubastasProductosId(1);\n\n        subastaService.addSubastaOferta(subastaOfertaCreate, {}, (error, _) => {\n            if(error !== null) console.log(error.code, error.message);\n            setErrorMessage(\"\");\n        });\n\n        setValSubastaOferta(undefined)\n        document.getElementById('valSubastaOferta').value = '';\n    }\n\n\n    const SetterSubastaProducto = (response) => {\n        let subastaProducto = {\n            id: response.array[0],\n            producto: {\n                productos_id: response.array[1][0],\n                producto: response.array[1][1],\n                descripcion: response.array[1][2],\n                stock: response.array[1][3],\n                precio_inicial: response.array[1][4],\n                precio_aumento: response.array[1][5],\n                precio_subasta: response.array[1][6],\n                cliente: {\n                    cliente_id: response.array[1][7][0],\n                    cliente: response.array[1][7][1],\n                    cuit: response.array[1][7][2],\n                    direccion: response.array[1][7][3],\n                    ciudad: response.array[1][7][4],\n                    iva: response.array[1][7][5],\n                },\n            },\n            activo: response.array[2],\n            oferta_final: response.array[3],\n            subastas_ofertas_id_winner: response.array[4],\n            status: response.array[5],\n            orden: response.array[6],\n            inicio: response.array[7],\n        };\n\n        return subastaProducto;\n    }\n\n    return (\n        <Layout>\n            <Box sx={{ paddingTop: 8 }}>\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item xs={5} align=\"left\">      \n                            <Box style={{ paddingBottom: '20px' }}>\n                                <Typography variant=\"h1\" fontSize={40}>\n                                    {subasta.subasta}\n                                </Typography> \n\n                                {productoEnSubastaActual !== undefined && productoActual !== undefined && <Typography fontSize=\"small\">\n                                    Inicio - {(productoEnSubastaActual.inicio) ? productoEnSubastaActual.inicio : subasta.fecha} / N¬∞ producto: {productoEnSubastaActual.orden} <br></br>\n                                    Subastando - {productoActual.producto} / {productoEnSubastaActual.status} / Unidades - {productoActual.stock} <br></br>  \n                                </Typography>}\n                            </Box>\n\n\n                            {startCount && <Grid container>   \n                                {winnerOferta !== undefined && winnerUser !== undefined && <Grid item xs={12} paddingY={4}>\n                                    <Alert  variant=\"outlined\" severity=\"success\">\n                                        MEJOR OFERTA POR: {winnerUser} - $ { winnerOferta }\n                                    </Alert>\n                                </Grid>}\n\n\n                                {error_message !== '' &&\n                                <Grid item xs={12} paddingBottom={4}> \n                                    <Alert severity=\"error\">{ error_message }</Alert>  \n                                </Grid>}\n\n                                <Grid item xs={8}>\n                                    <TextField \n                                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*'  }}\n                                        style={{ height:'38px' }}\n                                        id=\"valSubastaOferta\" \n                                        onChange={(e) => setValSubastaOferta(e.target.value)} \n                                        fullWidth \n                                        label=\"Ofertar\" \n                                        variant=\"outlined\" \n                                    />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={handlerCreateSubastaOferta} fullWidth variant=\"outlined\" size=\"large\" \n                                        /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n                                        style={{ padding:'14px' }}\n                                    >\n                                        Ofertar\n                                    </Button>\n                                </Grid>\n                            </Grid>}\n\n\n                            {startCount && <DataGridSubastaOfertas rows={rows} />}\n                            \n                        </Grid>\n\n                        <Grid item xs={7}>  \n                                \n                            <Box style={{ paddingBottom: '40px', paddingTop: '20px' }}>\n                                <Typography align='center'>\n                                    {fecha} \n                                </Typography>\n                                \n                                {startCount && \n                                <div style={{ display:'flex', justifyContent:'center', width:'100%' }}>\n                                    <Box padding={2} sx={{ borderRadius: 1, backgroundColor: '#e6e6e6', margin: 1 }}>\n                                        {minute} : {second} \n                                    </Box>\n                                </div>}\n\n                            </Box>\n                            {productoStep && subastaProductos && startCount && <StepperVertical steps={subastaProductos} actual={productoStep-1} />}\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </Layout>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}