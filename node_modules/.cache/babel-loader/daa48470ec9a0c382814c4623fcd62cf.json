{"ast":null,"code":"// source: proto.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.Empty', null, global);\ngoog.exportSymbol('proto.LoginRequest', null, global);\ngoog.exportSymbol('proto.LoginResponse', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.ProductoId', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaIdTime', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaOfertaCreate', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.SubastaProductoFinish', null, global);\ngoog.exportSymbol('proto.SubastaProductoId', null, global);\ngoog.exportSymbol('proto.SubastaProductos', null, global);\ngoog.exportSymbol('proto.Subastas', null, global);\ngoog.exportSymbol('proto.User', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Subasta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Subasta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProducto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProducto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProductoFinish = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProductoFinish, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductoFinish.displayName = 'proto.SubastaProductoFinish';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProductos = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.SubastaProductos.repeatedFields_, null);\n};\n\ngoog.inherits(proto.SubastaProductos, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductos.displayName = 'proto.SubastaProductos';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Subastas = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Subastas.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Subastas, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subastas.displayName = 'proto.Subastas';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProductoId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProductoId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductoId.displayName = 'proto.SubastaProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaIdTime = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaIdTime, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaIdTime.displayName = 'proto.SubastaIdTime';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaOferta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaOferta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaOfertaCreate = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaOfertaCreate, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaOfertaCreate.displayName = 'proto.SubastaOfertaCreate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Empty = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Empty, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Empty.displayName = 'proto.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Cliente = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Cliente, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ClienteId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ClienteId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Producto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Producto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Producto.displayName = 'proto.Producto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ProductoId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ProductoId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ProductoId.displayName = 'proto.ProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.User, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.User.displayName = 'proto.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.LoginRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.LoginRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoginRequest.displayName = 'proto.LoginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.LoginResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.LoginResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoginResponse.displayName = 'proto.LoginResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subasta.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subasta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subasta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subasta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      subasta: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      fecha: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      activo: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      duracion: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      descanso: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta();\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubasta(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFecha(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setDuracion(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setDescanso(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subasta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subasta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getSubasta();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getFecha();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getDuracion();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n\n  f = message.getDescanso();\n\n  if (f !== 0) {\n    writer.writeInt32(6, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Subasta.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string subasta = 2;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getSubasta = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setSubasta = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string fecha = 3;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getFecha = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setFecha = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional bool activo = 4;\n * @return {boolean}\n */\n\n\nproto.Subasta.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setActivo = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional int32 duracion = 5;\n * @return {number}\n */\n\n\nproto.Subasta.prototype.getDuracion = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setDuracion = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional int32 descanso = 6;\n * @return {number}\n */\n\n\nproto.Subasta.prototype.getDescanso = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setDescanso = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional string created_at = 7;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setCreatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional string updated_at = 8;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\n\n\nproto.Subasta.prototype.setUpdatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProducto.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProducto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProducto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProducto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n      activo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      ofertaFinal: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n      subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      status: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      orden: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      inicio: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto();\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = new proto.Producto();\n        reader.readMessage(value, proto.Producto.deserializeBinaryFromReader);\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaFinal(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setSubastasOfertasIdWinner(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStatus(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setOrden(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setInicio(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProducto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProducto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Producto.serializeBinaryToWriter);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getOfertaFinal();\n\n  if (f !== 0.0) {\n    writer.writeFloat(4, f);\n  }\n\n  f = message.getSubastasOfertasIdWinner();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n\n  f = message.getStatus();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getOrden();\n\n  if (f !== 0) {\n    writer.writeInt32(7, f);\n  }\n\n  f = message.getInicio();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional Producto producto = 2;\n * @return {?proto.Producto}\n */\n\n\nproto.SubastaProducto.prototype.getProducto = function () {\n  return (\n    /** @type{?proto.Producto} */\n    jspb.Message.getWrapperField(this, proto.Producto, 2)\n  );\n};\n/**\n * @param {?proto.Producto|undefined} value\n * @return {!proto.SubastaProducto} returns this\n*/\n\n\nproto.SubastaProducto.prototype.setProducto = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.clearProducto = function () {\n  return this.setProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SubastaProducto.prototype.hasProducto = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool activo = 3;\n * @return {boolean}\n */\n\n\nproto.SubastaProducto.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setActivo = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional float oferta_final = 4;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getOfertaFinal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setOfertaFinal = function (value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n/**\n * optional int32 subastas_ofertas_id_winner = 5;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string status = 6;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getStatus = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional int32 orden = 7;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getOrden = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setOrden = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional string inicio = 8;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getInicio = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaProducto} returns this\n */\n\n\nproto.SubastaProducto.prototype.setInicio = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProductoFinish.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProductoFinish.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProductoFinish} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProductoFinish.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n      activo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      ofertaFinal: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n      subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      status: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      orden: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      inicio: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n      user: jspb.Message.getFieldWithDefault(msg, 9, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductoFinish}\n */\n\n\nproto.SubastaProductoFinish.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductoFinish();\n  return proto.SubastaProductoFinish.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductoFinish} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductoFinish}\n */\n\n\nproto.SubastaProductoFinish.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = new proto.Producto();\n        reader.readMessage(value, proto.Producto.deserializeBinaryFromReader);\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaFinal(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setSubastasOfertasIdWinner(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStatus(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setOrden(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setInicio(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUser(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProductoFinish.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductoFinish.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductoFinish} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProductoFinish.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Producto.serializeBinaryToWriter);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getOfertaFinal();\n\n  if (f !== 0.0) {\n    writer.writeFloat(4, f);\n  }\n\n  f = message.getSubastasOfertasIdWinner();\n\n  if (f !== 0) {\n    writer.writeInt32(5, f);\n  }\n\n  f = message.getStatus();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getOrden();\n\n  if (f !== 0) {\n    writer.writeInt32(7, f);\n  }\n\n  f = message.getInicio();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n\n  f = message.getUser();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.SubastaProductoFinish.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional Producto producto = 2;\n * @return {?proto.Producto}\n */\n\n\nproto.SubastaProductoFinish.prototype.getProducto = function () {\n  return (\n    /** @type{?proto.Producto} */\n    jspb.Message.getWrapperField(this, proto.Producto, 2)\n  );\n};\n/**\n * @param {?proto.Producto|undefined} value\n * @return {!proto.SubastaProductoFinish} returns this\n*/\n\n\nproto.SubastaProductoFinish.prototype.setProducto = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.clearProducto = function () {\n  return this.setProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.SubastaProductoFinish.prototype.hasProducto = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bool activo = 3;\n * @return {boolean}\n */\n\n\nproto.SubastaProductoFinish.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setActivo = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional float oferta_final = 4;\n * @return {number}\n */\n\n\nproto.SubastaProductoFinish.prototype.getOfertaFinal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setOfertaFinal = function (value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n/**\n * optional int32 subastas_ofertas_id_winner = 5;\n * @return {number}\n */\n\n\nproto.SubastaProductoFinish.prototype.getSubastasOfertasIdWinner = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setSubastasOfertasIdWinner = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string status = 6;\n * @return {string}\n */\n\n\nproto.SubastaProductoFinish.prototype.getStatus = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional int32 orden = 7;\n * @return {number}\n */\n\n\nproto.SubastaProductoFinish.prototype.getOrden = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setOrden = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional string inicio = 8;\n * @return {string}\n */\n\n\nproto.SubastaProductoFinish.prototype.getInicio = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setInicio = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n/**\n * optional string user = 9;\n * @return {string}\n */\n\n\nproto.SubastaProductoFinish.prototype.getUser = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\n\n\nproto.SubastaProductoFinish.prototype.setUser = function (value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.SubastaProductos.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProductos.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProductos.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProductos} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProductos.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastasProductosList: jspb.Message.toObjectList(msg.getSubastasProductosList(), proto.SubastaProducto.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductos}\n */\n\n\nproto.SubastaProductos.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductos();\n  return proto.SubastaProductos.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductos} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductos}\n */\n\n\nproto.SubastaProductos.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.SubastaProducto();\n        reader.readMessage(value, proto.SubastaProducto.deserializeBinaryFromReader);\n        msg.addSubastasProductos(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProductos.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductos.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductos} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProductos.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastasProductosList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.SubastaProducto.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated SubastaProducto subastas_productos = 1;\n * @return {!Array<!proto.SubastaProducto>}\n */\n\n\nproto.SubastaProductos.prototype.getSubastasProductosList = function () {\n  return (\n    /** @type{!Array<!proto.SubastaProducto>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.SubastaProducto, 1)\n  );\n};\n/**\n * @param {!Array<!proto.SubastaProducto>} value\n * @return {!proto.SubastaProductos} returns this\n*/\n\n\nproto.SubastaProductos.prototype.setSubastasProductosList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.SubastaProducto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProductos.prototype.addSubastasProductos = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SubastaProducto, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.SubastaProductos} returns this\n */\n\n\nproto.SubastaProductos.prototype.clearSubastasProductosList = function () {\n  return this.setSubastasProductosList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaId.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId();\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaId} returns this\n */\n\n\nproto.SubastaId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Subastas.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subastas.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subastas.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subastas} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subastas.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastasList: jspb.Message.toObjectList(msg.getSubastasList(), proto.Subasta.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subastas}\n */\n\n\nproto.Subastas.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subastas();\n  return proto.Subastas.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subastas} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subastas}\n */\n\n\nproto.Subastas.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Subasta();\n        reader.readMessage(value, proto.Subasta.deserializeBinaryFromReader);\n        msg.addSubastas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subastas.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subastas.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subastas} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subastas.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastasList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Subasta.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Subasta subastas = 1;\n * @return {!Array<!proto.Subasta>}\n */\n\n\nproto.Subastas.prototype.getSubastasList = function () {\n  return (\n    /** @type{!Array<!proto.Subasta>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Subasta, 1)\n  );\n};\n/**\n * @param {!Array<!proto.Subasta>} value\n * @return {!proto.Subastas} returns this\n*/\n\n\nproto.Subastas.prototype.setSubastasList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Subasta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Subasta}\n */\n\n\nproto.Subastas.prototype.addSubastas = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Subasta, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Subastas} returns this\n */\n\n\nproto.Subastas.prototype.clearSubastasList = function () {\n  return this.setSubastasList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProductoId.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProductoId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProductoId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProductoId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductoId}\n */\n\n\nproto.SubastaProductoId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductoId();\n  return proto.SubastaProductoId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductoId}\n */\n\n\nproto.SubastaProductoId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProductoId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProductoId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.SubastaProductoId.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoId} returns this\n */\n\n\nproto.SubastaProductoId.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaIdTime.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaIdTime.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaIdTime} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaIdTime.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      time: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaIdTime}\n */\n\n\nproto.SubastaIdTime.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaIdTime();\n  return proto.SubastaIdTime.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaIdTime} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaIdTime}\n */\n\n\nproto.SubastaIdTime.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaIdTime.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaIdTime.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaIdTime} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaIdTime.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getTime();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.SubastaIdTime.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaIdTime} returns this\n */\n\n\nproto.SubastaIdTime.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string time = 2;\n * @return {string}\n */\n\n\nproto.SubastaIdTime.prototype.getTime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaIdTime} returns this\n */\n\n\nproto.SubastaIdTime.prototype.setTime = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaOferta.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaOferta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaOferta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaOferta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      user: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      ofertaPrecio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta();\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUser(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaPrecio(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaOferta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaOferta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUser();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getOfertaPrecio();\n\n  if (f !== 0.0) {\n    writer.writeFloat(2, f);\n  }\n};\n/**\n * optional string user = 1;\n * @return {string}\n */\n\n\nproto.SubastaOferta.prototype.getUser = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.SubastaOferta} returns this\n */\n\n\nproto.SubastaOferta.prototype.setUser = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\n\n\nproto.SubastaOferta.prototype.getOfertaPrecio = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaOferta} returns this\n */\n\n\nproto.SubastaOferta.prototype.setOfertaPrecio = function (value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaOfertaCreate.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaOfertaCreate.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaOfertaCreate} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaOfertaCreate.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      usersId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      ofertaPrecio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n      subastasProductosId: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOfertaCreate}\n */\n\n\nproto.SubastaOfertaCreate.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOfertaCreate();\n  return proto.SubastaOfertaCreate.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOfertaCreate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOfertaCreate}\n */\n\n\nproto.SubastaOfertaCreate.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setUsersId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaPrecio(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setSubastasProductosId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaOfertaCreate.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOfertaCreate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOfertaCreate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaOfertaCreate.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUsersId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getOfertaPrecio();\n\n  if (f !== 0.0) {\n    writer.writeFloat(2, f);\n  }\n\n  f = message.getSubastasProductosId();\n\n  if (f !== 0) {\n    writer.writeInt32(3, f);\n  }\n};\n/**\n * optional int32 users_id = 1;\n * @return {number}\n */\n\n\nproto.SubastaOfertaCreate.prototype.getUsersId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaOfertaCreate} returns this\n */\n\n\nproto.SubastaOfertaCreate.prototype.setUsersId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\n\n\nproto.SubastaOfertaCreate.prototype.getOfertaPrecio = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaOfertaCreate} returns this\n */\n\n\nproto.SubastaOfertaCreate.prototype.setOfertaPrecio = function (value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n/**\n * optional int32 subastas_productos_id = 3;\n * @return {number}\n */\n\n\nproto.SubastaOfertaCreate.prototype.getSubastasProductosId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.SubastaOfertaCreate} returns this\n */\n\n\nproto.SubastaOfertaCreate.prototype.setSubastasProductosId = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Empty.prototype.toObject = function (opt_includeInstance) {\n    return proto.Empty.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Empty} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Empty.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\n\n\nproto.Empty.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty();\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\n\n\nproto.Empty.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Empty.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Empty.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Cliente.prototype.toObject = function (opt_includeInstance) {\n    return proto.Cliente.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Cliente} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Cliente.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      ciudad: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      iva: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente();\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCliente(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCuit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDireccion(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCiudad(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setIva(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Cliente.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Cliente.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getCliente();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCuit();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getDireccion();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCiudad();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getIva();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Cliente.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string cliente = 2;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCliente = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setCliente = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string cuit = 3;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCuit = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setCuit = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string direccion = 4;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getDireccion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setDireccion = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string ciudad = 5;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCiudad = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setCiudad = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string iva = 6;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getIva = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\n\n\nproto.Cliente.prototype.setIva = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ClienteId.prototype.toObject = function (opt_includeInstance) {\n    return proto.ClienteId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ClienteId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ClienteId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId();\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ClienteId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ClienteId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ClienteId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ClienteId} returns this\n */\n\n\nproto.ClienteId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Producto.prototype.toObject = function (opt_includeInstance) {\n    return proto.Producto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Producto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Producto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      precioInicial: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n      precioAumento: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),\n      precioSubasta: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n      cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto();\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescripcion(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStock(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioInicial(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioAumento(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioSubasta(value);\n        break;\n\n      case 8:\n        var value = new proto.Cliente();\n        reader.readMessage(value, proto.Cliente.deserializeBinaryFromReader);\n        msg.setCliente(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Producto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Producto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescripcion();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStock();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n\n  f = message.getPrecioInicial();\n\n  if (f !== 0.0) {\n    writer.writeFloat(5, f);\n  }\n\n  f = message.getPrecioAumento();\n\n  if (f !== 0.0) {\n    writer.writeFloat(6, f);\n  }\n\n  f = message.getPrecioSubasta();\n\n  if (f !== 0.0) {\n    writer.writeFloat(7, f);\n  }\n\n  f = message.getCliente();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.Cliente.serializeBinaryToWriter);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string producto = 2;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getProducto = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setProducto = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getDescripcion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setDescripcion = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getStock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setStock = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional float precio_inicial = 5;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioInicial = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setPrecioInicial = function (value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n/**\n * optional float precio_aumento = 6;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioAumento = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setPrecioAumento = function (value) {\n  return jspb.Message.setProto3FloatField(this, 6, value);\n};\n/**\n * optional float precio_subasta = 7;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioSubasta = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.setPrecioSubasta = function (value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n/**\n * optional Cliente cliente = 8;\n * @return {?proto.Cliente}\n */\n\n\nproto.Producto.prototype.getCliente = function () {\n  return (\n    /** @type{?proto.Cliente} */\n    jspb.Message.getWrapperField(this, proto.Cliente, 8)\n  );\n};\n/**\n * @param {?proto.Cliente|undefined} value\n * @return {!proto.Producto} returns this\n*/\n\n\nproto.Producto.prototype.setCliente = function (value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.Producto} returns this\n */\n\n\nproto.Producto.prototype.clearCliente = function () {\n  return this.setCliente(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.Producto.prototype.hasCliente = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ProductoId.prototype.toObject = function (opt_includeInstance) {\n    return proto.ProductoId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ProductoId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ProductoId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ProductoId}\n */\n\n\nproto.ProductoId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ProductoId();\n  return proto.ProductoId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ProductoId}\n */\n\n\nproto.ProductoId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ProductoId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ProductoId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ProductoId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.ProductoId} returns this\n */\n\n\nproto.ProductoId.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.User.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.User.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User();\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.User.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.User.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string email = 3;\n * @return {string}\n */\n\n\nproto.User.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string password = 4;\n * @return {string}\n */\n\n\nproto.User.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setPassword = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.User.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setCreatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.User.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\n\n\nproto.User.prototype.setUpdatedAt = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.LoginRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.LoginRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.LoginRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.LoginRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoginRequest}\n */\n\n\nproto.LoginRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoginRequest();\n  return proto.LoginRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoginRequest}\n */\n\n\nproto.LoginRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.LoginRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.LoginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.LoginRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string email = 1;\n * @return {string}\n */\n\n\nproto.LoginRequest.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.LoginRequest} returns this\n */\n\n\nproto.LoginRequest.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string password = 2;\n * @return {string}\n */\n\n\nproto.LoginRequest.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.LoginRequest} returns this\n */\n\n\nproto.LoginRequest.prototype.setPassword = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.LoginResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.LoginResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.LoginResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.LoginResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      token: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      error: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoginResponse}\n */\n\n\nproto.LoginResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoginResponse();\n  return proto.LoginResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoginResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoginResponse}\n */\n\n\nproto.LoginResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setToken(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setError(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.LoginResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.LoginResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoginResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.LoginResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getToken();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getError();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string token = 1;\n * @return {string}\n */\n\n\nproto.LoginResponse.prototype.getToken = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.LoginResponse} returns this\n */\n\n\nproto.LoginResponse.prototype.setToken = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string error = 2;\n * @return {string}\n */\n\n\nproto.LoginResponse.prototype.getError = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.LoginResponse} returns this\n */\n\n\nproto.LoginResponse.prototype.setError = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/pb/proto_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Subasta","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","SubastaProducto","SubastaProductoFinish","SubastaProductos","repeatedFields_","SubastaId","Subastas","SubastaProductoId","SubastaIdTime","SubastaOferta","SubastaOfertaCreate","Empty","Cliente","ClienteId","Producto","ProductoId","User","LoginRequest","LoginResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","subasta","fecha","activo","getBooleanFieldWithDefault","duracion","descanso","createdAt","updatedAt","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setId","readString","setSubasta","setFecha","readBool","setActivo","setDuracion","setDescanso","setCreatedAt","setUpdatedAt","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","writeInt32","getSubasta","length","writeString","getFecha","getActivo","writeBool","getDuracion","getDescanso","getCreatedAt","getUpdatedAt","setProto3IntField","setProto3StringField","setProto3BooleanField","producto","getProducto","ofertaFinal","getFloatingPointFieldWithDefault","subastasOfertasIdWinner","status","orden","inicio","readMessage","setProducto","readFloat","setOfertaFinal","setSubastasOfertasIdWinner","setStatus","setOrden","setInicio","writeMessage","getOfertaFinal","writeFloat","getSubastasOfertasIdWinner","getStatus","getOrden","getInicio","getWrapperField","setWrapperField","clearProducto","hasProducto","getField","setProto3FloatField","user","setUser","getUser","subastasProductosList","toObjectList","getSubastasProductosList","addSubastasProductos","writeRepeatedMessage","getRepeatedWrapperField","setSubastasProductosList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSubastasProductosList","subastasList","getSubastasList","addSubastas","setSubastasList","clearSubastasList","time","setTime","getTime","ofertaPrecio","setOfertaPrecio","getOfertaPrecio","usersId","subastasProductosId","setUsersId","setSubastasProductosId","getUsersId","getSubastasProductosId","cliente","cuit","direccion","ciudad","iva","setCliente","setCuit","setDireccion","setCiudad","setIva","getCliente","getCuit","getDireccion","getCiudad","getIva","descripcion","stock","precioInicial","precioAumento","precioSubasta","setDescripcion","setStock","setPrecioInicial","setPrecioAumento","setPrecioSubasta","getDescripcion","getStock","getPrecioInicial","getPrecioAumento","getPrecioSubasta","clearCliente","hasCliente","name","email","password","setName","setEmail","setPassword","getName","getEmail","getPassword","token","error","setToken","setError","getToken","getError","object","extend","exports"],"mappings":"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","sourcesContent":["// source: proto.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.Empty', null, global);\ngoog.exportSymbol('proto.LoginRequest', null, global);\ngoog.exportSymbol('proto.LoginResponse', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.ProductoId', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaIdTime', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaOfertaCreate', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.SubastaProductoFinish', null, global);\ngoog.exportSymbol('proto.SubastaProductoId', null, global);\ngoog.exportSymbol('proto.SubastaProductos', null, global);\ngoog.exportSymbol('proto.Subastas', null, global);\ngoog.exportSymbol('proto.User', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subasta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Subasta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProducto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProducto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProductoFinish = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProductoFinish, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductoFinish.displayName = 'proto.SubastaProductoFinish';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProductos = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.SubastaProductos.repeatedFields_, null);\n};\ngoog.inherits(proto.SubastaProductos, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductos.displayName = 'proto.SubastaProductos';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subastas = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Subastas.repeatedFields_, null);\n};\ngoog.inherits(proto.Subastas, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Subastas.displayName = 'proto.Subastas';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProductoId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProductoId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaProductoId.displayName = 'proto.SubastaProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaIdTime = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaIdTime, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaIdTime.displayName = 'proto.SubastaIdTime';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaOferta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaOferta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaOfertaCreate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaOfertaCreate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SubastaOfertaCreate.displayName = 'proto.SubastaOfertaCreate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Empty.displayName = 'proto.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Cliente = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Cliente, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ClienteId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ClienteId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Producto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Producto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Producto.displayName = 'proto.Producto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ProductoId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ProductoId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ProductoId.displayName = 'proto.ProductoId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.User.displayName = 'proto.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.LoginRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.LoginRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoginRequest.displayName = 'proto.LoginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.LoginResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.LoginResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoginResponse.displayName = 'proto.LoginResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subasta.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subasta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subasta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    subasta: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    fecha: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    activo: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n    duracion: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    descanso: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta;\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubasta(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFecha(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setDuracion(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setDescanso(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subasta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSubasta();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getFecha();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getDuracion();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getDescanso();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Subasta.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string subasta = 2;\n * @return {string}\n */\nproto.Subasta.prototype.getSubasta = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setSubasta = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string fecha = 3;\n * @return {string}\n */\nproto.Subasta.prototype.getFecha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setFecha = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool activo = 4;\n * @return {boolean}\n */\nproto.Subasta.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setActivo = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional int32 duracion = 5;\n * @return {number}\n */\nproto.Subasta.prototype.getDuracion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setDuracion = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int32 descanso = 6;\n * @return {number}\n */\nproto.Subasta.prototype.getDescanso = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setDescanso = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional string created_at = 7;\n * @return {string}\n */\nproto.Subasta.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setCreatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string updated_at = 8;\n * @return {string}\n */\nproto.Subasta.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Subasta} returns this\n */\nproto.Subasta.prototype.setUpdatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProducto.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProducto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProducto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n    activo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    ofertaFinal: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n    subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    status: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    orden: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    inicio: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto;\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.Producto;\n      reader.readMessage(value,proto.Producto.deserializeBinaryFromReader);\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaFinal(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSubastasOfertasIdWinner(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOrden(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInicio(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProducto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Producto.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getOfertaFinal();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      4,\n      f\n    );\n  }\n  f = message.getSubastasOfertasIdWinner();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getOrden();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getInicio();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional Producto producto = 2;\n * @return {?proto.Producto}\n */\nproto.SubastaProducto.prototype.getProducto = function() {\n  return /** @type{?proto.Producto} */ (\n    jspb.Message.getWrapperField(this, proto.Producto, 2));\n};\n\n\n/**\n * @param {?proto.Producto|undefined} value\n * @return {!proto.SubastaProducto} returns this\n*/\nproto.SubastaProducto.prototype.setProducto = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.clearProducto = function() {\n  return this.setProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SubastaProducto.prototype.hasProducto = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool activo = 3;\n * @return {boolean}\n */\nproto.SubastaProducto.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setActivo = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional float oferta_final = 4;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getOfertaFinal = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setOfertaFinal = function(value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n\n\n/**\n * optional int32 subastas_ofertas_id_winner = 5;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string status = 6;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional int32 orden = 7;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getOrden = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setOrden = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional string inicio = 8;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getInicio = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaProducto} returns this\n */\nproto.SubastaProducto.prototype.setInicio = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProductoFinish.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProductoFinish.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProductoFinish} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductoFinish.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n    activo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    ofertaFinal: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n    subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    status: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    orden: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    inicio: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    user: jspb.Message.getFieldWithDefault(msg, 9, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductoFinish}\n */\nproto.SubastaProductoFinish.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductoFinish;\n  return proto.SubastaProductoFinish.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductoFinish} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductoFinish}\n */\nproto.SubastaProductoFinish.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.Producto;\n      reader.readMessage(value,proto.Producto.deserializeBinaryFromReader);\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaFinal(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSubastasOfertasIdWinner(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOrden(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInicio(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUser(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProductoFinish.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductoFinish.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductoFinish} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductoFinish.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Producto.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getOfertaFinal();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      4,\n      f\n    );\n  }\n  f = message.getSubastasOfertasIdWinner();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getOrden();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getInicio();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getUser();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.SubastaProductoFinish.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional Producto producto = 2;\n * @return {?proto.Producto}\n */\nproto.SubastaProductoFinish.prototype.getProducto = function() {\n  return /** @type{?proto.Producto} */ (\n    jspb.Message.getWrapperField(this, proto.Producto, 2));\n};\n\n\n/**\n * @param {?proto.Producto|undefined} value\n * @return {!proto.SubastaProductoFinish} returns this\n*/\nproto.SubastaProductoFinish.prototype.setProducto = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.clearProducto = function() {\n  return this.setProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.SubastaProductoFinish.prototype.hasProducto = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool activo = 3;\n * @return {boolean}\n */\nproto.SubastaProductoFinish.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setActivo = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional float oferta_final = 4;\n * @return {number}\n */\nproto.SubastaProductoFinish.prototype.getOfertaFinal = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setOfertaFinal = function(value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n\n\n/**\n * optional int32 subastas_ofertas_id_winner = 5;\n * @return {number}\n */\nproto.SubastaProductoFinish.prototype.getSubastasOfertasIdWinner = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setSubastasOfertasIdWinner = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string status = 6;\n * @return {string}\n */\nproto.SubastaProductoFinish.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional int32 orden = 7;\n * @return {number}\n */\nproto.SubastaProductoFinish.prototype.getOrden = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setOrden = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional string inicio = 8;\n * @return {string}\n */\nproto.SubastaProductoFinish.prototype.getInicio = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setInicio = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n/**\n * optional string user = 9;\n * @return {string}\n */\nproto.SubastaProductoFinish.prototype.getUser = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaProductoFinish} returns this\n */\nproto.SubastaProductoFinish.prototype.setUser = function(value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.SubastaProductos.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProductos.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProductos.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProductos} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductos.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastasProductosList: jspb.Message.toObjectList(msg.getSubastasProductosList(),\n    proto.SubastaProducto.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductos}\n */\nproto.SubastaProductos.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductos;\n  return proto.SubastaProductos.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductos} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductos}\n */\nproto.SubastaProductos.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.SubastaProducto;\n      reader.readMessage(value,proto.SubastaProducto.deserializeBinaryFromReader);\n      msg.addSubastasProductos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProductos.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductos.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductos} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductos.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastasProductosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.SubastaProducto.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SubastaProducto subastas_productos = 1;\n * @return {!Array<!proto.SubastaProducto>}\n */\nproto.SubastaProductos.prototype.getSubastasProductosList = function() {\n  return /** @type{!Array<!proto.SubastaProducto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.SubastaProducto, 1));\n};\n\n\n/**\n * @param {!Array<!proto.SubastaProducto>} value\n * @return {!proto.SubastaProductos} returns this\n*/\nproto.SubastaProductos.prototype.setSubastasProductosList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.SubastaProducto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProductos.prototype.addSubastasProductos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SubastaProducto, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.SubastaProductos} returns this\n */\nproto.SubastaProductos.prototype.clearSubastasProductosList = function() {\n  return this.setSubastasProductosList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaId.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId;\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaId} returns this\n */\nproto.SubastaId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Subastas.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subastas.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subastas.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subastas} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subastas.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastasList: jspb.Message.toObjectList(msg.getSubastasList(),\n    proto.Subasta.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subastas}\n */\nproto.Subastas.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subastas;\n  return proto.Subastas.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subastas} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subastas}\n */\nproto.Subastas.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Subasta;\n      reader.readMessage(value,proto.Subasta.deserializeBinaryFromReader);\n      msg.addSubastas(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subastas.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subastas.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subastas} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subastas.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastasList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Subasta.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Subasta subastas = 1;\n * @return {!Array<!proto.Subasta>}\n */\nproto.Subastas.prototype.getSubastasList = function() {\n  return /** @type{!Array<!proto.Subasta>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Subasta, 1));\n};\n\n\n/**\n * @param {!Array<!proto.Subasta>} value\n * @return {!proto.Subastas} returns this\n*/\nproto.Subastas.prototype.setSubastasList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Subasta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Subasta}\n */\nproto.Subastas.prototype.addSubastas = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Subasta, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.Subastas} returns this\n */\nproto.Subastas.prototype.clearSubastasList = function() {\n  return this.setSubastasList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProductoId.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProductoId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProductoId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductoId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProductoId}\n */\nproto.SubastaProductoId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProductoId;\n  return proto.SubastaProductoId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProductoId}\n */\nproto.SubastaProductoId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProductoId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProductoId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.SubastaProductoId.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaProductoId} returns this\n */\nproto.SubastaProductoId.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaIdTime.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaIdTime.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaIdTime} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaIdTime.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    time: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaIdTime}\n */\nproto.SubastaIdTime.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaIdTime;\n  return proto.SubastaIdTime.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaIdTime} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaIdTime}\n */\nproto.SubastaIdTime.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaIdTime.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaIdTime.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaIdTime} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaIdTime.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.SubastaIdTime.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaIdTime} returns this\n */\nproto.SubastaIdTime.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string time = 2;\n * @return {string}\n */\nproto.SubastaIdTime.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaIdTime} returns this\n */\nproto.SubastaIdTime.prototype.setTime = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaOferta.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaOferta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaOferta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    user: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    ofertaPrecio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta;\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUser(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaPrecio(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaOferta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUser();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOfertaPrecio();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string user = 1;\n * @return {string}\n */\nproto.SubastaOferta.prototype.getUser = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.SubastaOferta} returns this\n */\nproto.SubastaOferta.prototype.setUser = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\nproto.SubastaOferta.prototype.getOfertaPrecio = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaOferta} returns this\n */\nproto.SubastaOferta.prototype.setOfertaPrecio = function(value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaOfertaCreate.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaOfertaCreate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaOfertaCreate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOfertaCreate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    usersId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    ofertaPrecio: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n    subastasProductosId: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOfertaCreate}\n */\nproto.SubastaOfertaCreate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOfertaCreate;\n  return proto.SubastaOfertaCreate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOfertaCreate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOfertaCreate}\n */\nproto.SubastaOfertaCreate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUsersId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaPrecio(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSubastasProductosId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaOfertaCreate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOfertaCreate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOfertaCreate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOfertaCreate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsersId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getOfertaPrecio();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = message.getSubastasProductosId();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 users_id = 1;\n * @return {number}\n */\nproto.SubastaOfertaCreate.prototype.getUsersId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaOfertaCreate} returns this\n */\nproto.SubastaOfertaCreate.prototype.setUsersId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\nproto.SubastaOfertaCreate.prototype.getOfertaPrecio = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaOfertaCreate} returns this\n */\nproto.SubastaOfertaCreate.prototype.setOfertaPrecio = function(value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n/**\n * optional int32 subastas_productos_id = 3;\n * @return {number}\n */\nproto.SubastaOfertaCreate.prototype.getSubastasProductosId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SubastaOfertaCreate} returns this\n */\nproto.SubastaOfertaCreate.prototype.setSubastasProductosId = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty;\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Cliente.prototype.toObject = function(opt_includeInstance) {\n  return proto.Cliente.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Cliente} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    ciudad: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    iva: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente;\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCliente(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCuit(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDireccion(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCiudad(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIva(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Cliente.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCuit();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDireccion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCiudad();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getIva();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Cliente.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string cliente = 2;\n * @return {string}\n */\nproto.Cliente.prototype.getCliente = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setCliente = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string cuit = 3;\n * @return {string}\n */\nproto.Cliente.prototype.getCuit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setCuit = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string direccion = 4;\n * @return {string}\n */\nproto.Cliente.prototype.getDireccion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setDireccion = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string ciudad = 5;\n * @return {string}\n */\nproto.Cliente.prototype.getCiudad = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setCiudad = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string iva = 6;\n * @return {string}\n */\nproto.Cliente.prototype.getIva = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Cliente} returns this\n */\nproto.Cliente.prototype.setIva = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ClienteId.prototype.toObject = function(opt_includeInstance) {\n  return proto.ClienteId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ClienteId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId;\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ClienteId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ClienteId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ClienteId} returns this\n */\nproto.ClienteId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Producto.prototype.toObject = function(opt_includeInstance) {\n  return proto.Producto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Producto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    precioInicial: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n    precioAumento: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),\n    precioSubasta: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n    cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto;\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescripcion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStock(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioInicial(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioAumento(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioSubasta(value);\n      break;\n    case 8:\n      var value = new proto.Cliente;\n      reader.readMessage(value,proto.Cliente.deserializeBinaryFromReader);\n      msg.setCliente(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Producto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescripcion();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStock();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getPrecioInicial();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      5,\n      f\n    );\n  }\n  f = message.getPrecioAumento();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      6,\n      f\n    );\n  }\n  f = message.getPrecioSubasta();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.Cliente.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Producto.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string producto = 2;\n * @return {string}\n */\nproto.Producto.prototype.getProducto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setProducto = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\nproto.Producto.prototype.getDescripcion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setDescripcion = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\nproto.Producto.prototype.getStock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setStock = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional float precio_inicial = 5;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioInicial = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setPrecioInicial = function(value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n\n\n/**\n * optional float precio_aumento = 6;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioAumento = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setPrecioAumento = function(value) {\n  return jspb.Message.setProto3FloatField(this, 6, value);\n};\n\n\n/**\n * optional float precio_subasta = 7;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioSubasta = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.setPrecioSubasta = function(value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional Cliente cliente = 8;\n * @return {?proto.Cliente}\n */\nproto.Producto.prototype.getCliente = function() {\n  return /** @type{?proto.Cliente} */ (\n    jspb.Message.getWrapperField(this, proto.Cliente, 8));\n};\n\n\n/**\n * @param {?proto.Cliente|undefined} value\n * @return {!proto.Producto} returns this\n*/\nproto.Producto.prototype.setCliente = function(value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.Producto} returns this\n */\nproto.Producto.prototype.clearCliente = function() {\n  return this.setCliente(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.Producto.prototype.hasCliente = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ProductoId.prototype.toObject = function(opt_includeInstance) {\n  return proto.ProductoId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ProductoId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ProductoId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ProductoId}\n */\nproto.ProductoId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ProductoId;\n  return proto.ProductoId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ProductoId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ProductoId}\n */\nproto.ProductoId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ProductoId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ProductoId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ProductoId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ProductoId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ProductoId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ProductoId} returns this\n */\nproto.ProductoId.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\nproto.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User;\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\nproto.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.User.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.User.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string email = 3;\n * @return {string}\n */\nproto.User.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.User.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.User.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setCreatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.User.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.User} returns this\n */\nproto.User.prototype.setUpdatedAt = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.LoginRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.LoginRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.LoginRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoginRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoginRequest}\n */\nproto.LoginRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoginRequest;\n  return proto.LoginRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoginRequest}\n */\nproto.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.LoginRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.LoginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoginRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.LoginRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoginRequest} returns this\n */\nproto.LoginRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.LoginRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoginRequest} returns this\n */\nproto.LoginRequest.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.LoginResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.LoginResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.LoginResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoginResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    token: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    error: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoginResponse}\n */\nproto.LoginResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoginResponse;\n  return proto.LoginResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoginResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoginResponse}\n */\nproto.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.LoginResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.LoginResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoginResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoginResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string token = 1;\n * @return {string}\n */\nproto.LoginResponse.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoginResponse} returns this\n */\nproto.LoginResponse.prototype.setToken = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.LoginResponse.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoginResponse} returns this\n */\nproto.LoginResponse.prototype.setError = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}