{"ast":null,"code":"import _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Card, CardContent, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport { DataGrid } from '@mui/x-data-grid';\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoActual = _useState6[0],\n      setProductoActual = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rows = _useState8[0],\n      setRows = _useState8[1];\n\n  var _useState9 = useState([{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }]),\n      _useState10 = _slicedToArray(_useState9, 1),\n      columns = _useState10[0];\n\n  useEffect(function () {\n    getSubasta();\n    getSubastaProductos();\n    console.log(subastaProductos);\n  }, []);\n  useEffect(function () {\n    getSubastaOfertas();\n  }, []);\n\n  function DataTableSubastaOfertas() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n      }\n    });\n  }\n\n  function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            }\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n      }\n    });\n  }\n\n  function getSubastaOfertas() {}\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, subasta.subasta), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Productos en subasta (\", subastaProductos.length, \")\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Ofertar\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StepperListSubastaProductos, {\n    subastaProductos: subastaProductos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nfunction StepperListSubastaProductos(_ref) {\n  var _this = this;\n\n  var subastaProductos = _ref.subastaProductos;\n  var listProductos = subastaProductos && subastaProductos.map(function (subastaproducto, i) {\n    console.log(subastaproducto.id);\n    return /*#__PURE__*/React.createElement(SubastaProductosCard, Object.assign({}, subastaproducto, {\n      key: subastaproducto.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 16\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listProductos);\n}\n\nfunction SubastaProductosCard(_ref2) {\n  var producto = _ref2.producto;\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      fontSize: 14\n    },\n    color: \"text.secondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, producto.producto), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, producto.producto.stock)));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useParams","Box","Card","CardContent","Container","Grid","TextField","Typography","proto","DataGrid","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoActual","setProductoActual","rows","setRows","field","headerName","width","columns","getSubasta","getSubastaProductos","console","log","getSubastaOfertas","DataTableSubastaOfertas","height","request","SubastaId","setId","metadata","err","response","code","message","getId","fecha","getFecha","activo","getActivo","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","paddingTop","length","StepperListSubastaProductos","listProductos","subastaproducto","i","SubastaProductosCard","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Box, Card, CardContent, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport { DataGrid } from '@mui/x-data-grid';\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n    const [subasta, setSubasta] = useState({});\n    const [subastaProductos, setSubastaProductos] = useState([]);\n    const [productoActual, setProductoActual] = useState();\n    const [rows, setRows] = useState([]);\n    const [columns] = useState([{ \n        field: 'id', headerName: 'ID', width: 70 },\n        { field: 'firstName', headerName: 'First name', width: 130 },\n        { field: 'lastName', headerName: 'Last name', width: 130 },\n    ]);\n\n    useEffect(()=>{\n        getSubasta();\n        getSubastaProductos();\n        console.log(subastaProductos);\n    }, [])\n\n\n    useEffect(() => {\n        getSubastaOfertas();\n    }, [])\n\n    function DataTableSubastaOfertas(){\n        return (\n            <div style={{ height: 400, width: '100%' }}>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                pageSize={5}\n                rowsPerPageOptions={[5]}\n                checkboxSelection\n            />\n            </div>\n        )\n    }\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n          if (err) {\n            console.log(err.code, err.message);\n          } else {\n            let subasta = {\n                id: response.getId(),\n                subasta: response.getSubasta(),\n                fecha: response.getFecha(),\n                activo: response.getActivo(),\n                created_at: response.getCreatedAt(),\n                updated_at: response.getUpdatedAt()\n            }\n            setSubasta(subasta);\n          }\n        });\n    }\n\n    function getSubastaProductos(){\n        var request = new proto.SubastaId()\n        request.setId(id)\n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                }\n                            }\n                        }\n                    })\n\n                setSubastaProductos(subastaProductosList);\n            }\n        });\n    }\n\n    function getSubastaOfertas(){\n\n    }\n\n    return (\n        <>\n            <Box sx={{ paddingTop: 4 }}>\n                <Container>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6} align=\"left\">      \n                            <Typography variant=\"h1\" fontSize={40}>\n                                {subasta.subasta}\n                            </Typography>        \n                            <Typography variant=\"h5\">\n                                Productos en subasta ({ subastaProductos.length})    \n                            </Typography>    \n\n                            <TextField id=\"outlined-basic\" label=\"Ofertar\" variant=\"outlined\" />\n                        </Grid>\n\n                        <Grid item xs={6}>  \n                            <StepperListSubastaProductos subastaProductos={subastaProductos}/>\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </>\n    )\n}\n\n\nfunction StepperListSubastaProductos ({subastaProductos}){\n    const listProductos = subastaProductos && subastaProductos.map((subastaproducto, i) => {\n        console.log(subastaproducto.id)\n        return <SubastaProductosCard {...subastaproducto}  key={subastaproducto.id}/>\n    })\n\n    return (\n        <>   \n            { listProductos }\n        </>\n    )\n\n}\n\n\nfunction SubastaProductosCard({producto}){\n    return (\n        <Card>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    { producto.producto }\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    { producto.producto.stock }\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}