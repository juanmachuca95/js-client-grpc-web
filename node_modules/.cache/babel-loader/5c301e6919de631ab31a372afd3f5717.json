{"ast":null,"code":"import _toConsumableArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n/** My Client gRPC - to Golang gRPC Server */\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n  /** Info Subasta */\n\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n  /** Lista de productos en subasta */\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n  /** Producto actual en Subasta */\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoEnSubastaActual = _useState6[0],\n      setProductoEnSubastaActual = _useState6[1];\n  /** Producto subasta */\n\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      subastaProductoActual = _useState8[0],\n      setSubastaProductoActual = _useState8[1];\n  /** Error form add oferta */\n\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error_message = _useState10[0],\n      setErrorMessage = _useState10[1];\n\n  var classes = useStyles();\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rows = _useState12[0],\n      setRows = _useState12[1];\n\n  var _useState13 = useState(undefined),\n      _useState14 = _slicedToArray(_useState13, 2),\n      valSubastaOferta = _useState14[0],\n      setValSubastaOferta = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token;\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      fecha = _useState18[0],\n      setFecha = _useState18[1];\n\n  var _useState19 = useState(\"00\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      second = _useState20[0],\n      setSecond = _useState20[1];\n\n  var _useState21 = useState(\"00\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      minute = _useState22[0],\n      setMinute = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      startCount = _useState24[0],\n      setStartCount = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      subastaFinalizada = _useState26[0],\n      setSubastaFinalizada = _useState26[1];\n\n  var useStyles = makeStyles({\n    bold: {\n      fontWeight: 600\n    }\n  });\n  useEffect(function () {\n    /** The Subasta */\n    getSubasta();\n    /** Products from subasta */\n\n    getSubastaProductos();\n    /** Ofertas */\n\n    getSubastaOfertas();\n    /** Set Data for User */\n\n    getUser();\n  }, []);\n  useEffect(function () {\n    if (subasta.fecha && subasta.duracion) {\n      var interval = setInterval(function () {\n        var fecha = new Date(subasta.fecha);\n        var actual = new Date();\n\n        if (actual < fecha) {\n          fecha = \"ComenzarÃ¡ el \" + fecha.toLocaleDateString(\"es\", {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          }) + \" a las \" + fecha.getHours() + \":\" + fecha.getSeconds() + \".\";\n          setFecha(fecha);\n          setStartCount(false);\n          return;\n        }\n\n        if (actual.getTime() == fecha.getTime()) {\n          fecha = \"La subasta ha comenzado\";\n          setFecha(fecha);\n          setStartCount(true);\n          return;\n        }\n\n        if (actual > fecha && !subastaFinalizada) {\n          fecha = \"La subasta ha comenzado a las \" + fecha.getHours() + \":\" + fecha.getMinutes();\n          setFecha(fecha);\n          setStartCount(true);\n          return;\n        }\n      }, 1000);\n    }\n  }, [subasta.fecha, subasta.duracion]); // Se ejecuta cuando la variable fecha esta lista\n\n  useEffect(function () {\n    if (startCount) {\n      console.log(\"Comenzar la cuenta regresiva\");\n      var duration = moment.duration({\n        'minutes': subasta.duracion,\n        'seconds': 0\n      });\n      var eventDay = moment(subasta.fecha);\n      eventDay.add(subasta.duracion, 'minutes');\n      var timestamp = new Date(eventDay);\n      var interval = 1;\n      var timer = setInterval(function () {\n        timestamp = new Date(timestamp.getTime() + interval * 1000);\n        duration = moment.duration(duration.asSeconds() - interval, 'seconds');\n        var min = duration.minutes();\n        var sec = duration.seconds();\n        sec -= 1;\n        if (min < 0) return clearInterval(timer);\n        if (min < 10 && min.length != 2) min = '0' + min;\n\n        if (sec < 0 && min != 0) {\n          min -= 1;\n          sec = 59;\n        } else if (sec < 10 && sec.length != 2) sec = '0' + sec;\n\n        setSecond(sec);\n        setMinute(min);\n\n        if (min == 0 && sec == 0) {\n          clearInterval(timer);\n          setStartCount(false);\n        }\n      }, 1000);\n    }\n  }, [startCount]);\n\n  var getUser = function getUser() {\n    console.log(\"token. . . .\", token);\n    var token_decoded = jwt_decode(token);\n    var user = {\n      users_id: token_decoded.users_id,\n      name: token_decoded.name,\n      photo: token_decoded.profile_photo_path\n    };\n    setUser(user);\n  };\n\n  var getSubastaOfertas = function getSubastaOfertas() {\n    console.log(\"Obteniendo subastas ofertas -- from server golang\");\n    var request = new proto.SubastaProductoId();\n    request.setId(productoEnSubastaActual.id);\n    var stream = subastaService.getSubastaOfertas(request, {});\n    stream.on('data', function (response) {\n      var record = {\n        user: response.getUser(),\n        oferta: response.getOfertaPrecio()\n      };\n\n      if (record.oferta > winnerOferta) {\n        setWinnerOferta(record.oferta);\n      }\n\n      setRows(function (rows) {\n        return [].concat(_toConsumableArray(rows), [record]);\n      });\n    });\n  };\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          duracion: response.getDuracion(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n      }\n    });\n  }\n\n  var getSubastaProductos = function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            },\n            activo: subastaProducto.array[2],\n            oferta_final: subastaProducto.array[3],\n            subastas_ofertas_id_winner: subastaProducto.array[4],\n            status: subastaProducto.array[5]\n          };\n        });\n        console.log(subastaProductosList);\n        setSubastaProductos(subastaProductosList); //setProductoEnSubastaActual(subastaProductosList[0].producto) // producto en subasta\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (subastaProductos) {\n      var findNextProducto = false;\n      subastaProductos.forEach(function (element) {\n        if (element.status === \"en espera\" && !findNextProducto) {\n          setSubastaProductoActual(element);\n          setProductoEnSubastaActual(element.producto);\n          findNextProducto = true;\n        }\n      });\n    }\n  }, [subastaProductos]);\n\n  var handlerCreateSubastaOferta = function handlerCreateSubastaOferta(e) {\n    e.preventDefault();\n\n    if (!(valSubastaOferta !== \"\" && valSubastaOferta > productoEnSubastaActual.precio_inicial)) {\n      setErrorMessage('El valor de oferta de ser superior o igual al precio inicial.');\n      return;\n    }\n\n    var ofertaGanadora = 0;\n\n    if (winnerOferta === 0) {\n      ofertaGanadora = productoEnSubastaActual.precio_inicial;\n    } else {\n      ofertaGanadora = winnerOferta;\n    }\n\n    ;\n    console.log(winnerOferta, productoEnSubastaActual.precio_inicial, ofertaGanadora + productoEnSubastaActual.precio_aumento);\n\n    if (!(valSubastaOferta >= ofertaGanadora + productoEnSubastaActual.precio_aumento)) {\n      setErrorMessage('El valor de oferta de ser superior o igual al precio ganador + el precio de aumento del producto.');\n      return;\n    }\n\n    var subastaOfertaCreate = new proto.SubastaOfertaCreate();\n    subastaOfertaCreate.setUsersId(user.users_id);\n    subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n    subastaOfertaCreate.setSubastasProductosId(1);\n    subastaService.addSubastaOferta(subastaOfertaCreate, {}, function (error, _) {\n      if (error !== null) console.log(error.code, error.message);\n    });\n    setValSubastaOferta(undefined);\n    document.getElementById('valSubastaOferta').value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    className: classes.bold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  }, subasta.subasta), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }, \"Subastando - \", productoEnSubastaActual.producto, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 84\n    }\n  }), \"Unidades - \", productoEnSubastaActual.stock, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 80\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, winnerOferta > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"outlined\",\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, \"Oferta ganadora: \", winnerOferta)), error_message !== '' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    paddingBottom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }, error_message)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputProps: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*'\n    },\n    style: {\n      height: '38px'\n    },\n    id: \"valSubastaOferta\",\n    onChange: function onChange(e) {\n      return setValSubastaOferta(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Ofertar\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlerCreateSubastaOferta,\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"large\"\n    /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n    ,\n    style: {\n      padding: '14px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 37\n    }\n  }, \"Ofertar\"))), /*#__PURE__*/React.createElement(DataGridSubastaOfertas, {\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      paddingBottom: '40px',\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 33\n    }\n  }, fecha), startCount && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    sx: {\n      borderRadius: 1,\n      backgroundColor: '#e6e6e6',\n      margin: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 37\n    }\n  }, minute), /*#__PURE__*/React.createElement(Box, {\n    padding: 2,\n    sx: {\n      borderRadius: 1,\n      backgroundColor: '#e6e6e6',\n      margin: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 37\n    }\n  }, second))), /*#__PURE__*/React.createElement(StepperVertical, {\n    steps: subastaProductos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useParams","Alert","Box","Button","Container","Grid","TextField","Typography","proto","makeStyles","DataGridSubastaOfertas","Layout","useToken","jwt_decode","StepperVertical","moment","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoEnSubastaActual","setProductoEnSubastaActual","subastaProductoActual","setSubastaProductoActual","error_message","setErrorMessage","classes","useStyles","rows","setRows","undefined","valSubastaOferta","setValSubastaOferta","user","setUser","token","fecha","setFecha","second","setSecond","minute","setMinute","startCount","setStartCount","subastaFinalizada","setSubastaFinalizada","bold","fontWeight","getSubasta","getSubastaProductos","getSubastaOfertas","getUser","duracion","interval","setInterval","Date","actual","toLocaleDateString","weekday","year","month","day","getHours","getSeconds","getTime","getMinutes","console","log","duration","eventDay","add","timestamp","timer","asSeconds","min","minutes","sec","seconds","clearInterval","length","token_decoded","users_id","name","photo","profile_photo_path","request","SubastaProductoId","setId","stream","on","response","record","oferta","getOfertaPrecio","winnerOferta","setWinnerOferta","SubastaId","metadata","err","code","message","getId","getFecha","activo","getActivo","getDuracion","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","oferta_final","subastas_ofertas_id_winner","status","findNextProducto","forEach","element","handlerCreateSubastaOferta","e","preventDefault","ofertaGanadora","subastaOfertaCreate","SubastaOfertaCreate","setUsersId","setOfertaPrecio","setSubastasProductosId","addSubastaOferta","error","_","document","getElementById","value","paddingTop","paddingBottom","inputMode","pattern","height","target","padding","display","justifyContent","width","borderRadius","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Alert, Box, Button, Container, Grid, TextField, Typography } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DataGridSubastaOfertas from '../components/DataGridTable';\nimport Layout from '../components/Layout/Layout';\nimport useToken from '../App/useToken';\nimport jwt_decode from 'jwt-decode';\nimport StepperVertical from '../components/StepperVertical';\nimport moment from 'moment';\n\n\n/** My Client gRPC - to Golang gRPC Server */\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n\n    /** Info Subasta */\n    const [subasta, setSubasta] = useState({});\n\n    /** Lista de productos en subasta */\n    const [subastaProductos, setSubastaProductos] = useState([]);\n\n    /** Producto actual en Subasta */\n    const [productoEnSubastaActual, setProductoEnSubastaActual] = useState(0);\n\n    /** Producto subasta */\n    const [subastaProductoActual, setSubastaProductoActual] = useState(0);\n    \n    /** Error form add oferta */\n    const [error_message, setErrorMessage] = useState('')\n    const classes = useStyles();\n    const [rows, setRows] = useState([]);\n    const [valSubastaOferta, setValSubastaOferta] = useState(undefined);\n    const [user, setUser] = useState({});\n    const { token } = useToken();\n    const [fecha, setFecha] = useState(\"\");\n    const [second, setSecond] = useState(\"00\");\n    const [minute, setMinute] = useState(\"00\");\n    const [startCount, setStartCount] = useState(false);\n    const [subastaFinalizada, setSubastaFinalizada] = useState(false);\n    const useStyles = makeStyles({bold: {fontWeight: 600}})\n\n    useEffect(() => {\n        /** The Subasta */\n        getSubasta();\n\n        /** Products from subasta */\n        getSubastaProductos();\n\n        /** Ofertas */\n        getSubastaOfertas();\n\n        /** Set Data for User */\n        getUser();\n    }, [])\n\n\n    useEffect(() => {\n        if(subasta.fecha && subasta.duracion){\n            let interval = setInterval(()=>{\n                let fecha = new Date(subasta.fecha)\n                let actual = new Date();\n                if(actual < fecha){\n                    fecha = \"ComenzarÃ¡ el \"+ fecha.toLocaleDateString(\"es\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) + \" a las \"+ fecha.getHours()+\":\"+fecha.getSeconds()+\".\";\n                    setFecha(fecha);\n\n                    setStartCount(false);\n                    return ;\n                }\n\n                if(actual.getTime() == fecha.getTime()){\n                    fecha = \"La subasta ha comenzado\";\n                    setFecha(fecha)\n\n                    setStartCount(true);\n                    return ;\n                }\n\n                if(actual > fecha && !subastaFinalizada){\n                    fecha = \"La subasta ha comenzado a las \"+ fecha.getHours()+\":\"+fecha.getMinutes();\n                    setFecha(fecha)\n\n                    setStartCount(true);\n                    return ;\n                }\n            }, 1000)\n        }\n    }, [subasta.fecha, subasta.duracion]) // Se ejecuta cuando la variable fecha esta lista\n\n\n    useEffect(() => {\n         if(startCount){\n            console.log(\"Comenzar la cuenta regresiva\");\n\n            var duration = moment.duration({\n                'minutes': subasta.duracion,\n                'seconds': 0  \n            });\n            \n            let eventDay = moment(subasta.fecha);\n            eventDay.add(subasta.duracion, 'minutes');\n\n            var timestamp = new Date(eventDay);\n            var interval = 1;\n            var timer = setInterval(function() {\n                timestamp = new Date(timestamp.getTime() + interval * 1000);\n                duration = moment.duration(duration.asSeconds() - interval, 'seconds');\n                var min = duration.minutes();\n                var sec = duration.seconds();\n\n                sec -= 1;\n                if (min < 0) return clearInterval(timer);\n                if (min < 10 && min.length != 2) min = '0' + min;\n                if (sec < 0 && min != 0) {\n                    min -= 1;\n                    sec = 59;\n                } else if (sec < 10 && sec.length != 2) sec = '0' + sec;\n                setSecond(sec);\n                setMinute(min);\n                if (min == 0 && sec == 0){\n                    clearInterval(timer);\n                    setStartCount(false);\n                }\n\n            }, 1000);\n        }\n\n    }, [startCount])\n\n    const getUser = () => {\n        console.log(\"token. . . .\", token)\n        var token_decoded = jwt_decode(token);\n        let user = {\n            users_id: token_decoded.users_id,\n            name: token_decoded.name,\n            photo: token_decoded.profile_photo_path,\n        }\n        setUser(user);\n    }\n\n    const getSubastaOfertas = () => {\n        console.log(\"Obteniendo subastas ofertas -- from server golang\")\n    \n        let request = new proto.SubastaProductoId();\n        request.setId(productoEnSubastaActual.id)\n        var stream = subastaService.getSubastaOfertas(request, {});\n\n        stream.on('data', function(response){\n            let record = {\n                user: response.getUser(),\n                oferta: response.getOfertaPrecio()\n            };   \n\n            if(record.oferta > winnerOferta){\n                setWinnerOferta(record.oferta)\n            }\n\n            setRows((rows) => [...rows, record])\n        })\n\n    };\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n            if (err) {\n                console.log(err.code, err.message);\n            } else {\n                let subasta = {\n                    id: response.getId(),\n                    subasta: response.getSubasta(),\n                    fecha: response.getFecha(),\n                    activo: response.getActivo(),\n                    duracion: response.getDuracion(),\n                    created_at: response.getCreatedAt(),\n                    updated_at: response.getUpdatedAt()\n                }\n                setSubasta(subasta);\n            }\n        });\n    }\n\n    const getSubastaProductos = () => {\n        var request = new proto.SubastaId()\n        request.setId(id)\n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                },\n                            },\n                            activo: subastaProducto.array[2],\n                            oferta_final: subastaProducto.array[3],\n                            subastas_ofertas_id_winner: subastaProducto.array[4],\n                            status: subastaProducto.array[5]\n                        }\n                    })\n\n                    console.log(subastaProductosList)\n\n                setSubastaProductos(subastaProductosList);\n                //setProductoEnSubastaActual(subastaProductosList[0].producto) // producto en subasta\n            }\n        });\n    }\n\n\n    useEffect(()=>{\n        if(subastaProductos){\n            let findNextProducto = false;\n            subastaProductos.forEach(element => {\n                if(element.status === \"en espera\" && !findNextProducto){\n                    setSubastaProductoActual(element)\n                    setProductoEnSubastaActual(element.producto)\n                    findNextProducto = true;\n                }\n            });\n        }\n    }, [subastaProductos])\n\n\n    const handlerCreateSubastaOferta = (e) => {\n        e.preventDefault();\n\n        if(!(valSubastaOferta !== \"\" && valSubastaOferta > productoEnSubastaActual.precio_inicial)) {\n            setErrorMessage('El valor de oferta de ser superior o igual al precio inicial.');\n            return ;\n        }\n\n        var ofertaGanadora = 0;\n        if(winnerOferta === 0) {\n            ofertaGanadora = productoEnSubastaActual.precio_inicial} \n        else {\n            ofertaGanadora = winnerOferta;\n        };\n        console.log(winnerOferta, productoEnSubastaActual.precio_inicial, ofertaGanadora+productoEnSubastaActual.precio_aumento)\n        if(!(valSubastaOferta >= (ofertaGanadora+productoEnSubastaActual.precio_aumento))){\n            setErrorMessage('El valor de oferta de ser superior o igual al precio ganador + el precio de aumento del producto.');\n            return ;\n        } \n\n        let subastaOfertaCreate = new proto.SubastaOfertaCreate();\n        subastaOfertaCreate.setUsersId(user.users_id);\n        subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n        subastaOfertaCreate.setSubastasProductosId(1);\n\n        subastaService.addSubastaOferta(subastaOfertaCreate, {}, (error, _) => {\n            if(error !== null) console.log(error.code, error.message);\n        });\n\n        setValSubastaOferta(undefined)\n        document.getElementById('valSubastaOferta').value = '';\n    }\n\n    return (\n        <Layout>\n            <Box sx={{ paddingTop: 8 }}>\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item xs={5} align=\"left\">      \n                            <Box style={{ paddingBottom: '20px' }}>\n                                <Typography variant=\"h1\" fontSize={40} className={classes.bold}>\n                                    {subasta.subasta}\n                                </Typography>        \n                                <Typography>\n                                    Subastando - {productoEnSubastaActual.producto}<br></br>  \n                                    Unidades - {productoEnSubastaActual.stock} <br></br>\n                                </Typography>    \n                            </Box>\n\n                            <Grid container>   \n                                {winnerOferta > 0 &&\n                                <Grid item xs={12} paddingY={4}>\n                                    <Alert  variant=\"outlined\" severity=\"success\">\n                                        Oferta ganadora: { winnerOferta }\n                                    </Alert>\n                                </Grid>\n                                }\n\n\n                                {error_message !== '' &&\n                                <Grid item xs={12} paddingBottom={4}> \n                                    <Alert severity=\"error\">{ error_message }</Alert>  \n                                </Grid>}\n\n                                <Grid item xs={8}>\n                                    <TextField \n                                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*'  }}\n                                        style={{ height:'38px' }}\n                                        id=\"valSubastaOferta\" \n                                        onChange={(e) => setValSubastaOferta(e.target.value)} \n                                        fullWidth \n                                        label=\"Ofertar\" \n                                        variant=\"outlined\" \n                                    />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={handlerCreateSubastaOferta} fullWidth variant=\"outlined\" size=\"large\" \n                                        /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n                                        style={{ padding:'14px' }}\n                                    >\n                                        Ofertar\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                            {/* <DataTableSubastaOfertas rows={rows} /> */}\n                            <DataGridSubastaOfertas rows={rows} />\n                            \n                        </Grid>\n\n                        <Grid item xs={7}>  \n                                \n                            <Box style={{ paddingBottom: '40px', paddingTop: '20px' }}>\n                                <Typography align='center'>\n                                    {fecha} \n                                </Typography>\n                                \n                                {startCount && \n                                <div style={{ display:'flex', justifyContent:'center', width:'100%' }}>\n                                    <Box padding={2} sx={{ borderRadius: 1, backgroundColor: '#e6e6e6', margin: 1 }}>\n                                        {minute}\n                                    </Box>\n                                \n                                    <Box padding={2} sx={{ borderRadius: 1, backgroundColor: '#e6e6e6', margin: 1 }}>\n                                        {second}\n                                    </Box>\n                                </div>}\n\n                            </Box>\n\n                            <StepperVertical steps={subastaProductos}/>\n                            {/*  <StepperListSubastaProductos subastaProductos={subastaProductos}/> */}\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </Layout>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}