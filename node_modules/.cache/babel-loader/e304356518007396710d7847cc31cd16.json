{"ast":null,"code":"import _slicedToArray from \"/home/juan/node_projects/js-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState, useRef, createRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Button, Card, CardContent, Container, Grid, TextField, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoEnSubastaActual = _useState6[0],\n      setProductoEnSubastaActual = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rows = _useState8[0],\n      setRows = _useState8[1];\n  /** Input */\n\n\n  var _useState9 = useState(undefined),\n      _useState10 = _slicedToArray(_useState9, 2),\n      valSubastaOferta = _useState10[0],\n      setValSubastaOferta = _useState10[1];\n\n  var count = useRef(0);\n  useEffect(function () {\n    getSubasta();\n    getSubastaProductos();\n    getSubastaOfertas();\n    count.current = count.current + 1;\n  }, []);\n\n  var getSubscripcionProductoSubasta = function getSubscripcionProductoSubasta() {};\n\n  var getSubastaOfertas = function getSubastaOfertas() {\n    console.log(\"called\");\n    var request = new proto.SubastaProductoId();\n    request.setId(\"1\");\n    var stream = subastaService.getSubastaOfertas(request, {});\n    stream.on('data', function (response) {\n      var record = {\n        user: response.getUser(),\n        oferta: response.getOfertaPrecio()\n      };\n      data = rows;\n      data.push(record);\n      setRows(data);\n      console.log(\"rows cargadas\", rows);\n    });\n  };\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n      }\n    });\n  }\n\n  function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            }\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n        setProductoEnSubastaActual(subastaProductosList[0].producto); // producto en subasta\n      }\n    });\n  }\n\n  var handlerCreateSubastaOferta = function handlerCreateSubastaOferta(e) {\n    e.preventDefault();\n    if (valSubastaOferta === \"\") return;\n    var subastaOfertaCreate = new proto.SubastaOfertaCreate();\n    subastaOfertaCreate.setUsersId(1);\n    subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n    subastaOfertaCreate.setSubastasProductosId(1);\n    subastaService.addSubastaOferta(subastaOfertaCreate, {}, function (error, response) {\n      if (error !== null) console.log(error.code, error.message);\n      console.log(response);\n    });\n    setValSubastaOferta(undefined);\n    document.getElementById('valSubastaOferta').value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, subasta.subasta), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"Productos en subasta (\", subastaProductos.length, \") \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 87\n    }\n  }), \"N\\xFAmero de render \", count.current), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Subastando producto id: \", productoEnSubastaActual.producto)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputProps: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*'\n    },\n    id: \"valSubastaOferta\",\n    onChange: function onChange(e) {\n      return setValSubastaOferta(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Ofertar\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlerCreateSubastaOferta,\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }, \"Ofertar\"))), /*#__PURE__*/React.createElement(DataTableSubastaOfertas, {\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StepperListSubastaProductos, {\n    subastaProductos: subastaProductos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nfunction StepperListSubastaProductos(_ref) {\n  var _this = this;\n\n  var subastaProductos = _ref.subastaProductos;\n  var listProductos = subastaProductos && subastaProductos.map(function (subastaproducto, i) {\n    return /*#__PURE__*/React.createElement(SubastaProductosCard, Object.assign({}, subastaproducto, {\n      key: subastaproducto.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 16\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listProductos);\n}\n\nfunction SubastaProductosCard(_ref2) {\n  var producto = _ref2.producto;\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      fontSize: 14\n    },\n    color: \"text.secondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, producto.producto), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, producto.producto.stock)));\n}\n\nfunction DataTableSubastaOfertas(_ref3) {\n  var _this2 = this;\n\n  var rows = _ref3.rows;\n  var listContent = rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.oferta,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, row.user), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, row.oferta));\n  });\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    sx: {\n      marginTop: 2\n    },\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Usuario \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"Oferta\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, listContent)));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useRef","createRef","useParams","Box","Button","Card","CardContent","Container","Grid","TextField","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","proto","subastaService","SubastaServiceClient","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoEnSubastaActual","setProductoEnSubastaActual","rows","setRows","undefined","valSubastaOferta","setValSubastaOferta","count","getSubasta","getSubastaProductos","getSubastaOfertas","current","getSubscripcionProductoSubasta","console","log","request","SubastaProductoId","setId","stream","on","response","record","user","getUser","oferta","getOfertaPrecio","data","push","SubastaId","metadata","err","code","message","getId","fecha","getFecha","activo","getActivo","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","handlerCreateSubastaOferta","e","preventDefault","subastaOfertaCreate","SubastaOfertaCreate","setUsersId","setOfertaPrecio","setSubastasProductosId","addSubastaOferta","error","document","getElementById","value","paddingTop","paddingBottom","length","inputMode","pattern","target","StepperListSubastaProductos","listProductos","subastaproducto","i","SubastaProductosCard","fontSize","DataTableSubastaOfertas","listContent","row","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, createRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Box, Button, Card, CardContent, Container, Grid, TextField, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport proto from '../pb/proto_grpc_web_pb';\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n    const [subasta, setSubasta] = useState({});\n    const [subastaProductos, setSubastaProductos] = useState([]);\n    const [productoEnSubastaActual, setProductoEnSubastaActual] = useState(0);\n    const [rows, setRows] = useState([]);\n    /** Input */\n    const [valSubastaOferta, setValSubastaOferta] = useState(undefined);\n\n    const count = useRef(0);\n    useEffect(()=>{\n        getSubasta();\n        getSubastaProductos();\n        getSubastaOfertas();\n\n        count.current = count.current + 1;\n    }, [])\n\n    const getSubscripcionProductoSubasta = () => {\n        \n    }\n\n    const getSubastaOfertas = () => {\n        console.log(\"called\")\n    \n        let request = new proto.SubastaProductoId();\n        request.setId(\"1\")\n        var stream = subastaService.getSubastaOfertas(request, {});\n\n        stream.on('data', function(response){\n            let record = {\n                user: response.getUser(),\n                oferta: response.getOfertaPrecio()\n            };   \n\n            data = rows;\n            data.push(record)\n            setRows(data)\n            console.log(\"rows cargadas\", rows)\n        })\n\n    };\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n          if (err) {\n            console.log(err.code, err.message);\n          } else {\n            let subasta = {\n                id: response.getId(),\n                subasta: response.getSubasta(),\n                fecha: response.getFecha(),\n                activo: response.getActivo(),\n                created_at: response.getCreatedAt(),\n                updated_at: response.getUpdatedAt()\n            }\n            setSubasta(subasta);\n          }\n        });\n    }\n\n    function getSubastaProductos(){\n        var request = new proto.SubastaId()\n        request.setId(id)\n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                }\n                            }\n                        }\n                    })\n\n                setSubastaProductos(subastaProductosList);\n                setProductoEnSubastaActual(subastaProductosList[0].producto) // producto en subasta\n            }\n        });\n    }\n\n\n    const handlerCreateSubastaOferta = (e) => {\n        e.preventDefault();\n\n        if(valSubastaOferta === \"\") return ;\n        let subastaOfertaCreate = new proto.SubastaOfertaCreate();\n        subastaOfertaCreate.setUsersId(1);\n        subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n        subastaOfertaCreate.setSubastasProductosId(1);\n\n        subastaService.addSubastaOferta(subastaOfertaCreate, {}, (error, response) => {\n            if(error !== null) console.log(error.code, error.message);\n            console.log(response)\n        });\n\n        setValSubastaOferta(undefined)\n        document.getElementById('valSubastaOferta').value = '';\n    }\n\n    return (\n        <>\n            <Box sx={{ paddingTop: 4 }}>\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item xs={6} align=\"left\">      \n                            <Box sx={{ paddingTop:5, paddingBottom:5 }}>\n                                <Typography variant=\"h1\" fontSize={40}>\n                                    {subasta.subasta}\n                                </Typography>        \n                                <Typography variant=\"h5\">\n                                    Productos en subasta ({ subastaProductos.length}) <br></br>\n                                    Número de render {count.current}   \n                                </Typography>    \n                                <h6>Subastando producto id: {productoEnSubastaActual.producto}</h6>\n                            </Box>\n\n                            <Grid container spacing={2}>\n                                <Grid item xs={8}>\n                                    <TextField \n                                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }} \n                                        id=\"valSubastaOferta\" \n                                        onChange={(e) => setValSubastaOferta(e.target.value)} \n                                        fullWidth \n                                        label=\"Ofertar\" \n                                        variant=\"outlined\" />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={handlerCreateSubastaOferta} fullWidth variant=\"outlined\" size=\"large\">Ofertar</Button>\n                                </Grid>\n                            </Grid>\n\n                            <DataTableSubastaOfertas rows={rows} />\n                        </Grid>\n\n                        <Grid item xs={6}>  \n                            <StepperListSubastaProductos subastaProductos={subastaProductos}/>\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </>\n    )\n}\n\n\nfunction StepperListSubastaProductos ({subastaProductos}){\n    const listProductos = subastaProductos && subastaProductos.map((subastaproducto, i) => {\n        return <SubastaProductosCard {...subastaproducto}  key={subastaproducto.id}/>\n    })\n    return (\n        <>   \n            { listProductos }\n        </>\n    )\n}\n\n\nfunction SubastaProductosCard({producto}){\n    return (\n        <Card>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    { producto.producto }\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    { producto.producto.stock }\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\n\nfunction DataTableSubastaOfertas({rows}){\n    const listContent = rows.map((row) => {\n        return <TableRow key={row.oferta}>\n        <TableCell component=\"th\" scope=\"row\">\n            {row.user}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n            {row.oferta}\n        </TableCell>\n        </TableRow>\n    })\n\n\n    return (\n        <TableContainer sx={{ marginTop: 2 }} component={Paper}>\n        <Table aria-label=\"simple table\">\n            <TableHead>\n            <TableRow>\n                <TableCell>Usuario </TableCell>\n                <TableCell align=\"left\">Oferta</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n\n                { listContent }\n\n            </TableBody>\n        </Table>\n        </TableContainer>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}