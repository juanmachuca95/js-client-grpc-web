{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.CreateProductoReq', null, global);\ngoog.exportSymbol('proto.Empty', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.Subastas', null, global);\ngoog.exportSymbol('proto.User', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Subasta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Subasta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subasta.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subasta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subasta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subasta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      subasta: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      fecha: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      activo: jspb.Message.getFieldWithDefault(msg, 4, false),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta();\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\n\n\nproto.Subasta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubasta(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFecha(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subasta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subasta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getSubasta();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getFecha();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional int32 id = 1;\n * @return {number}\n */\n\n\nproto.Subasta.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Subasta.prototype.setId = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string subasta = 2;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getSubasta = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setSubasta = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string fecha = 3;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getFecha = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setFecha = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional bool activo = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.Subasta.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 4, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.Subasta.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.Subasta.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Subasta.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaProducto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaProducto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaProducto.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaProducto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaProducto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaProducto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      subasta: (f = msg.getSubasta()) && proto.Subasta.toObject(includeInstance, f),\n      producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n      activo: jspb.Message.getFieldWithDefault(msg, 4, false),\n      ofertaFinal: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto();\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\n\n\nproto.SubastaProducto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value = new proto.Subasta();\n        reader.readMessage(value, proto.Subasta.deserializeBinaryFromReader);\n        msg.setSubasta(value);\n        break;\n\n      case 3:\n        var value = new proto.Producto();\n        reader.readMessage(value, proto.Producto.deserializeBinaryFromReader);\n        msg.setProducto(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaFinal(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubastasOfertasIdWinner(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaProducto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaProducto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getSubasta();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.Subasta.serializeBinaryToWriter);\n  }\n\n  f = message.getProducto();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.Producto.serializeBinaryToWriter);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getOfertaFinal();\n\n  if (f !== 0.0) {\n    writer.writeFloat(5, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getSubastasOfertasIdWinner();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional Subasta subasta = 2;\n * @return {?proto.Subasta}\n */\n\n\nproto.SubastaProducto.prototype.getSubasta = function () {\n  return (\n    /** @type{?proto.Subasta} */\n    jspb.Message.getWrapperField(this, proto.Subasta, 2)\n  );\n};\n/** @param {?proto.Subasta|undefined} value */\n\n\nproto.SubastaProducto.prototype.setSubasta = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\nproto.SubastaProducto.prototype.clearSubasta = function () {\n  this.setSubasta(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaProducto.prototype.hasSubasta = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional Producto producto = 3;\n * @return {?proto.Producto}\n */\n\n\nproto.SubastaProducto.prototype.getProducto = function () {\n  return (\n    /** @type{?proto.Producto} */\n    jspb.Message.getWrapperField(this, proto.Producto, 3)\n  );\n};\n/** @param {?proto.Producto|undefined} value */\n\n\nproto.SubastaProducto.prototype.setProducto = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\nproto.SubastaProducto.prototype.clearProducto = function () {\n  this.setProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaProducto.prototype.hasProducto = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bool activo = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.SubastaProducto.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 4, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.SubastaProducto.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional float oferta_final = 5;\n * @return {number}\n */\n\n\nproto.SubastaProducto.prototype.getOfertaFinal = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 5, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.SubastaProducto.prototype.setOfertaFinal = function (value) {\n  jspb.Message.setProto3FloatField(this, 5, value);\n};\n/**\n * optional string created_at = 6;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string updated_at = 7;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional string subastas_ofertas_id_winner = 8;\n * @return {string}\n */\n\n\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function (value) {\n  jspb.Message.setProto3StringField(this, 8, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaOferta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaOferta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaOferta.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaOferta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaOferta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaOferta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastaProducto: (f = msg.getSubastaProducto()) && proto.SubastaProducto.toObject(includeInstance, f),\n      ofertaPrecio: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      user: (f = msg.getUser()) && proto.User.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta();\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\n\n\nproto.SubastaOferta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.SubastaProducto();\n        reader.readMessage(value, proto.SubastaProducto.deserializeBinaryFromReader);\n        msg.setSubastaProducto(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setOfertaPrecio(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 5:\n        var value = new proto.User();\n        reader.readMessage(value, proto.User.deserializeBinaryFromReader);\n        msg.setUser(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaOferta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaOferta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastaProducto();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.SubastaProducto.serializeBinaryToWriter);\n  }\n\n  f = message.getOfertaPrecio();\n\n  if (f !== 0.0) {\n    writer.writeFloat(2, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getUser();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.User.serializeBinaryToWriter);\n  }\n};\n/**\n * optional SubastaProducto subasta_producto = 1;\n * @return {?proto.SubastaProducto}\n */\n\n\nproto.SubastaOferta.prototype.getSubastaProducto = function () {\n  return (\n    /** @type{?proto.SubastaProducto} */\n    jspb.Message.getWrapperField(this, proto.SubastaProducto, 1)\n  );\n};\n/** @param {?proto.SubastaProducto|undefined} value */\n\n\nproto.SubastaOferta.prototype.setSubastaProducto = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\nproto.SubastaOferta.prototype.clearSubastaProducto = function () {\n  this.setSubastaProducto(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaOferta.prototype.hasSubastaProducto = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\n\n\nproto.SubastaOferta.prototype.getOfertaPrecio = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 2, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.SubastaOferta.prototype.setOfertaPrecio = function (value) {\n  jspb.Message.setProto3FloatField(this, 2, value);\n};\n/**\n * optional string created_at = 3;\n * @return {string}\n */\n\n\nproto.SubastaOferta.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaOferta.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string updated_at = 4;\n * @return {string}\n */\n\n\nproto.SubastaOferta.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaOferta.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional User user = 5;\n * @return {?proto.User}\n */\n\n\nproto.SubastaOferta.prototype.getUser = function () {\n  return (\n    /** @type{?proto.User} */\n    jspb.Message.getWrapperField(this, proto.User, 5)\n  );\n};\n/** @param {?proto.User|undefined} value */\n\n\nproto.SubastaOferta.prototype.setUser = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\nproto.SubastaOferta.prototype.clearUser = function () {\n  this.setUser(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.SubastaOferta.prototype.hasUser = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.SubastaId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.SubastaId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.SubastaId.prototype.toObject = function (opt_includeInstance) {\n    return proto.SubastaId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.SubastaId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.SubastaId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId();\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\n\n\nproto.SubastaId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.SubastaId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.SubastaId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.SubastaId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.SubastaId.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Subastas = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Subastas.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Subastas, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Subastas.displayName = 'proto.Subastas';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Subastas.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Subastas.prototype.toObject = function (opt_includeInstance) {\n    return proto.Subastas.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Subastas} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Subastas.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subastasList: jspb.Message.toObjectList(msg.getSubastasList(), proto.Subasta.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subastas}\n */\n\n\nproto.Subastas.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subastas();\n  return proto.Subastas.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subastas} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subastas}\n */\n\n\nproto.Subastas.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.Subasta();\n        reader.readMessage(value, proto.Subasta.deserializeBinaryFromReader);\n        msg.addSubastas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Subastas.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Subastas.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subastas} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Subastas.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubastasList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.Subasta.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Subasta subastas = 1;\n * @return {!Array<!proto.Subasta>}\n */\n\n\nproto.Subastas.prototype.getSubastasList = function () {\n  return (\n    /** @type{!Array<!proto.Subasta>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Subasta, 1)\n  );\n};\n/** @param {!Array<!proto.Subasta>} value */\n\n\nproto.Subastas.prototype.setSubastasList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.Subasta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Subasta}\n */\n\n\nproto.Subastas.prototype.addSubastas = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Subasta, opt_index);\n};\n\nproto.Subastas.prototype.clearSubastasList = function () {\n  this.setSubastasList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Empty = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Empty, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Empty.displayName = 'proto.Empty';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Empty.prototype.toObject = function (opt_includeInstance) {\n    return proto.Empty.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Empty} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Empty.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\n\n\nproto.Empty.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty();\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\n\n\nproto.Empty.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Empty.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Empty.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Cliente = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Cliente, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Cliente.prototype.toObject = function (opt_includeInstance) {\n    return proto.Cliente.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Cliente} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Cliente.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente();\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\n\n\nproto.Cliente.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCliente(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCuit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDireccion(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Cliente.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Cliente.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCliente();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getCuit();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getDireccion();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string cliente = 2;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCliente = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setCliente = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string cuit = 3;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCuit = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setCuit = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string direccion = 4;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getDireccion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setDireccion = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.Cliente.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Cliente.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ClienteId = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ClienteId, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ClienteId.prototype.toObject = function (opt_includeInstance) {\n    return proto.ClienteId.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ClienteId} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ClienteId.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId();\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\n\n\nproto.ClienteId.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ClienteId.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ClienteId.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.ClienteId.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.ClienteId.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Producto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Producto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Producto.displayName = 'proto.Producto';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Producto.prototype.toObject = function (opt_includeInstance) {\n    return proto.Producto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Producto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Producto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n      precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n      precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n      precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n      cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto();\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\n\n\nproto.Producto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescripcion(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStock(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioInicial(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioAumento(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioSubasta(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 11:\n        var value = new proto.Cliente();\n        reader.readMessage(value, proto.Cliente.deserializeBinaryFromReader);\n        msg.setCliente(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Producto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Producto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescripcion();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStock();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n\n  f = message.getPrecioInicial();\n\n  if (f !== 0.0) {\n    writer.writeFloat(6, f);\n  }\n\n  f = message.getPrecioAumento();\n\n  if (f !== 0.0) {\n    writer.writeFloat(7, f);\n  }\n\n  f = message.getPrecioSubasta();\n\n  if (f !== 0.0) {\n    writer.writeFloat(8, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n\n  f = message.getCliente();\n\n  if (f != null) {\n    writer.writeMessage(11, f, proto.Cliente.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string producto = 2;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getProducto = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setProducto = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getDescripcion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setDescripcion = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getStock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setStock = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.Producto.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 5, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.Producto.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioInicial = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 6, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setPrecioInicial = function (value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioAumento = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 7, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setPrecioAumento = function (value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\n\n\nproto.Producto.prototype.getPrecioSubasta = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 8, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.Producto.prototype.setPrecioSubasta = function (value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n/**\n * optional string created_at = 9;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\n\n\nproto.Producto.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.Producto.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n/**\n * optional Cliente cliente = 11;\n * @return {?proto.Cliente}\n */\n\n\nproto.Producto.prototype.getCliente = function () {\n  return (\n    /** @type{?proto.Cliente} */\n    jspb.Message.getWrapperField(this, proto.Cliente, 11)\n  );\n};\n/** @param {?proto.Cliente|undefined} value */\n\n\nproto.Producto.prototype.setCliente = function (value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\nproto.Producto.prototype.clearCliente = function () {\n  this.setCliente(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\n\n\nproto.Producto.prototype.hasCliente = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.CreateProductoReq = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.CreateProductoReq, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.CreateProductoReq.displayName = 'proto.CreateProductoReq';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.CreateProductoReq.prototype.toObject = function (opt_includeInstance) {\n    return proto.CreateProductoReq.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.CreateProductoReq} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.CreateProductoReq.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n      precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n      precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n      precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n      clientesId: jspb.Message.getFieldWithDefault(msg, 11, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CreateProductoReq}\n */\n\n\nproto.CreateProductoReq.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CreateProductoReq();\n  return proto.CreateProductoReq.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CreateProductoReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CreateProductoReq}\n */\n\n\nproto.CreateProductoReq.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProducto(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescripcion(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setStock(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActivo(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioInicial(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioAumento(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setPrecioSubasta(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      case 11:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setClientesId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.CreateProductoReq.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.CreateProductoReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CreateProductoReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.CreateProductoReq.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getProducto();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescripcion();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStock();\n\n  if (f !== 0) {\n    writer.writeInt32(4, f);\n  }\n\n  f = message.getActivo();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n\n  f = message.getPrecioInicial();\n\n  if (f !== 0.0) {\n    writer.writeFloat(6, f);\n  }\n\n  f = message.getPrecioAumento();\n\n  if (f !== 0.0) {\n    writer.writeFloat(7, f);\n  }\n\n  f = message.getPrecioSubasta();\n\n  if (f !== 0.0) {\n    writer.writeFloat(8, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n\n  f = message.getClientesId();\n\n  if (f.length > 0) {\n    writer.writeString(11, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string producto = 2;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getProducto = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setProducto = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getDescripcion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setDescripcion = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getStock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setStock = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\n\n\nproto.CreateProductoReq.prototype.getActivo = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getFieldWithDefault(this, 5, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.CreateProductoReq.prototype.setActivo = function (value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getPrecioInicial = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 6, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setPrecioInicial = function (value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getPrecioAumento = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 7, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setPrecioAumento = function (value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\n\n\nproto.CreateProductoReq.prototype.getPrecioSubasta = function () {\n  return (\n    /** @type {number} */\n    +jspb.Message.getFieldWithDefault(this, 8, 0.0)\n  );\n};\n/** @param {number} value */\n\n\nproto.CreateProductoReq.prototype.setPrecioSubasta = function (value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n/**\n * optional string created_at = 9;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n/**\n * optional string clientes_id = 11;\n * @return {string}\n */\n\n\nproto.CreateProductoReq.prototype.getClientesId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 11, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.CreateProductoReq.prototype.setClientesId = function (value) {\n  jspb.Message.setProto3StringField(this, 11, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.User, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.User.displayName = 'proto.User';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.User.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.User.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User();\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\n\n\nproto.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreatedAt(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUpdatedAt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getCreatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getUpdatedAt();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.User.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.User.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setName = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string email = 3;\n * @return {string}\n */\n\n\nproto.User.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setEmail = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string password = 4;\n * @return {string}\n */\n\n\nproto.User.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setPassword = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string created_at = 5;\n * @return {string}\n */\n\n\nproto.User.prototype.getCreatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setCreatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\n\n\nproto.User.prototype.getUpdatedAt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.User.prototype.setUpdatedAt = function (value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/pb/proto_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Subasta","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","subasta","fecha","activo","createdAt","updatedAt","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt32","setId","readString","setSubasta","setFecha","readBool","setActivo","setCreatedAt","setUpdatedAt","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","writeInt32","getSubasta","length","writeString","getFecha","getActivo","writeBool","getCreatedAt","getUpdatedAt","setProto3IntField","setProto3StringField","setProto3BooleanField","SubastaProducto","producto","getProducto","Producto","ofertaFinal","subastasOfertasIdWinner","readMessage","setProducto","readFloat","setOfertaFinal","setSubastasOfertasIdWinner","writeMessage","getOfertaFinal","writeFloat","getSubastasOfertasIdWinner","getWrapperField","setWrapperField","clearSubasta","hasSubasta","getField","clearProducto","hasProducto","setProto3FloatField","SubastaOferta","subastaProducto","getSubastaProducto","ofertaPrecio","user","getUser","User","setSubastaProducto","setOfertaPrecio","setUser","getOfertaPrecio","clearSubastaProducto","hasSubastaProducto","clearUser","hasUser","SubastaId","Subastas","repeatedFields_","subastasList","toObjectList","getSubastasList","addSubastas","writeRepeatedMessage","getRepeatedWrapperField","setSubastasList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSubastasList","Empty","Cliente","cliente","cuit","direccion","setCliente","setCuit","setDireccion","getCliente","getCuit","getDireccion","ClienteId","descripcion","stock","precioInicial","precioAumento","precioSubasta","setDescripcion","setStock","setPrecioInicial","setPrecioAumento","setPrecioSubasta","getDescripcion","getStock","getPrecioInicial","getPrecioAumento","getPrecioSubasta","clearCliente","hasCliente","CreateProductoReq","clientesId","setClientesId","getClientesId","name","email","password","setName","setEmail","setPassword","getName","getEmail","getPassword","object","extend","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Cliente', null, global);\ngoog.exportSymbol('proto.ClienteId', null, global);\ngoog.exportSymbol('proto.CreateProductoReq', null, global);\ngoog.exportSymbol('proto.Empty', null, global);\ngoog.exportSymbol('proto.Producto', null, global);\ngoog.exportSymbol('proto.Subasta', null, global);\ngoog.exportSymbol('proto.SubastaId', null, global);\ngoog.exportSymbol('proto.SubastaOferta', null, global);\ngoog.exportSymbol('proto.SubastaProducto', null, global);\ngoog.exportSymbol('proto.Subastas', null, global);\ngoog.exportSymbol('proto.User', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subasta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Subasta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Subasta.displayName = 'proto.Subasta';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subasta.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subasta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subasta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    subasta: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    fecha: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    activo: jspb.Message.getFieldWithDefault(msg, 4, false),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subasta;\n  return proto.Subasta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subasta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subasta}\n */\nproto.Subasta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubasta(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFecha(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subasta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subasta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subasta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subasta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSubasta();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getFecha();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 id = 1;\n * @return {number}\n */\nproto.Subasta.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.Subasta.prototype.setId = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string subasta = 2;\n * @return {string}\n */\nproto.Subasta.prototype.getSubasta = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setSubasta = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string fecha = 3;\n * @return {string}\n */\nproto.Subasta.prototype.getFecha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setFecha = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool activo = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.Subasta.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.Subasta.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.Subasta.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.Subasta.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Subasta.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaProducto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaProducto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaProducto.displayName = 'proto.SubastaProducto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaProducto.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaProducto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaProducto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    subasta: (f = msg.getSubasta()) && proto.Subasta.toObject(includeInstance, f),\n    producto: (f = msg.getProducto()) && proto.Producto.toObject(includeInstance, f),\n    activo: jspb.Message.getFieldWithDefault(msg, 4, false),\n    ofertaFinal: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    subastasOfertasIdWinner: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaProducto;\n  return proto.SubastaProducto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaProducto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaProducto}\n */\nproto.SubastaProducto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.Subasta;\n      reader.readMessage(value,proto.Subasta.deserializeBinaryFromReader);\n      msg.setSubasta(value);\n      break;\n    case 3:\n      var value = new proto.Producto;\n      reader.readMessage(value,proto.Producto.deserializeBinaryFromReader);\n      msg.setProducto(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaFinal(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubastasOfertasIdWinner(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaProducto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaProducto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaProducto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaProducto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSubasta();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.Subasta.serializeBinaryToWriter\n    );\n  }\n  f = message.getProducto();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.Producto.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getOfertaFinal();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      5,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getSubastasOfertasIdWinner();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Subasta subasta = 2;\n * @return {?proto.Subasta}\n */\nproto.SubastaProducto.prototype.getSubasta = function() {\n  return /** @type{?proto.Subasta} */ (\n    jspb.Message.getWrapperField(this, proto.Subasta, 2));\n};\n\n\n/** @param {?proto.Subasta|undefined} value */\nproto.SubastaProducto.prototype.setSubasta = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.SubastaProducto.prototype.clearSubasta = function() {\n  this.setSubasta(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaProducto.prototype.hasSubasta = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Producto producto = 3;\n * @return {?proto.Producto}\n */\nproto.SubastaProducto.prototype.getProducto = function() {\n  return /** @type{?proto.Producto} */ (\n    jspb.Message.getWrapperField(this, proto.Producto, 3));\n};\n\n\n/** @param {?proto.Producto|undefined} value */\nproto.SubastaProducto.prototype.setProducto = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.SubastaProducto.prototype.clearProducto = function() {\n  this.setProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaProducto.prototype.hasProducto = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool activo = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.SubastaProducto.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.SubastaProducto.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional float oferta_final = 5;\n * @return {number}\n */\nproto.SubastaProducto.prototype.getOfertaFinal = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));\n};\n\n\n/** @param {number} value */\nproto.SubastaProducto.prototype.setOfertaFinal = function(value) {\n  jspb.Message.setProto3FloatField(this, 5, value);\n};\n\n\n/**\n * optional string created_at = 6;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string updated_at = 7;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string subastas_ofertas_id_winner = 8;\n * @return {string}\n */\nproto.SubastaProducto.prototype.getSubastasOfertasIdWinner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaProducto.prototype.setSubastasOfertasIdWinner = function(value) {\n  jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaOferta = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaOferta, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaOferta.displayName = 'proto.SubastaOferta';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaOferta.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaOferta.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaOferta} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastaProducto: (f = msg.getSubastaProducto()) && proto.SubastaProducto.toObject(includeInstance, f),\n    ofertaPrecio: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    user: (f = msg.getUser()) && proto.User.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaOferta;\n  return proto.SubastaOferta.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaOferta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaOferta}\n */\nproto.SubastaOferta.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.SubastaProducto;\n      reader.readMessage(value,proto.SubastaProducto.deserializeBinaryFromReader);\n      msg.setSubastaProducto(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setOfertaPrecio(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 5:\n      var value = new proto.User;\n      reader.readMessage(value,proto.User.deserializeBinaryFromReader);\n      msg.setUser(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaOferta.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaOferta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaOferta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaOferta.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastaProducto();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.SubastaProducto.serializeBinaryToWriter\n    );\n  }\n  f = message.getOfertaPrecio();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getUser();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.User.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SubastaProducto subasta_producto = 1;\n * @return {?proto.SubastaProducto}\n */\nproto.SubastaOferta.prototype.getSubastaProducto = function() {\n  return /** @type{?proto.SubastaProducto} */ (\n    jspb.Message.getWrapperField(this, proto.SubastaProducto, 1));\n};\n\n\n/** @param {?proto.SubastaProducto|undefined} value */\nproto.SubastaOferta.prototype.setSubastaProducto = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.SubastaOferta.prototype.clearSubastaProducto = function() {\n  this.setSubastaProducto(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaOferta.prototype.hasSubastaProducto = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional float oferta_precio = 2;\n * @return {number}\n */\nproto.SubastaOferta.prototype.getOfertaPrecio = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.SubastaOferta.prototype.setOfertaPrecio = function(value) {\n  jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n/**\n * optional string created_at = 3;\n * @return {string}\n */\nproto.SubastaOferta.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaOferta.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string updated_at = 4;\n * @return {string}\n */\nproto.SubastaOferta.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaOferta.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional User user = 5;\n * @return {?proto.User}\n */\nproto.SubastaOferta.prototype.getUser = function() {\n  return /** @type{?proto.User} */ (\n    jspb.Message.getWrapperField(this, proto.User, 5));\n};\n\n\n/** @param {?proto.User|undefined} value */\nproto.SubastaOferta.prototype.setUser = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.SubastaOferta.prototype.clearUser = function() {\n  this.setUser(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.SubastaOferta.prototype.hasUser = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SubastaId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SubastaId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.SubastaId.displayName = 'proto.SubastaId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SubastaId.prototype.toObject = function(opt_includeInstance) {\n  return proto.SubastaId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SubastaId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SubastaId;\n  return proto.SubastaId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SubastaId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SubastaId}\n */\nproto.SubastaId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SubastaId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SubastaId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SubastaId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SubastaId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.SubastaId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.SubastaId.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Subastas = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Subastas.repeatedFields_, null);\n};\ngoog.inherits(proto.Subastas, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Subastas.displayName = 'proto.Subastas';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Subastas.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Subastas.prototype.toObject = function(opt_includeInstance) {\n  return proto.Subastas.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Subastas} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subastas.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subastasList: jspb.Message.toObjectList(msg.getSubastasList(),\n    proto.Subasta.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Subastas}\n */\nproto.Subastas.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Subastas;\n  return proto.Subastas.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Subastas} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Subastas}\n */\nproto.Subastas.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.Subasta;\n      reader.readMessage(value,proto.Subasta.deserializeBinaryFromReader);\n      msg.addSubastas(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Subastas.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Subastas.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Subastas} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Subastas.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubastasList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.Subasta.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Subasta subastas = 1;\n * @return {!Array<!proto.Subasta>}\n */\nproto.Subastas.prototype.getSubastasList = function() {\n  return /** @type{!Array<!proto.Subasta>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Subasta, 1));\n};\n\n\n/** @param {!Array<!proto.Subasta>} value */\nproto.Subastas.prototype.setSubastasList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.Subasta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Subasta}\n */\nproto.Subastas.prototype.addSubastas = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Subasta, opt_index);\n};\n\n\nproto.Subastas.prototype.clearSubastasList = function() {\n  this.setSubastasList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Empty.displayName = 'proto.Empty';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty;\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Cliente = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Cliente, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Cliente.displayName = 'proto.Cliente';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Cliente.prototype.toObject = function(opt_includeInstance) {\n  return proto.Cliente.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Cliente} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    cliente: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    cuit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    direccion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Cliente;\n  return proto.Cliente.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Cliente} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Cliente}\n */\nproto.Cliente.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCliente(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCuit(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDireccion(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Cliente.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Cliente.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Cliente} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Cliente.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCuit();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDireccion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.Cliente.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string cliente = 2;\n * @return {string}\n */\nproto.Cliente.prototype.getCliente = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setCliente = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string cuit = 3;\n * @return {string}\n */\nproto.Cliente.prototype.getCuit = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setCuit = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string direccion = 4;\n * @return {string}\n */\nproto.Cliente.prototype.getDireccion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setDireccion = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.Cliente.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.Cliente.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Cliente.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ClienteId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ClienteId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.ClienteId.displayName = 'proto.ClienteId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ClienteId.prototype.toObject = function(opt_includeInstance) {\n  return proto.ClienteId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ClienteId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ClienteId;\n  return proto.ClienteId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ClienteId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ClienteId}\n */\nproto.ClienteId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ClienteId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ClienteId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ClienteId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ClienteId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.ClienteId.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.ClienteId.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Producto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Producto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Producto.displayName = 'proto.Producto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Producto.prototype.toObject = function(opt_includeInstance) {\n  return proto.Producto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Producto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n    precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n    precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    cliente: (f = msg.getCliente()) && proto.Cliente.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Producto;\n  return proto.Producto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Producto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Producto}\n */\nproto.Producto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescripcion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStock(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioInicial(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioAumento(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioSubasta(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 11:\n      var value = new proto.Cliente;\n      reader.readMessage(value,proto.Cliente.deserializeBinaryFromReader);\n      msg.setCliente(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Producto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Producto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Producto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Producto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescripcion();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStock();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getPrecioInicial();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      6,\n      f\n    );\n  }\n  f = message.getPrecioAumento();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getPrecioSubasta();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      8,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getCliente();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.Cliente.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.Producto.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string producto = 2;\n * @return {string}\n */\nproto.Producto.prototype.getProducto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setProducto = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\nproto.Producto.prototype.getDescripcion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setDescripcion = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\nproto.Producto.prototype.getStock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setStock = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.Producto.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.Producto.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioInicial = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setPrecioInicial = function(value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n\n\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioAumento = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setPrecioAumento = function(value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\nproto.Producto.prototype.getPrecioSubasta = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.Producto.prototype.setPrecioSubasta = function(value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n\n\n/**\n * optional string created_at = 9;\n * @return {string}\n */\nproto.Producto.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\nproto.Producto.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Producto.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n\n\n/**\n * optional Cliente cliente = 11;\n * @return {?proto.Cliente}\n */\nproto.Producto.prototype.getCliente = function() {\n  return /** @type{?proto.Cliente} */ (\n    jspb.Message.getWrapperField(this, proto.Cliente, 11));\n};\n\n\n/** @param {?proto.Cliente|undefined} value */\nproto.Producto.prototype.setCliente = function(value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\n\nproto.Producto.prototype.clearCliente = function() {\n  this.setCliente(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Producto.prototype.hasCliente = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.CreateProductoReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.CreateProductoReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.CreateProductoReq.displayName = 'proto.CreateProductoReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.CreateProductoReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.CreateProductoReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.CreateProductoReq} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CreateProductoReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    producto: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    descripcion: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stock: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    activo: jspb.Message.getFieldWithDefault(msg, 5, false),\n    precioInicial: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),\n    precioAumento: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    precioSubasta: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    clientesId: jspb.Message.getFieldWithDefault(msg, 11, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.CreateProductoReq}\n */\nproto.CreateProductoReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.CreateProductoReq;\n  return proto.CreateProductoReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.CreateProductoReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.CreateProductoReq}\n */\nproto.CreateProductoReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProducto(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescripcion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStock(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActivo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioInicial(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioAumento(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setPrecioSubasta(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientesId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.CreateProductoReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.CreateProductoReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.CreateProductoReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.CreateProductoReq.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProducto();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescripcion();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStock();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getActivo();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getPrecioInicial();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      6,\n      f\n    );\n  }\n  f = message.getPrecioAumento();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getPrecioSubasta();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      8,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getClientesId();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string producto = 2;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getProducto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setProducto = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string descripcion = 3;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getDescripcion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setDescripcion = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int32 stock = 4;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getStock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setStock = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bool activo = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.CreateProductoReq.prototype.getActivo = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.CreateProductoReq.prototype.setActivo = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional float precio_inicial = 6;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getPrecioInicial = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setPrecioInicial = function(value) {\n  jspb.Message.setProto3FloatField(this, 6, value);\n};\n\n\n/**\n * optional float precio_aumento = 7;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getPrecioAumento = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setPrecioAumento = function(value) {\n  jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional float precio_subasta = 8;\n * @return {number}\n */\nproto.CreateProductoReq.prototype.getPrecioSubasta = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));\n};\n\n\n/** @param {number} value */\nproto.CreateProductoReq.prototype.setPrecioSubasta = function(value) {\n  jspb.Message.setProto3FloatField(this, 8, value);\n};\n\n\n/**\n * optional string created_at = 9;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * optional string updated_at = 10;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 10, value);\n};\n\n\n/**\n * optional string clientes_id = 11;\n * @return {string}\n */\nproto.CreateProductoReq.prototype.getClientesId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/** @param {string} value */\nproto.CreateProductoReq.prototype.setClientesId = function(value) {\n  jspb.Message.setProto3StringField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.User.displayName = 'proto.User';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.User}\n */\nproto.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.User;\n  return proto.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.User}\n */\nproto.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.User.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.User.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string email = 3;\n * @return {string}\n */\nproto.User.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setEmail = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.User.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setPassword = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string created_at = 5;\n * @return {string}\n */\nproto.User.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string updated_at = 6;\n * @return {string}\n */\nproto.User.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.User.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}