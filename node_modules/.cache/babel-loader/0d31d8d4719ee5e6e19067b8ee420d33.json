{"ast":null,"code":"import _toConsumableArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/juan/node_projects/js-client-grpc-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js\";\nimport React, { useEffect, useState, useRef, createRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Button, Card, CardContent, Container, Grid, TextField, Theme, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport proto from '../pb/proto_grpc_web_pb';\nimport { ClassNames } from '@emotion/react';\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    input: {\n      margin: theme.spacing(1),\n      height: 38\n    }\n  });\n});\nexport default function JoinSubasta() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      subasta = _useState2[0],\n      setSubasta = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subastaProductos = _useState4[0],\n      setSubastaProductos = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      productoEnSubastaActual = _useState6[0],\n      setProductoEnSubastaActual = _useState6[1];\n\n  var _useState7 = useState([{\n    field: 'user',\n    headerName: 'Usuario'\n  }, {\n    field: 'oferta',\n    headerName: 'Oferta'\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      columns = _useState8[0],\n      setColumns = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rows = _useState10[0],\n      setRows = _useState10[1];\n  /** Input */\n\n\n  var _useState11 = useState(undefined),\n      _useState12 = _slicedToArray(_useState11, 2),\n      valSubastaOferta = _useState12[0],\n      setValSubastaOferta = _useState12[1];\n\n  var count = useRef(0);\n  useEffect(function () {\n    getSubasta();\n    getSubastaProductos();\n    getSubastaOfertas();\n    count.current = count.current + 1;\n  }, []);\n\n  var getSubastaOfertas = function getSubastaOfertas() {\n    console.log(\"called\");\n    var request = new proto.SubastaProductoId();\n    request.setId(\"1\");\n    var stream = subastaService.getSubastaOfertas(request, {});\n    stream.on('data', function (response) {\n      var record = {\n        user: response.getUser(),\n        oferta: response.getOfertaPrecio()\n      };\n      setRows(function (rows) {\n        return [].concat(_toConsumableArray(rows), [record]);\n      });\n      console.log(record);\n    });\n  };\n\n  function getSubasta() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubasta(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var _subasta = {\n          id: response.getId(),\n          subasta: response.getSubasta(),\n          fecha: response.getFecha(),\n          activo: response.getActivo(),\n          created_at: response.getCreatedAt(),\n          updated_at: response.getUpdatedAt()\n        };\n        setSubasta(_subasta);\n      }\n    });\n  }\n\n  function getSubastaProductos() {\n    var request = new proto.SubastaId();\n    request.setId(id);\n    var metadata = {};\n    subastaService.getSubastaProductos(request, metadata, function (err, response) {\n      if (err) {\n        console.log(err.code, err.message);\n      } else {\n        var subastaProductosList = response.getSubastasProductosList();\n        subastaProductosList = subastaProductosList.map(function (subastaProducto) {\n          return {\n            id: subastaProducto.array[0],\n            producto: {\n              productos_id: subastaProducto.array[1][0],\n              producto: subastaProducto.array[1][1],\n              descripcion: subastaProducto.array[1][2],\n              stock: subastaProducto.array[1][3],\n              precio_inicial: subastaProducto.array[1][4],\n              precio_aumento: subastaProducto.array[1][5],\n              precio_subasta: subastaProducto.array[1][6],\n              cliente: {\n                cliente_id: subastaProducto.array[1][7][0],\n                cliente: subastaProducto.array[1][7][1],\n                cuit: subastaProducto.array[1][7][2],\n                direccion: subastaProducto.array[1][7][3],\n                ciudad: subastaProducto.array[1][7][4],\n                iva: subastaProducto.array[1][7][5]\n              }\n            }\n          };\n        });\n        setSubastaProductos(subastaProductosList);\n        setProductoEnSubastaActual(subastaProductosList[0].producto); // producto en subasta\n      }\n    });\n  }\n\n  var handlerCreateSubastaOferta = function handlerCreateSubastaOferta(e) {\n    e.preventDefault();\n    if (valSubastaOferta === \"\") return;\n    var subastaOfertaCreate = new proto.SubastaOfertaCreate();\n    subastaOfertaCreate.setUsersId(1);\n    subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n    subastaOfertaCreate.setSubastasProductosId(1);\n    subastaService.addSubastaOferta(subastaOfertaCreate, {}, function (error, response) {\n      if (error !== null) console.log(error.code, error.message);\n      console.log(response);\n    });\n    setValSubastaOferta(undefined);\n    document.getElementById('valSubastaOferta').value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    fontSize: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, subasta.subasta), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Productos en subasta (\", subastaProductos.length, \") \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 87\n    }\n  }), \"N\\xFAmero de render \", count.current), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, \"Subastando producto id: \", productoEnSubastaActual.producto)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputProps: {\n      inputMode: 'numeric',\n      pattern: '[0-9]*',\n      className: classes.input\n    },\n    id: \"valSubastaOferta\",\n    onChange: function onChange(e) {\n      return setValSubastaOferta(e.target.value);\n    },\n    fullWidth: true,\n    label: \"Ofertar\",\n    size: \"large\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlerCreateSubastaOferta,\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"large\"\n    /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, \"Ofertar\"))), /*#__PURE__*/React.createElement(DataGridSubastaOfertas, {\n    rows: rows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StepperListSubastaProductos, {\n    subastaProductos: subastaProductos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nfunction StepperListSubastaProductos(_ref) {\n  var _this = this;\n\n  var subastaProductos = _ref.subastaProductos;\n  var listProductos = subastaProductos && subastaProductos.map(function (subastaproducto, i) {\n    return /*#__PURE__*/React.createElement(SubastaProductosCard, Object.assign({}, subastaproducto, {\n      key: subastaproducto.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 16\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listProductos);\n}\n\nfunction SubastaProductosCard(_ref2) {\n  var producto = _ref2.producto;\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      fontSize: 14\n    },\n    color: \"text.secondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, producto.producto), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, producto.producto.stock)));\n}\n\nfunction DataGridSubastaOfertas(_ref3) {\n  var rows = _ref3.rows;\n  var columns = [{\n    field: 'user',\n    headerName: 'Usuario',\n    width: '272'\n  }, {\n    field: 'oferta',\n    headerName: '$ Oferta',\n    width: '272'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%',\n      paddingTop: '40px',\n      paddingBottom: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    getRowId: function getRowId(row) {\n      return row.oferta;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["/home/juan/node_projects/js-client-grpc-web/src/Subastas/JoinSubasta.js"],"names":["React","useEffect","useState","useRef","createRef","useParams","Box","Button","Card","CardContent","Container","Grid","TextField","Theme","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DataGrid","proto","ClassNames","subastaService","SubastaServiceClient","useStyles","makeStyles","theme","createStyles","input","margin","spacing","height","JoinSubasta","id","subasta","setSubasta","subastaProductos","setSubastaProductos","productoEnSubastaActual","setProductoEnSubastaActual","field","headerName","columns","setColumns","rows","setRows","undefined","valSubastaOferta","setValSubastaOferta","count","getSubasta","getSubastaProductos","getSubastaOfertas","current","console","log","request","SubastaProductoId","setId","stream","on","response","record","user","getUser","oferta","getOfertaPrecio","SubastaId","metadata","err","code","message","getId","fecha","getFecha","activo","getActivo","created_at","getCreatedAt","updated_at","getUpdatedAt","subastaProductosList","getSubastasProductosList","map","subastaProducto","array","producto","productos_id","descripcion","stock","precio_inicial","precio_aumento","precio_subasta","cliente","cliente_id","cuit","direccion","ciudad","iva","handlerCreateSubastaOferta","e","preventDefault","subastaOfertaCreate","SubastaOfertaCreate","setUsersId","setOfertaPrecio","setSubastasProductosId","addSubastaOferta","error","document","getElementById","value","paddingTop","paddingBottom","length","inputMode","pattern","className","classes","target","StepperListSubastaProductos","listProductos","subastaproducto","i","SubastaProductosCard","fontSize","DataGridSubastaOfertas","width","row"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, createRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Box, Button, Card, CardContent, Container, Grid, TextField, Theme, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport proto from '../pb/proto_grpc_web_pb';\nimport { ClassNames } from '@emotion/react';\n\nvar subastaService = new proto.SubastaServiceClient('http://0.0.0.0:8000');\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      margin: theme.spacing(1),\n      height: 38\n    }\n  })\n);\n\nexport default function JoinSubasta(){\n    const { id } = useParams();\n    const [subasta, setSubasta] = useState({});\n    const [subastaProductos, setSubastaProductos] = useState([]);\n    const [productoEnSubastaActual, setProductoEnSubastaActual] = useState(0);\n    const [columns, setColumns] = useState([\n        { field: 'user', headerName: 'Usuario' },\n        { field: 'oferta', headerName: 'Oferta' }\n    ]);\n\n    const [rows, setRows] = useState([]);\n    /** Input */\n    const [valSubastaOferta, setValSubastaOferta] = useState(undefined);\n\n    const count = useRef(0);\n    useEffect(()=>{\n        getSubasta();\n        getSubastaProductos();\n        getSubastaOfertas();\n\n        count.current = count.current + 1;\n    }, [])\n\n    const getSubastaOfertas = () => {\n        console.log(\"called\")\n    \n        let request = new proto.SubastaProductoId();\n        request.setId(\"1\")\n        var stream = subastaService.getSubastaOfertas(request, {});\n\n        stream.on('data', function(response){\n            let record = {\n                user: response.getUser(),\n                oferta: response.getOfertaPrecio()\n            };   \n\n            setRows((rows) => [...rows, record])\n            console.log(record)\n        })\n\n    };\n\n    function getSubasta() {\n        var request = new proto.SubastaId();\n        request.setId(id)\n        var metadata = {};\n    \n        subastaService.getSubasta(request, metadata, (err, response) => {\n          if (err) {\n            console.log(err.code, err.message);\n          } else {\n            let subasta = {\n                id: response.getId(),\n                subasta: response.getSubasta(),\n                fecha: response.getFecha(),\n                activo: response.getActivo(),\n                created_at: response.getCreatedAt(),\n                updated_at: response.getUpdatedAt()\n            }\n            setSubasta(subasta);\n          }\n        });\n    }\n\n    function getSubastaProductos(){\n        var request = new proto.SubastaId()\n        request.setId(id)\n        var metadata = {}\n\n        subastaService.getSubastaProductos(request, metadata, (err, response) => {\n            if(err){\n                console.log(err.code, err.message)\n            }else{\n                let subastaProductosList = response.getSubastasProductosList();\n                subastaProductosList = subastaProductosList\n                    .map((subastaProducto) => {\n                        return {\n                            id: subastaProducto.array[0],\n                            producto: {\n                                productos_id: subastaProducto.array[1][0],\n                                producto: subastaProducto.array[1][1],\n                                descripcion: subastaProducto.array[1][2],\n                                stock: subastaProducto.array[1][3],\n                                precio_inicial: subastaProducto.array[1][4],\n                                precio_aumento: subastaProducto.array[1][5],\n                                precio_subasta: subastaProducto.array[1][6],\n                                cliente: {\n                                    cliente_id: subastaProducto.array[1][7][0],\n                                    cliente: subastaProducto.array[1][7][1],\n                                    cuit: subastaProducto.array[1][7][2],\n                                    direccion: subastaProducto.array[1][7][3],\n                                    ciudad: subastaProducto.array[1][7][4],\n                                    iva: subastaProducto.array[1][7][5],\n                                }\n                            }\n                        }\n                    })\n\n                setSubastaProductos(subastaProductosList);\n                setProductoEnSubastaActual(subastaProductosList[0].producto) // producto en subasta\n            }\n        });\n    }\n\n\n    const handlerCreateSubastaOferta = (e) => {\n        e.preventDefault();\n\n        if(valSubastaOferta === \"\") return ;\n        let subastaOfertaCreate = new proto.SubastaOfertaCreate();\n        subastaOfertaCreate.setUsersId(1);\n        subastaOfertaCreate.setOfertaPrecio(valSubastaOferta);\n        subastaOfertaCreate.setSubastasProductosId(1);\n\n        subastaService.addSubastaOferta(subastaOfertaCreate, {}, (error, response) => {\n            if(error !== null) console.log(error.code, error.message);\n            console.log(response)\n        });\n\n        setValSubastaOferta(undefined)\n        document.getElementById('valSubastaOferta').value = '';\n    }\n\n    return (\n        <>\n            <Box sx={{ paddingTop: 4 }}>\n                <Container>\n                    <Grid container spacing={5}>\n                        <Grid item xs={6} align=\"left\">      \n                            <Box sx={{ paddingTop:5, paddingBottom:5 }}>\n                                <Typography variant=\"h1\" fontSize={40}>\n                                    {subasta.subasta}\n                                </Typography>        \n                                <Typography variant=\"h5\">\n                                    Productos en subasta ({ subastaProductos.length}) <br></br>\n                                    Número de render {count.current}   \n                                </Typography>    \n                                <h6>Subastando producto id: {productoEnSubastaActual.producto}</h6>\n                            </Box>\n\n                            <Grid container spacing={2}>\n                                <Grid item xs={8}>\n                                    <TextField \n                                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*', className: classes.input  }} \n                                        id=\"valSubastaOferta\" \n                                        onChange={(e) => setValSubastaOferta(e.target.value)} \n                                        fullWidth \n                                        label=\"Ofertar\" \n                                        size='large'\n                                        variant=\"outlined\" />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={handlerCreateSubastaOferta} fullWidth variant=\"outlined\" size=\"large\" \n                                        /* style={{ paddingTop: '13px', paddingBottom: '13px' }} */\n                                    >\n                                        Ofertar\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                            {/* <DataTableSubastaOfertas rows={rows} /> */}\n                            <DataGridSubastaOfertas rows={rows} />\n                            \n                        </Grid>\n\n                        <Grid item xs={6}>  \n                            <StepperListSubastaProductos subastaProductos={subastaProductos}/>\n                        </Grid>\n                    </Grid>\n\n                         \n                </Container>\n            </Box>\n        </>\n    )\n}\n\n\nfunction StepperListSubastaProductos ({subastaProductos}){\n    const listProductos = subastaProductos && subastaProductos.map((subastaproducto, i) => {\n        return <SubastaProductosCard {...subastaproducto}  key={subastaproducto.id}/>\n    })\n    return (\n        <>   \n            { listProductos }\n        </>\n    )\n}\n\n\nfunction SubastaProductosCard({producto}){\n    return (\n        <Card>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    { producto.producto }\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    { producto.producto.stock }\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction DataGridSubastaOfertas({rows}){\n    const columns = [\n        { field: 'user', headerName: 'Usuario', width: '272' },\n        { field: 'oferta', headerName: '$ Oferta', width: '272' },\n    ];\n\n    return (\n        <div style={{ height: 400, width: '100%', paddingTop: '40px', paddingBottom: '40px' }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n            getRowId={(row) => row.oferta}\n          />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}