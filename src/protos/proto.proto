syntax = "proto3";

option go_package = "pb";

/* Subasta service */
message Subasta {
    int32 id = 1;
    string subasta = 2;
    string fecha = 3;
    bool activo = 4;
    string created_at = 5;
    string updated_at = 6;
}

message SubastaProducto {
    int32 id = 1;
    Producto producto = 2; // productos_id
    bool activo = 3;
    float oferta_final = 4;
    int32 subastas_ofertas_id_winner = 5;
}

message SubastaProductos {
    repeated SubastaProducto subastas_productos = 1;
}

message SubastaId {
    string id = 1;
}

message Subastas {
    repeated Subasta subastas = 1;
}

message SubastaProductoId {
    string id = 1;
}

message SubastaOferta {
    string user = 1;
    float oferta_precio = 2;
}

message Empty {}

service SubastaService {
    rpc GetSubasta(SubastaId) returns (Subasta) {};
    rpc GetSubastas(Empty) returns (Subastas){};
    rpc GetSubastaProducto(SubastaId) returns (SubastaProducto){}
    rpc GetSubastaProductos(SubastaId) returns (SubastaProductos){}
    rpc GetSubastaOfertas(SubastaProductoId) returns (stream SubastaOferta){}
}

/* Cliente Service */
message Cliente {
    int32 id = 1;
    string cliente = 2;
    string cuit = 3;
    string direccion = 4;
    string ciudad = 5;
    string iva = 6;
}

message ClienteId {
    string id = 1;
}

service ClienteService {
    rpc GetCliente (ClienteId) returns (Cliente) {};
}

/* Producto Service */
message Producto {
    int32 id = 1;
    string producto = 2;
    string descripcion = 3;
    int32 stock = 4;
    float precio_inicial = 5;
    float precio_aumento = 6;
    float precio_subasta = 7;
    Cliente cliente = 8;
}

message ProductoId {
    string id = 1;
}


service ProductoService {
    rpc GetProducto(ProductoId) returns (Producto){};
}


/* Users Service */
message User {
    string id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    string created_at = 5;
    string updated_at = 6;
}